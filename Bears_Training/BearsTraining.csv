bugid	bug	buggy	patch	lineNo	action
16	bears_135	buggy:  if  (beginIndex  >  0)  {  if  (endIndex  >  0)  {  context:  if  (buffer.getByte(guessedIndex  +  4)  ==  ','  &&  isLetter(buffer.getByte(guessedIndex  +  1))  &&  isLetter(buffer.getByte(guessedIndex  +  2))  &&  isLetter(buffer.getByte(guessedIndex  +  3)))  {  return  true;  }  return  false;  }  });      if  (beginIndex  >  0)  {  buf.readerIndex(beginIndex);  int  endIndex  =  buf.indexOf(beginIndex,  buf.writerIndex(),  (byte)  '\n');      if  (endIndex  >  0)  {  ChannelBuffer  frame  =  buf.readBytes(endIndex  -  beginIndex);  	if  (beginIndex  >=  0)  {  if  (endIndex  >=  0)  {  	50	replace-2
244	bears_49	buggy:  res.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(values[0].getClass())));  context:  }  return  this.addValueExpression(elementName,  convertValueToExpression(value));  }  private  CtExpression  convertValueToExpression(Object  value)  {  CtExpression  res;  if  (value.getClass().isArray())  {  res  =  getFactory().Core().createNewArray();  Object[]  values  =  (Object[])  value;  res.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(values[0].getClass())));  for  (Object  o  :  values)  {  ((CtNewArray)  res).addElement(convertValueToExpression(o));  }  }  else  if  (value  instanceof  Collection)  {  res  =  getFactory().Core().createNewArray();  Collection  values  =  (Collection)  value;  	  res.setType(getFactory().Type().createArrayReference(getFactory().Type().createReference(value.getClass().getComponentType())));  	113	replace-1
93	bears_162	buggy:  context:  }  else  {  if  (dataType.length()  >  -1)  column.length((int)  dataType.length());  if  (dataType.scale()  >  -1)  column.scale(dataType.scale());  }  if  (Types.NCHAR  ==  dataType.jdbcType()  ||  Types.NVARCHAR  ==  dataType.jdbcType())  {  column.charsetName( "utf8 ");  }  if  (tokens.canConsume( "CHARSET ")  ||  tokens.canConsume( "CHARACTER ",   "SET "))  {  	if  (Types.DECIMAL  ==  dataType.jdbcType())  {  if  (dataType.length()  ==  -1)  {  column.length(10);  }  if  (dataType.scale()  ==  -1)  {  column.scale(0);  }  }    	837	add
135	bears_174	buggy:  String[]  postgreSqlMrefIds  =  (String[])  arrayValue.getArray();  String  mrefIdStr  =  postgreSqlMrefIds[i];  Object  mrefId  =  mrefIdStr  !=  null  ?  convertMrefIdValue(mrefIdStr,  idAttr)  :  null;  context:  private  Object  mapValueOneToMany(Array  arrayValue,  Attribute  attr)  throws  SQLException  {  EntityType  entityType  =  attr.getRefEntity();  Object  value;  String[]  postgreSqlMrefIds  =  (String[])  arrayValue.getArray();  if  (postgreSqlMrefIds.length  >  0  &&  postgreSqlMrefIds[0]  !=  null)  {  Attribute  idAttr  =  entityType.getIdAttribute();  Object[]  mrefIds  =  new  Object[postgreSqlMrefIds.length];  for  (int  i  =  0;  i  <  postgreSqlMrefIds.length;  ++i)  {  String  mrefIdStr  =  postgreSqlMrefIds[i];  Object  mrefId  =  mrefIdStr  !=  null  ?  convertMrefIdValue(mrefIdStr,  idAttr)  :  null;  	Object[]  postgreSqlMrefIds  =  (Object[])  arrayValue.getArray();  Object  mrefIdRaw  =  postgreSqlMrefIds[i];  Object  mrefId  =  mrefIdRaw  !=  null  ?  convertMrefIdValue(mrefIdRaw.toString(),  idAttr)  :  null;  	195	replace-3
26	bears_123	buggy:  if  (deviceState.getMotionPosition()  !=  null  &&  startEventIndex  ==  -1  &&  trips  !=  deviceState.getMotionState())  {  if  (trips  ==  deviceState.getMotionState())  {  if  (startNoEventIndex  ==  -1)  {  startNoEventIndex  =  i;  }  else  if  (deviceState.getMotionPosition()  ==  null)  {  startNoEventIndex  =  -1;  }  context:  if  (positions  !=  null  &&  !positions.isEmpty())  {  boolean  trips  =  reportClass.equals(TripReport.class);  MotionEventHandler  motionHandler  =  new  MotionEventHandler(tripsConfig);  DeviceState  deviceState  =  new  DeviceState();  deviceState.setMotionState(isMoving(positions,  0,  tripsConfig,  speedThreshold));  int  startEventIndex  =  trips  ==  deviceState.getMotionState()  ?  0  :  -1;  int  startNoEventIndex  =  -1;  for  (int  i  =  0;  i  <  positions.size();  i++)  {  Map<Event,  Position>  event  =  motionHandler.updateMotionState(deviceState,  positions.get(i),  isMoving(positions,  i,  tripsConfig,  speedThreshold));      if  (deviceState.getMotionPosition()  !=  null  &&  startEventIndex  ==  -1          &&  trips  !=  deviceState.getMotionState())  {  startEventIndex  =  i;  startNoEventIndex  =  -1;  	if  (startEventIndex  ==  -1  &&  (trips  !=  deviceState.getMotionState()  &&  deviceState.getMotionPosition()  !=  null  ||  trips  ==  deviceState.getMotionState()  &&  event  !=  null))  {  }  else  if  (trips  !=  deviceState.getMotionState()  &&  startEventIndex  !=  -1  &&  deviceState.getMotionPosition()  ==  null  &&  event  ==  null)  {  startEventIndex  =  -1;  if  (startNoEventIndex  ==  -1  &&  (trips  ==  deviceState.getMotionState()  &&  deviceState.getMotionPosition()  !=  null  ||  trips  !=  deviceState.getMotionState()  &&  event  !=  null))  {  startNoEventIndex  =  i;  }  else  if  (startNoEventIndex  !=  -1  &&  deviceState.getMotionPosition()  ==  null  &&  event  ==  null)  {  startNoEventIndex  =  -1;  	287	replace-8
210	bears_73	buggy:  if  (Launcher.LOGGER.isTraceEnabled())  {  Launcher.LOGGER.trace(e);  context:  private  class  OutputFunctionWrapper  extends  AbstractStep  {  public  void  accept(Object  element)  {  if  (element  ==  null  ||  isTerminated())  {  return;  }  try  {  nextStep.accept(element);  }  catch  (ClassCastException  e)  {  if  (Launcher.LOGGER.isTraceEnabled())  {  //log  expected  CCE  ...  there  might  be  some  unexpected  too!  Launcher.LOGGER.trace(e);  	StackTraceElement[]  stackEles  =  e.getStackTrace();  if  (stackEles.length  >  1  &&  stackEles[0].getClassName().equals(getClass().getName())  &&  stackEles[0].getMethodName().equals( "accept "))  {  if  (Launcher.LOGGER.isTraceEnabled())  {  Launcher.LOGGER.trace(e);  }  }  else  {  throw  new  SpoonException( "Execution  of  query  callback  failed ",  e);  	342	replace-2
165	bears_24	buggy:  if  (_referencedType  ==  null)  {  return  (o.getClass()  ==  getClass()  &&  _referencedType.equals(((ResolvedRecursiveType)  o).getSelfReferencedType()));  context:  sb.append(_referencedType.getRawClass().getName());  }  return  sb.toString();  }  public  boolean  equals(Object  o)  {  if  (o  ==  this)  return  true;  if  (o  ==  null)  return  false;      //  Do  NOT  ever  match  unresolved  references      if  (_referencedType  ==  null)  {  return  false;  	if  (o.getClass()  ==  getClass())  {      if  (_referencedType  ==  null)  {  return  false;  }  return  (o.getClass()  ==  getClass()  &&  _referencedType.equals(((ResolvedRecursiveType)  o).getSelfReferencedType()));  return  false;  	115	replace-3
98	bears_226	buggy:  @JsonTypeInfo(use  =  JsonTypeInfo.Id.NAME,  include  =  JsonTypeInfo.As.PROPERTY,  property  =   "type ",  defaultImpl  =  KAlignerParameters.class)  @JsonSubTypes({@JsonSubTypes.Type(value  =  KAlignerParameters.class,  name  =   "kaligner "),  @JsonSubTypes.Type(value  =  KAlignerParameters2.class,  name  =   "kaligner2 ")})  context:  getterVisibility  =  JsonAutoDetect.Visibility.NONE)  @JsonTypeInfo(use  =  JsonTypeInfo.Id.NAME,  include  =  JsonTypeInfo.As.PROPERTY,  property  =   "type ",  defaultImpl  =  KAlignerParameters.class)  @JsonSubTypes({@JsonSubTypes.Type(value  =  KAlignerParameters.class,  name  =   "kaligner "),      @JsonSubTypes.Type(value  =  KAlignerParameters2.class,  name  =   "kaligner2 ")})  public  interface  BatchAlignerWithBaseParameters  {  	@JsonTypeInfo(use  =  JsonTypeInfo.Id.NAME,  include  =  JsonTypeInfo.As.PROPERTY,  property  =   "type ")  @JsonSubTypes({  @JsonSubTypes.Type(value  =  KAlignerParameters.class,  name  =   "kaligner "),  @JsonSubTypes.Type(value  =  KAlignerParameters2.class,  name  =   "kaligner2 ")  })  	33	replace-3
192	bears_32	buggy:  return  getStep().isFailOnCCE();  context:  return   "outputConsumer ";  }  String  name  =  stepFunction.getName();  if  (name  ==  null)  {  name  =  String.valueOf(stepIdx);  }  return  name;  }  private  boolean  isFailOnCCE()  {  return  getStep().isFailOnCCE();  }  private  AbstractStep  getStep()  {  	AbstractStep  step  =  getStep();  if  (step  ==  null)  {  return  false;  }  return  step.isFailOnCCE();  	282	replace-1
222	bears_65	buggy:  public  void  visitAnnotation(Annotation  annotation)  {  enter(new  AnnotationRuntimeBuilderContext(ctAnnotation));  context:  ctAnnotationType.addField(field);  }  });  super.visitAnnotationClass(clazz);  exit();  contexts.peek().addType(ctAnnotationType);  }  public  void  visitAnnotation(Annotation  annotation)  {  final  CtAnnotation<Annotation>  ctAnnotation  =  factory.Core().createAnnotation();  enter(new  AnnotationRuntimeBuilderContext(ctAnnotation));  	public  void  visitAnnotation(final  Annotation  annotation)  {  enter(new  AnnotationRuntimeBuilderContext(ctAnnotation)  {  @Override  public  void  addMethod(CtMethod  ctMethod)  {  try  {  Object  value  =  annotation.getClass().getMethod(ctMethod.getSimpleName()).invoke(annotation);  ctAnnotation.addValue(ctMethod.getSimpleName(),  value);  }  catch  (Exception  ignore)  {  ctAnnotation.addValue(ctMethod.getSimpleName(),   " ");  }  }  });  	220	replace-2
41	bears_139	buggy:  if  (!started)  {  context:  if  (values.length  >  1  &&  !values[1].isEmpty())  {  position.set( "tempData ",  values[1]);  }  if  (values.length  >  5  &&  !values[5].isEmpty())  {  String[]  data  =  values[5].split( "\\| ");  boolean  started  =  data[0].charAt(0)  ==  '0';  position.set( "taximeterOn ",  started);  position.set( "taximeterStart ",  data[1]);      if  (!started)  {  position.set( "taximeterEnd ",  data[2]);  position.set( "taximeterDistance ",  Integer.parseInt(data[3]));  position.set( "taximeterFare ",  Integer.parseInt(data[4]));  position.set( "taximeterTrip ",  data[5]);  position.set( "taximeterWait ",  data[6]);  }  }  	if  (data.length  >  2)  {  	262	replace-1
60	bears_181	buggy:  ResultSet  resultSet  =  this.databaseClient.singleUse().executeQuery(Statement.of(  String.format( "select  count(*)  from  %s ",  persistentEntity.tableName())));  resultSet.next();  return  resultSet.getLong(0);  context:  public  void  delete(Class  entityClass,  KeySet  keys)  {  applyMutationWithClass(this.mutationFactory::delete,  entityClass,  keys);  }  public  long  count(Class  entityClass)  {  SpannerPersistentEntity<?>  persistentEntity  =  this.mappingContext  .getPersistentEntity(entityClass);  ResultSet  resultSet  =  this.databaseClient.singleUse().executeQuery(Statement.of(  String.format( "select  count(*)  from  %s ",  persistentEntity.tableName())));  resultSet.next();  return  resultSet.getLong(0);  	Statement  statement  =  Statement.of(String.format(   "select  count(*)  from  %s ",  persistentEntity.tableName()));  try  (ResultSet  resultSet  =  this.databaseClient.singleUse().executeQuery(statement))  {  resultSet.next();  return  resultSet.getLong(0);  }  	202	replace-4
225	bears_53	buggy:  ref.setPackage(jdtTreeBuilder.getFactory().Package().topLevel());  context:  void  setPackageOrDeclaringType(CtTypeReference<?>  ref,  CtReference  declaring)  {  if  (declaring  instanceof  CtPackageReference)  {  ref.setPackage((CtPackageReference)  declaring);  }  else  if  (declaring  instanceof  CtTypeReference)  {  ref.setDeclaringType((CtTypeReference)  declaring);  }  else  if  (declaring  ==  null)  {  ref.setPackage(jdtTreeBuilder.getFactory().Package().topLevel());  }  else  {  throw  new  AssertionError( "unexpected  declaring  type:   "  +  declaring.getClass()  +   "  of   "  +  declaring);  }  }  	ref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference());  	916	replace-1
178	bears_251	buggy:  attributesMap  =  new  ConcurrentHashMap<>(attributes.length);  context:  private  void  initAttributes(final  AbstractAttribute...  attributes)  {  if  (attributes  ==  null  ||  attributes.length  ==  0)  {  return;  }      attributesMap  =  new  ConcurrentHashMap<>(attributes.length);  for  (final  AbstractAttribute  attribute  :  attributes)  {  attributesMap.put(attribute.getAttributeName(),  attribute);  }  this.attributes  =  new  AbstractAttribute[attributesMap.size()];  attributesMap.values().toArray(this.attributes);  }  	attributesMap  =  new  ConcurrentHashMap<>();  	1116	replace-1
144	bears_154	buggy:  duplicateServiceCombConfigToCse(config,  new  DynamicConfiguration(  new  MicroserviceConfigurationSource(configModelList),  new  NeverStartPollingScheduler()),   "configFromYamlFile ");  context:  public  static  ConcurrentCompositeConfiguration  createLocalConfig(List<ConfigModel>  configModelList)  {  ConcurrentCompositeConfiguration  config  =  new  ConcurrentCompositeConfiguration();  duplicateServiceCombConfigToCse(config,  new  ConcurrentMapConfiguration(new  SystemConfiguration()),   "configFromSystem ");  duplicateServiceCombConfigToCse(config,  convertEnvVariable(new  ConcurrentMapConfiguration(new  EnvironmentConfiguration())),   "configFromEnvironment ");  duplicateServiceCombConfigToCse(config,      new  DynamicConfiguration(      new  MicroserviceConfigurationSource(configModelList),  new  NeverStartPollingScheduler()),       "configFromYamlFile ");  //  If  there  is  extra  configurations,  add  it  into  config.  Extra  config  has  lowest  priority.  EXTRA_CONFIG_MAP.entrySet().stream()  .filter(mapEntry  ->  !mapEntry.getValue().isEmpty())  .forEachOrdered(configMapEntry  ->  duplicateServiceCombConfigToCse(config,  	duplicateServiceCombConfigToCse(config,  new  DynamicConfiguration(  new  MicroserviceConfigurationSource(configModelList),  new  NeverStartPollingScheduler()),   "configFromYamlFile ");  	133	replace-4
113	bears_90	buggy:  this.rawType  =  field  ==  null  ?  propertyDescriptor.getPropertyType()  :  field.getType();  context:  private  final  SimpleTypeHolder  simpleTypeHolder;  private  final  int  hashCode;  public  AbstractPersistentProperty(Field  field,  PropertyDescriptor  propertyDescriptor,  PersistentEntity<?,  P>  owner,  SimpleTypeHolder  simpleTypeHolder)  {  Assert.notNull(simpleTypeHolder,   "SimpleTypeHolder  must  not  be  null! ");  Assert.notNull(owner,   "Owner  entity  must  not  be  null! ");  this.name  =  field  ==  null  ?  propertyDescriptor.getName()  :  field.getName();  this.rawType  =  field  ==  null  ?  propertyDescriptor.getPropertyType()  :  field.getType();  this.information  =  owner.getTypeInformation().getProperty(this.name);  this.propertyDescriptor  =  propertyDescriptor;  this.field  =  field;  this.association  =  isAssociation()  ?  createAssociation()  :  null;  this.owner  =  owner;  this.simpleTypeHolder  =  simpleTypeHolder;  this.hashCode  =  this.field  ==  null  ?  this.propertyDescriptor.hashCode()  :  this.field.hashCode();  	this.rawType  =  this.information  !=  null  ?  information.getType()  :  field  ==  null  ?  propertyDescriptor.getPropertyType()  :  field.getType();  	65	replace-1
19	bears_103	buggy:  position.set(Position.KEY_ODOMETER,  parser.next());  context:  position.set(Position.PREFIX_TEMP  +  2,  parser.next());  position.setNetwork(new  Network(  CellTower.fromLacCid(parser.nextInt(16),  parser.nextInt(16))));  position.setValid(parser.next().equals( "A "));  position.set(Position.KEY_SATELLITES,  parser.next());  position.setCourse(parser.nextDouble());  position.setSpeed(parser.nextDouble());  position.set( "pdop ",  parser.next());      position.set(Position.KEY_ODOMETER,  parser.next());  position.setLatitude(parser.nextCoordinate());  position.setLongitude(parser.nextCoordinate());  }  else  if  (pattern  ==  PATTERN4)  {  position.set(Position.KEY_STATUS,  parser.next());  DateBuilder  dateBuilder  =  new  DateBuilder()  	position.set(Position.KEY_ODOMETER,  parser.nextInt());  	293	replace-1
213	bears_28	buggy:  context:  if  (!block.isImplicit())  {  if  (!block.isParentInitialized()  ||  (!(block.getParent()  instanceof  CtFor)  &&  !(block.getParent()  instanceof  CtForEach)  &&  !(block.getParent()  instanceof  CtIf)))  {  printer.write( "   ");  }  }  }  else  {  printer.write( "; ");  }  }  }  	elementPrinterHelper.writeComment(newArray,  CommentOffset.BEFORE);  	376	add
107	bears_87	buggy:  return  ReflectionUtils.invokeMethod(OF_METHOD,  source);  context:  public  NullableWrapperToVavrOptionConverter(ConversionService  conversionService)  {  super(conversionService,  createEmptyOption(),  io.vavr.control.Option.class);  }  protected  Object  wrap(Object  source)  {  return  ReflectionUtils.invokeMethod(OF_METHOD,  source);  }  public  static  WrapperType  getWrapperType()  {  return  WrapperType.singleValue(io.vavr.control.Option.class);  }  private  static  io.vavr.control.Option<Object>  createEmptyOption()  {  	return  ReflectionUtils.invokeMethod(OF_METHOD,  null,  source);  	528	replace-1
58	bears_207	buggy:  response  =  Response.ok().entity(content).type(mediaType).build();  response  =  Response.ok().entity(content).type(mediaType).build();  context:  public  Response  content(@PathParam( "path ")  String  path)  {  Response  response;  String  mediaType  =  getMediaTypeFromPath(path);  if  (path.isEmpty()  ||  path.equals( "index.html "))  {  response  =  Response.ok().entity(getIndex()).type(mediaType).build();  }  else  {  mediaType  =  getMediaTypeFromPath(path);  if  (path.endsWith( "png ")  ||  path.endsWith( "gif "))  {  byte[]  content  =  FileUtils.readAllBytesFromResource(swaggerResource  +  path);      response  =  Response.ok().entity(content).type(mediaType).build();  }  else  {  String  content  =  FileUtils.readAllTextFromResource(swaggerResource  +  path);      response  =  Response.ok().entity(content).type(mediaType).build();  	if  (content  !=  null)  {  response  =  Response.ok().entity(content).type(mediaType).build();  }  else  {  response  =  Response.status(Response.Status.NOT_FOUND).build();  }  if  (content  !=  null)  {  response  =  Response.ok().entity(content).type(mediaType).build();  }  else  {  response  =  Response.status(Response.Status.NOT_FOUND).build();  }  	32	replace-2
249	bears_250	buggy:  int  cardinality  =  map.size();  for  (Map.Entry<Integer,  ?  extends  Number>  entry  :  map.entrySet())  {  context:  public  static  CompressedVector  fromMap(Map<Integer,  ?  extends  Number>  map,  int  length)  {      int  cardinality  =  map.size();  int[]  indices  =  new  int[cardinality];  double[]  values  =  new  double[cardinality];  int  i  =  0;      for  (Map.Entry<Integer,  ?  extends  Number>  entry  :  map.entrySet())  {  int  index  =  entry.getKey();  if  (index  <  0  ||  index  >=  length)  {  	TreeMap<Integer,  ?  extends  Number>  sortedMap  =  new  TreeMap<>(map);  int  cardinality  =  sortedMap.size();  for  (Map.Entry<Integer,  ?  extends  Number>  entry  :  sortedMap.entrySet())  {  	210	replace-2
80	bears_179	buggy:  }  if  (invocationTarget.isInterface())  {  return  INTERFACE.new  Invocation(methodDescription,  invocationTarget);  context:  methodDescription.getDescriptor(),  typeDescription.isInterface());  int  parameterSize  =  methodDescription.getStackSize(),  returnValueSize  =  methodDescription.getReturnType().getStackSize().getSize();  return  new  Size(returnValueSize  -  parameterSize,  Math.max(0,  returnValueSize  -  parameterSize));  }  public  StackManipulation  virtual(TypeDescription  invocationTarget)  {  if  (methodDescription.isPrivate()  ||  methodDescription.isConstructor()  ||  methodDescription.isStatic())  {  return  Illegal.INSTANCE;      }      if  (invocationTarget.isInterface())  {      return  INTERFACE.new  Invocation(methodDescription,  invocationTarget);  }  else  {  return  VIRTUAL.new  Invocation(methodDescription,  invocationTarget);  }  	}  else  if  (invocationTarget.isInterface())  {  return  methodDescription.getDeclaringType().represents(Object.class)  ?  this  :  INTERFACE.new  Invocation(methodDescription,  invocationTarget);  	320	replace-3
217	bears_44	buggy:  this.statements.remove(statement);  context:  private  void  ensureModifiableStatementsList()  {  if  (this.statements  ==  CtElementImpl.<CtStatement>emptyList())  {  this.statements  =  new  ArrayList<>(BLOCK_STATEMENTS_CONTAINER_DEFAULT_CAPACITY);  }  }  public  void  removeStatement(CtStatement  statement)  {  if  (this.statements  !=  CtElementImpl.<CtStatement>emptyList())  {  this.statements.remove(statement);  	  boolean  hasBeenRemoved  =  false;  for  (int  i  =  0;  i  <  this.statements.size();  i++)  {  if  (this.statements.get(i)  ==  statement)  {  this.statements.remove(i);  hasBeenRemoved  =  true;  break;  }  }    if  (!hasBeenRemoved)  {  this.statements.remove(statement);  }    	193	replace-1
86	bears_246	buggy:  return  setQueryParameter( "position_ms ",  position_ms);  context:  public  Builder  position_ms(final  Integer  position_ms)  {  assert  (position_ms  !=  null);  assert  (position_ms  >=  0);    return  setQueryParameter( "position_ms ",  position_ms);  }  	return  setBodyParameter( "position_ms ",  position_ms);  	130	replace-1
59	bears_180	buggy:  return  BlobId.of(uri.getHost(),  context:  uri  =  new  URI(this.location);  }  catch  (URISyntaxException  e)  {  throw  new  IOException( "Invalid  URI  syntax ",  e);  }  return  uri;  }  private  BlobId  getBlobId()  throws  IOException  {  URI  uri  =  getURI();  return  BlobId.of(uri.getHost(),  uri.getPath().substring(1,  uri.getPath().length()));  }  	return  BlobId.of(uri.getAuthority(),  	110	replace-1
39	bears_138	buggy:  int  mnc  =  buf.readUnsignedByte();  network.addCellTower(CellTower.from(mcc,  mnc,  lac,  cid,  rssi));  context:  boolean  longFormat  =  type  ==  MSG_LBS_2  ||  type  ==  MSG_WIFI_3;  DateBuilder  dateBuilder  =  new  DateBuilder(timeZone)  .setDate(buf.readUnsignedByte(),  buf.readUnsignedByte(),  buf.readUnsignedByte())  .setTime(buf.readUnsignedByte(),  buf.readUnsignedByte(),  buf.readUnsignedByte());  getLastLocation(position,  dateBuilder.getDate());  int  mcc  =  buf.readUnsignedShort();      int  mnc  =  buf.readUnsignedByte();  Network  network  =  new  Network();  for  (int  i  =  0;  i  <  7;  i++)  {  int  lac  =  longFormat  ?  buf.readInt()  :  buf.readUnsignedShort();  int  cid  =  longFormat  ?  (int)  buf.readLong()  :  buf.readUnsignedMedium();  int  rssi  =  -buf.readUnsignedByte();  if  (lac  >  0)  {          network.addCellTower(CellTower.from(mcc,  mnc,  lac,  cid,  rssi));  	int  mnc  =  BitUtil.check(mcc,  15)  ?  buf.readUnsignedShort()  :  buf.readUnsignedByte();  network.addCellTower(CellTower.from(BitUtil.to(mcc,  15),  mnc,  lac,  cid,  rssi));  	557	replace-2
172	bears_25	buggy:  context:  public  void  acceptJsonFormatVisitor(JsonFormatVisitorWrapper  visitor,  JavaType  typeHint)  throws  JsonMappingException  {  visitStringFormat(visitor,  typeHint);  }  protected  JsonSerializer<Object>  _findAndAddDynamic(PropertySerializerMap  map,  Class<?>  type,  SerializerProvider  provider)  throws  JsonMappingException  {  PropertySerializerMap.SerializerAndMapResult  result  =  map.findAndAddKeySerializer(type,  provider,  null);  	if  (type  ==  Object.class)  {  JsonSerializer<Object>  ser  =  new  Default(Default.TYPE_TO_STRING,  type);  _dynamicSerializers  =  map.newWith(type,  ser);  return  ser;  }  	211	add
89	bears_159	buggy:  private  static  final  String  TS_FORMAT_PATTERN  =   "yyyy-MM-dd  HH:mm:ss ";  private  static  final  DateTimeFormatter  TS_FORMAT  =  DateTimeFormatter.ofPattern(TS_FORMAT_PATTERN);  context:  public  LocalDate  date(final  String  s);  public  LocalTime  time(final  String  s);  public  OffsetTime  timeWithTimeZone(final  String  s);  public  static  DateTimeFormat  get()  {  return  new  ISODateTimeFormat();  }  public  static  class  ISODateTimeFormat  implements  DateTimeFormat  {  private  static  final  Logger  LOGGER  =  LoggerFactory.getLogger(ISODateTimeFormat.class);      private  static  final  String  TS_FORMAT_PATTERN  =   "yyyy-MM-dd  HH:mm:ss ";      private  static  final  DateTimeFormatter  TS_FORMAT  =  DateTimeFormatter.ofPattern(TS_FORMAT_PATTERN);  private  static  final  String  TS_TZ_FORMAT_PATTERN  =   "yyyy-MM-dd  HH:mm:ss[.S]X ";  private  static  final  DateTimeFormatter  TS_TZ_FORMAT  =  new  DateTimeFormatterBuilder()  	private  static  final  String  TS_FORMAT_PATTERN  =   "yyyy-MM-dd  HH:mm:ss[.S] ";  private  static  final  DateTimeFormatter  TS_FORMAT  =  new  DateTimeFormatterBuilder()  .appendPattern( "yyyy-MM-dd  HH:mm:ss ")  .appendFraction(ChronoField.MICRO_OF_SECOND,  0,  6,  true)  .toFormatter();  	46	replace-2
162	bears_2	buggy:  if  (raw  ==  String.class  ||  raw  ==  Object.class)  {  context:  _kind  =  kind;  _keyClass  =  cls;  _deser  =  deser;  }  public  static  StdKeyDeserializer  forType(Class<?>  raw)  {  int  kind;      if  (raw  ==  String.class  ||  raw  ==  Object.class)  {  return  StringKD.forType(raw);  }  else  if  (raw  ==  UUID.class)  {  kind  =  TYPE_UUID;  }  else  if  (raw  ==  Integer.class)  {  kind  =  TYPE_INT;  }  else  if  (raw  ==  Long.class)  {  kind  =  TYPE_LONG;  }  else  if  (raw  ==  Date.class)  {  	if  (raw  ==  String.class  ||  raw  ==  Object.class  ||  raw  ==  CharSequence.class)  {  	75	replace-1
95	bears_163	buggy:  if  (tokens.canConsume( "CONSTRAINT ",  TokenStream.ANY_VALUE,   "UNIQUE ")  ||  tokens.canConsume( "UNIQUE "))  {  context:  }  catch  (ParsingException  e)  {  errors  =  accumulateParsingFailure(e,  errors);  tokens.rewind(defnStart);  }  catch  (MultipleParsingExceptions  e)  {  errors  =  accumulateParsingFailure(e,  errors);  tokens.rewind(defnStart);  }  }      if  (tokens.canConsume( "CONSTRAINT ",  TokenStream.ANY_VALUE,   "UNIQUE ")  ||  tokens.canConsume( "UNIQUE "))  {  tokens.canConsumeAnyOf( "KEY ",   "INDEX ");  try  {  if  (!tokens.matches('('))  {  if  (!tokens.matches( "USING "))  {  tokens.consume();  //  name  of  unique  index  ...  }  	if  (tokens.canConsume( "CONSTRAINT ",  TokenStream.ANY_VALUE,   "UNIQUE ")  ||  tokens.canConsume( "CONSTRAINT ",   "UNIQUE ")  ||  tokens.canConsume( "UNIQUE "))  {  	625	replace-1
55	bears_187	buggy:  final  ObjectMapper  mapper  =  new  ObjectMapper(new  YAMLFactory().configure(YAMLGenerator.Feature.MINIMIZE_QUOTES,  true));  context:  public  void  processOpts()  {  super.processOpts();  if(additionalProperties.containsKey(OUTPUT_NAME))  {  this.outputFile  =  additionalProperties.get(OUTPUT_NAME).toString();  }  }  public  void  processSwagger(Swagger  swagger)  {  try  {      final  ObjectMapper  mapper  =  new  ObjectMapper(new  YAMLFactory().configure(YAMLGenerator.Feature.MINIMIZE_QUOTES,  true));  configureMapper(mapper);  String  swaggerString  =  mapper.writeValueAsString(swagger);  String  outputFile  =  outputFolder  +  File.separator  +  this.outputFile;  FileUtils.writeStringToFile(new  File(outputFile),  swaggerString);  LOGGER.debug( "wrote  file  to   "  +  outputFile);  }  catch  (Exception  e)  {  	final  ObjectMapper  mapper  =  new  ObjectMapper(new  YAMLFactory()  .configure(YAMLGenerator.Feature.MINIMIZE_QUOTES,  true)  .configure(YAMLGenerator.Feature.ALWAYS_QUOTE_NUMBERS_AS_STRINGS,  true));  	63	replace-1
117	bears_168	buggy:  context:  package  io.enmasse.address.model.v1;  		-2	add
218	bears_43	buggy:  if  (getDeclaringType().isAnonymous())  {  if  (!getDeclaringType().getDeclaringType().isSubtypeOf(executable.getDeclaringType()))  {  return  false;  }  }  else  if  (!getDeclaringType().isSubtypeOf(executable.getDeclaringType()))  {  context:  }  return  getOverridingExecutable(c.getSuperclass());  }  public  boolean  isOverriding(CtExecutableReference<?>  executable)  {  final  boolean  isSame  =  getSimpleName().equals(executable.getSimpleName())  &&  getParameters().equals(executable.getParameters())  &&  getActualTypeArguments().equals(executable.getActualTypeArguments());  if  (!isSame)  {  return  false;  }  if  (getDeclaringType().isAnonymous())  {  if  (!getDeclaringType().getDeclaringType().isSubtypeOf(executable.getDeclaringType()))  {  return  false;  }  }  else  if  (!getDeclaringType().isSubtypeOf(executable.getDeclaringType()))  {  return  false;  }  return  true;  }  	if  (!getDeclaringType().isSubtypeOf(executable.getDeclaringType()))  {  	239	replace-5
4	bears_129	buggy:  .expression( "(?:[0-9F]{20})?, ")  //  iccid  context:  .text( "$ ").optional()  .compile();  private  static  final  Pattern  PATTERN_INF  =  new  PatternBuilder()  .text( "+ ").expression( "(?:RESP|BUFF):GTINF, ")  .number( "[0-9A-Z]{2}xxxx, ")      //  protocol  version  .number( "(d{15}|x{14}), ")    //  imei  .expression( "(?:[0-9A-Z]{17},)? ")    //  vin  .expression( "(?:[^,]+)?, ")    //  device  name  .number( "(xx), ")          //  state      .expression( "(?:[0-9F]{20})?, ")  //  iccid  .number( "(d{1,2}), ")      //  rssi  .number( "d{1,2}, ")  .expression( "[01], ")      //  external  power  .number( "([d.]+)?, ")      //  odometer  or  external  power  .number( "d*, ")        //  backup  battery  or  lightness  .number( "(d+.d+), ")      //  battery  .expression( "([01]), ")        //  charging  .number( "(?:d), ")        //  led  	.expression( "(?:[0-9Ff]{20})?, ")          //  iccid  	68	replace-1
73	bears_200	buggy:  return  convert(null,  throwable);  context:  return  exceptionBuilder.apply(errorCode,  errorMessage);  }  public  AxonException  convert(Throwable  throwable){      return  convert(null,  throwable);  }  	return  convert( " ",  throwable);  	119	replace-1
151	bears_9	buggy:  context:  return  deser.deserialize(p,  ctxt);  }  Object  result  =  TypeDeserializer.deserializeIfNatural(p,  ctxt,  _baseType);  if  (result  !=  null)  {  return  result;  }  if  (p.getCurrentToken()  ==  JsonToken.START_ARRAY)  {  return  super.deserializeTypedFromAny(p,  ctxt);  }  ctxt.reportWrongTokenException(p,  JsonToken.FIELD_NAME,   "missing  property  ' "+_typePropertyName+ "'  that  is  to  contain  type  id  (for  class   "+baseTypeName()+ ") ");  	}  else  if  (p.getCurrentToken()  ==  JsonToken.VALUE_STRING)  {  if  (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT))  {  String  str  =  p.getText().trim();  if  (str.isEmpty())  {  return  null;  }  }  	156	add
235	bears_79	buggy:  if  (((Class<?>)  o).isAssignableFrom(e.getClass()))  {  return  true;  context:  public  ProcessingVisitor(Factory  factory)  {  this.factory  =  factory;  }  private  boolean  canBeProcessed(CtElement  e)  {  if  (!factory.getEnvironment().isProcessingStopped()  &&  processor.getProcessedElementTypes()  !=  null)  {  for  (Object  o  :  processor.getProcessedElementTypes())  {  if  (((Class<?>)  o).isAssignableFrom(e.getClass()))  {  return  true;  }  }  }  return  false;  }  	if  (!((Class<?>)  o).isAssignableFrom(e.getClass()))  {  return  false;  return  true;  	48	replace-2
219	bears_38	buggy:  if  (method.isDefaultMethod()  ||  method.hasModifier(ModifierKind.PRIVATE))  {  context:  if  (lambdaType.isInterface()  ==  false)  {  throw  new  SpoonException( "The  lambda  can  be  based  on  interface  only.  But  type   "  +  lambdaTypeRef.getQualifiedName()  +   "  is  not  an  interface ");  }  Set<CtMethod<?>>  lambdaTypeMethods  =  lambdaType.getAllMethods();  CtMethod<?>  lambdaExecutableMethod  =  null;  if  (lambdaTypeMethods.size()  ==  1)  {  lambdaExecutableMethod  =  lambdaTypeMethods.iterator().next();  }  else  {  for  (CtMethod<?>  method  :  lambdaTypeMethods)  {  if  (method.isDefaultMethod()  ||  method.hasModifier(ModifierKind.PRIVATE))  {  continue;  }  if  (lambdaExecutableMethod  !=  null)  {  throw  new  SpoonException( "The  lambda  can  be  based  on  interface,  which  has  only  one  method.  But   "  +  lambdaTypeRef.getQualifiedName()  +   "  has  at  least  two:   "  +  lambdaExecutableMethod.getSignature()  +   "  and   "  +  method.getSignature());  }  lambdaExecutableMethod  =  method;  }  }  	if  (method.isDefaultMethod()  ||  method.hasModifier(ModifierKind.PRIVATE)  ||  method.hasModifier(ModifierKind.STATIC))  {  	112	replace-1
68	bears_144	buggy:  return  bits;  }  context:  public  byte[]  toByteArray()  {  return  bits;  }  	return  bits.clone();  }  	117	replace-2
211	bears_80	buggy:  List<String>  classpath  =  new  ArrayList<>();  classpath.add(url.toString());  setSourceClasspath(classpath.toArray(new  String[0]));  context:  private  ClassLoader  inputClassloader;  public  void  setInputClassLoader(ClassLoader  aClassLoader)  {  if  (aClassLoader  instanceof  URLClassLoader)  {  final  URL[]  urls  =  ((URLClassLoader)  aClassLoader).getURLs();  if  (urls  !=  null  &&  urls.length  >  0)  {  List<String>  classpath  =  new  ArrayList<>();  for  (URL  url  :  urls)  {  classpath.add(url.toString());  	boolean  onlyFileURLs  =  true;  if  (!url.getProtocol().equals( "file "))  {  onlyFileURLs  =  false;  }  }  if  (onlyFileURLs)  {  List<String>  classpath  =  new  ArrayList<>();  for  (URL  url  :  urls)  {  classpath.add(url.getPath());  }  setSourceClasspath(classpath.toArray(new  String[0]));  }  else  {  throw  new  SpoonException( "Spoon  does  not  support  a  URLClassLoader  containing  other  resources  than  local  file. ");  	356	replace-3
137	bears_172	buggy:  E  entity  =  delegate().findOne(q);  if  (entity  !=  null  &&  !isOperationPermitted(entity,  Action.READ))  {  return  null;  }  return  entity;  context:  public  Stream<E>  findAll(Query<E>  q)  {  return  findAllPermitted(q,  Action.READ);  }  public  E  findOne(Query<E>  q)  {  E  entity  =  delegate().findOne(q);  if  (entity  !=  null  &&  !isOperationPermitted(entity,  Action.READ))  {  return  null;  }  return  entity;  }  	return  findAllPermitted(q,  Action.READ).findFirst().orElse(null);  	78	replace-8
30	bears_125	buggy:  position.set(Position.PREFIX_TEMP  +  i,  Short.parseShort(data[index++],  16)  *  0.0625);  context:  int  index  =  0;  String[]  data  =  parser.next().split( ", ");  if  (data.length  >  1)  {  int  deviceType  =  Integer.parseInt(data[index++]);  if  (deviceType  ==  2)  {  int  deviceCount  =  Integer.parseInt(data[index++]);  for  (int  i  =  1;  i  <=  deviceCount;  i++)  {  index++;  //  id  index++;  //  type          position.set(Position.PREFIX_TEMP  +  i,  Short.parseShort(data[index++],  16)  *  0.0625);  }  }  }  decodeDeviceTime(position,  parser);  return  positions;  }  	position.set(Position.PREFIX_TEMP  +  i,  (short)  Integer.parseInt(data[index++],  16)  *  0.0625);  	617	replace-1
171	bears_22	buggy:  context:  }  public  void  setReference(JavaType  ref)  {  if  (_referencedType  !=  null)  {  throw  new  IllegalStateException( "Trying  to  re-set  self  reference;  old  value  =   "+_referencedType+ ",  new  =   "+ref);  }  _referencedType  =  ref;  }  public  JavaType  getSelfReferencedType()  {  return  _referencedType;  }  	  @Override  public  JavaType  getSuperClass()  {  if  (_referencedType  !=  null)  {  return  _referencedType.getSuperClass();  }  return  super.getSuperClass();  }  	28	add
116	bears_220	buggy:  name  =  String.valueOf(((Map.Entry)  localMap.entrySet().iterator().next()).getKey());  context:  builder  =  new  XmlStringBuilderWithoutRoot(identStep,  UTF_8.name());  localMap  =  map;  }  if  (localMap  ==  null  ||  localMap.size()  !=  1  ||  (String.valueOf(((Map.Entry)  localMap.entrySet().iterator().next()).getKey())).startsWith( "- ")  ||  ((Map.Entry)  localMap.entrySet().iterator().next()).getValue()  instanceof  List)  {  final  String  name;  if  (localMap  !=  null  &&  localMap.size()  ==  1  &&  ((Map.Entry)  localMap.entrySet().iterator().next()).getValue()  instanceof  List  &&  !((List)  ((Map.Entry)  localMap.entrySet().iterator().next()).getValue()).isEmpty())  {      name  =  String.valueOf(((Map.Entry)  localMap.entrySet().iterator().next()).getKey());  	boolean  allMapItems  =  true;  for  (Object  item  :  (List)  ((Map.Entry)  localMap.entrySet().iterator().next()).getValue())  {  if  (!(item  instanceof  Map))  {  allMapItems  =  false;  break;  }  }  name  =  allMapItems  ?  String.valueOf(((Map.Entry)  localMap.entrySet().iterator().next()).getKey())  :   "root ";  	699	replace-1
36	bears_109	buggy:  position.set(Position.KEY_VERSION_FW,  values[index++]);  context:  if  (type.equals( "Emergency ")  ||  type.equals( "Alert "))  {  position.set(Position.KEY_ALARM,  Position.ALARM_GENERAL);  }  DeviceSession  deviceSession  =  getDeviceSession(channel,  remoteAddress,  values[index++]);  if  (deviceSession  ==  null)  {  return  null;  }  position.setDeviceId(deviceSession.getDeviceId());      position.set(Position.KEY_VERSION_FW,  values[index++]);  DateFormat  dateFormat  =  new  SimpleDateFormat( "yyyyMMddHH:mm:ss ");  dateFormat.setTimeZone(TimeZone.getTimeZone( "UTC "));  position.setTime(dateFormat.parse(values[index++]  +  values[index++]));  if  (protocolType  ==  1)  {  	if  (!type.equals( "Alert ")  ||  protocolType  ==  0)  {  position.set(Position.KEY_VERSION_FW,  values[index++]);  }  	70	replace-1
82	bears_236	buggy:  TypeDescription  enclosingType  =  instrumentedType.getEnclosingType();  if  (enclosingType  !=  null)  {  //  The  Scala  compiler  sometimes  generates  illegal  combinations.  cv.visitOuterClass(enclosingType.getInternalName(),  NO_REFERENCE,  NO_REFERENCE);  }  context:  }  protected  void  onOuterType()  {  MethodDescription.InDefinedShape  enclosingMethod  =  instrumentedType.getEnclosingMethod();  if  (enclosingMethod  !=  null)  {  cv.visitOuterClass(enclosingMethod.getDeclaringType().getInternalName(),  enclosingMethod.getInternalName(),  enclosingMethod.getDescriptor());  }  else  if  (instrumentedType.isLocalType()  ||  instrumentedType.isAnonymousType())  {          TypeDescription  enclosingType  =  instrumentedType.getEnclosingType();          if  (enclosingType  !=  null)  {  //  The  Scala  compiler  sometimes  generates  illegal  combinations.              cv.visitOuterClass(enclosingType.getInternalName(),  NO_REFERENCE,  NO_REFERENCE);          }  }  }  protected  void  onAfterAttributes()  {  	cv.visitOuterClass(instrumentedType.getEnclosingType().getInternalName(),  NO_REFERENCE,  NO_REFERENCE);  	4349	replace-4
69	bears_148	buggy:  context:  package  dk.alexandra.fresco.suite.spdz2k.datatypes;  public  class  CompUInt96Factory  implements  CompUIntFactory<CompUInt96>  {  		-2	add
126	bears_149	buggy:  context:  Map<String,  String>  sample  =  url.toMap();  boolean  result  =  false;  for  (Map.Entry<String,  MatchPair>  matchPair  :  condition.entrySet())  {  String  key  =  matchPair.getKey();  String  sampleValue;  if  (invocation  !=  null  &&  (Constants.METHOD_KEY.equals(key)  ||  Constants.METHODS_KEY.equals(key)))  {  sampleValue  =  invocation.getMethodName();  }  else  {  sampleValue  =  sample.get(key);  }  if  (sampleValue  !=  null)  {  if  (!matchPair.getValue().isMatch(sampleValue,  param))  {  return  false;  }  else  {  result  =  true;  }  	if  (sampleValue  ==  null)  {  sampleValue  =  sample.get(Constants.DEFAULT_KEY_PREFIX  +  key);  }  	207	add
44	bears_108	buggy:  .number( "(dd)(dd)(dd): ")      //  time  (hhmmss)  .number( "(-?d+.d+): ")        //  longitude  .number( "(-?d+.d+): ")        //  latitude  .number( "(d+.?d*): ")      //  speed  .number( "(?:NAN|(d+.?d*)): ")      //  accuracy  .number( "(?:NAN|(d+.?d*)): ")      //  course  .number( "(?:NAN|(d+.?d*)) ")      //  altitude  context:  public  class  CguardProtocolDecoder  extends  BaseProtocolDecoder  {  public  CguardProtocolDecoder(CguardProtocol  protocol)  {  super(protocol);  }  private  static  final  Pattern  PATTERN_NV  =  new  PatternBuilder()  .text( "NV: ")  .number( "(dd)(dd)(dd)   ")      //  date  (yymmdd)      .number( "(dd)(dd)(dd): ")      //  time  (hhmmss)      .number( "(-?d+.d+): ")        //  longitude      .number( "(-?d+.d+): ")        //  latitude      .number( "(d+.?d*): ")      //  speed      .number( "(?:NAN|(d+.?d*)): ")      //  accuracy      .number( "(?:NAN|(d+.?d*)): ")      //  course      .number( "(?:NAN|(d+.?d*)) ")      //  altitude  	.number( "(dd)(dd)(dd) ")                            //  time  (hhmmss)  .number( ":(-?d+.d+) ")                                //  longitude  .number( ":(-?d+.d+) ")                                //  latitude  .number( ":(d+.?d*) ")                                  //  speed  .number( ":(?:NAN|(d+.?d*)) ")                  //  accuracy  .number( ":(?:NAN|(d+.?d*)) ")                  //  course  .number( ":(?:NAN|(d+.?d*)) ").optional()  //  altitude  	38	replace-7
164	bears_4	buggy:  context:  public  InnerClassProperty  withName(PropertyName  newName)  {  return  new  InnerClassProperty(this,  newName);  }  public  InnerClassProperty  withValueDeserializer(JsonDeserializer<?>  deser)  {  return  new  InnerClassProperty(this,  deser);  }  	  @Override  public  void  assignIndex(int  index)  {  _delegate.assignIndex(index);  }    @Override  public  int  getPropertyIndex()  {  return  _delegate.getPropertyIndex();  }    @Override  public  int  getCreatorIndex()  {  return  _delegate.getCreatorIndex();  }  	86	add
212	bears_74	buggy:  context:  inner  =  main;  }  if  (res  ==  null)  {  return  this.jdtTreeBuilder.getFactory().Type().createReference(CharOperation.toString(ref.getParameterizedTypeName()));  }  if  (inner.getPackage()  ==  null)  {  PackageFactory  packageFactory  =  this.jdtTreeBuilder.getFactory().Package();  CtPackageReference  packageReference  =  index  >=  0  ?  packageFactory.getOrCreate(concatSubArray(namesParameterized,  index)).getReference()  :  packageFactory.topLevel();  inner.setPackage(packageReference);  }  return  res;  }  private  String  concatSubArray(String[]  a,  int  endIndex)  {  StringBuilder  sb  =  new  StringBuilder();  for  (int  i  =  0;  i  <  endIndex;  i++)  {  	if  (!res.toString().replace( ",  ? ",   ",? ").endsWith(CharOperation.toString(ref.getParameterizedTypeName())))  {  return  this.jdtTreeBuilder.getFactory().Type().createReference(CharOperation.toString(ref.getParameterizedTypeName()));  }  	543	add
28	bears_124	buggy:  .number( "(d+.d+) ").text( "+ ")      //  latitude  .number( "(d+.d+) ").text( "+ ")      //  longitude  context:  }  private  static  final  Pattern  PATTERN  =  new  PatternBuilder()  .text( "EO; ")          //  header  .number( "d+; ")        //  index  .number( "(d+); ")          //  imei  .text( "R; ")          //  data  type  .number( "(d+) ").text( "+ ")    //  satellites  .number( "(dd)(dd)(dd) ")      //  date  .number( "(dd)(dd)(dd) ").text( "+ ")    //  time      .number( "(d+.d+) ").text( "+ ")      //  latitude      .number( "(d+.d+) ").text( "+ ")      //  longitude  .number( "(d+.d+) ").text( "+ ")      //  speed  .number( "(d+) ").text( "+ ")    //  course  .text( "0x ").number( "(d+) ").text( "+ ")  //  input  .number( "(d+) ").text( "+ ")    //  message  type  .number( "(d+) ").text( "+ ")    //  odometer  .number( "(d+) ")          //  voltage  	.number( "(-?d+.d+) ").text( "+ ")              //  latitude  .number( "(-?d+.d+) ").text( "+ ")              //  longitude  	43	replace-2
136	bears_173	buggy:  context:  {  return  Collections.emptySet();  }  public  long  count()  {  return  Iterables.size(this);  }  }  	if  (columnIdx.containsKey(header))  {  throw  new  MolgenisDataException(format( "Duplicate  column  header  '%s'  not  allowed ",  header));  }  	219	add
250	bears_165	buggy:  context:  {  this.attributeOptionCombo  =  attributeOptionCombo;  }  //  toString,  mergeWith  	public  int  hashCode()  {  int  result  =  dataElement.hashCode();  result  =  31  *  result  +  (categoryOptionCombo  !=  null  ?  categoryOptionCombo.hashCode()  :  0);  result  =  31  *  result  +  (attributeOptionCombo  !=  null  ?  attributeOptionCombo.hashCode()  :  0);  return  result;  }    @Override  public  boolean  equals(  Object  object  )  {  if  (  this  ==  object  )  {  return  true;  }    if  (  object  ==  null  )  {  return  false;  }    if  (  getClass()  !=  object.getClass()  )  {  return  false;  }    DataElementOperand  other  =  (DataElementOperand)  object;    if  (  !dataElement.equals(  other.dataElement  )  )  {  return  false;  }    if  (  categoryOptionCombo  ==  null  )  {  if  (  other.categoryOptionCombo  !=  null  )  {  return  false;  }  }  else  if  (  !categoryOptionCombo.equals(  other.categoryOptionCombo  )  )  {  return  false;  }    if  (  attributeOptionCombo  ==  null  )  {  if  (  other.attributeOptionCombo  !=  null  )  {  return  false;  }  }  else  if  (  !attributeOptionCombo.equals(  other.attributeOptionCombo  )  )  {  return  false;  }    return  true;  }    @Override  	325	add
17	bears_132	buggy:  .number( "(x+)?, ")        //  adc  2  context:  .number( "x{8}, ")          //  mask  .number( "(d+)?, ")        //  power  .number( "d{1,2}, ")        //  report  type  .number( "d{1,2}, ")        //  count  .expression( "((?: ")  .expression(PATTERN_LOCATION.pattern())  .expression( ")+) ")  .number( "(d{1,7}.d)?, ")      //  odometer  .number( "(d{5}:dd:dd)?, ")    //  hour  meter  .number( "(x+)?, ")        //  adc  1      .number( "(x+)?, ")        //  adc  2  .number( "(d{1,3})?, ")        //  battery  .number( "(?:(xx)(xx)(xx))?, ")    //  device  status  .expression( "(.*) ")      //  additional  data  .number( "(dddd)(dd)(dd) ")    //  date  (yyyymmdd)  .number( "(dd)(dd)(dd) ").optional(2)  //  time  (hhmmss)  .text( ", ")  .number( "(xxxx) ")        //  count  number  .text( "$ ").optional()  	.number( "(x+)?, ").optional()                  //  adc  2  	219	replace-1
158	bears_19	buggy:  ignored  =  ignorals.getIgnored();  context:  JsonIgnoreProperties.Value  ignorals  =  ctxt.getConfig()  .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),  beanDesc.getClassInfo());  Set<String>  ignored;  if  (ignorals  !=  null)  {  boolean  ignoreAny  =  ignorals.getIgnoreUnknown();  builder.setIgnoreUnknownProperties(ignoreAny);      ignored  =  ignorals.getIgnored();  for  (String  propName  :  ignored)  {  builder.addIgnorable(propName);  }  }  else  {  ignored  =  Collections.emptySet();  }  	ignored  =  ignorals.findIgnoredForDeserialization();  	495	replace-1
67	bears_145	buggy:  toSpdzElement(rawTriple.getLeft()),  toSpdzElement(rawTriple.getRight()));  context:  this.modulus  =  modulus;  this.secretSharedKey  =  secretSharedKey;  this.supplier  =  new  ArithmeticDummyDataSupplier(myId,  noOfPlayers,  modulus);  }  public  SpdzTriple  getNextTriple()  {  MultiplicationTripleShares  rawTriple  =  supplier.getMultiplicationTripleShares();  return  new  SpdzTriple(  toSpdzElement(rawTriple.getLeft()),      toSpdzElement(rawTriple.getLeft()),      toSpdzElement(rawTriple.getRight()));  }  public  SpdzSInt[]  getNextExpPipe()  {  return  new  SpdzSInt[0];  	toSpdzElement(rawTriple.getRight()),  toSpdzElement(rawTriple.getProduct()));  	30	replace-2
247	bears_78	buggy:  if  (target.isImplicit())  {  context:  if  (f.getVariable().isStatic()  &&  f.getTarget()  instanceof  CtTypeAccess)  {  _context.ignoreGenerics(true);  }  CtExpression<?>  target  =  f.getTarget();  if  (target  !=  null)  {  boolean  isInitializeStaticFinalField  =  isInitializeStaticFinalField(f.getTarget());  boolean  isStaticField  =  f.getVariable().isStatic();  boolean  isImportedField  =  importsContext.isImported(f.getVariable());  if  (!isInitializeStaticFinalField  &&  !(isStaticField  &&  isImportedField))  {  if  (target.isImplicit())  {  final  CtField<?>  field  =  f.getVariable().getFieldDeclaration();  final  String  fieldName  =  field.getSimpleName();  CtVariable<?>  var  =  f.getVariable().map(new  PotentialVariableDeclarationFunction(fieldName)).first();  	if  (target.isImplicit()  &&  !(f.getVariable().getFieldDeclaration()  ==  null  &&  this.env.getNoClasspath()))  {  	783	replace-1
2	bears_201	buggy:  catch  (Exception  e)  {  context:  private  int  getAndSetNetworkTimeout(final  Connection  connection,  final  long  timeoutMs)  {  if  (isNetworkTimeoutSupported  !=  FALSE)  {  try  {  final  int  originalTimeout  =  connection.getNetworkTimeout();  connection.setNetworkTimeout(netTimeoutExecutor,  (int)  timeoutMs);  isNetworkTimeoutSupported  =  TRUE;  return  originalTimeout;  }      catch  (Exception  e)  {  if  (isNetworkTimeoutSupported  ==  UNINITIALIZED)  {  isNetworkTimeoutSupported  =  FALSE;  if  (validationTimeout  <  SECONDS.toMillis(1))  {  }  else  if  (validationTimeout  %  SECONDS.toMillis(1)  !=  0)  {  	catch  (Exception  |  AbstractMethodError  e)  {  	523	replace-1
208	bears_42	buggy:  while  (scopeElement  !=  null  &&  !(scopeElement  instanceof  CtPackage))  {  context:  public  PotentialVariableDeclarationFunction()  {  }  public  void  apply(CtElement  input,  CtConsumer<Object>  outputConsumer)  {  CtQuery  siblingsQuery  =  input.getFactory().createQuery().map(new  SiblingsFunction().mode(SiblingsFunction.Mode.PREVIOUS));  CtElement  scopeElement  =  input;  while  (scopeElement  !=  null  &&  !(scopeElement  instanceof  CtPackage))  {  CtElement  parent  =  scopeElement.getParent();  if  (parent  instanceof  CtType<?>)  {  if  (includingFields)  {  Collection<CtFieldReference<?>>  allFields  =  ((CtType<?>)  parent).getAllFields();  for  (CtFieldReference<?>  fieldReference  :  allFields)  {  outputConsumer.accept(fieldReference.getFieldDeclaration());  }  	while  (scopeElement  !=  null  &&  !(scopeElement  instanceof  CtPackage)  &&  scopeElement.isParentInitialized())  {  	73	replace-1
122	bears_240	buggy:  CxJoined(final  Iterable<Context>  contexts)  {  context:  new  IterableOf<>(  ctx  )  );  }  CxJoined(final  Iterable<Context>  contexts)  {  this(contexts,  new  CxSimple());  }  	public  CxJoined(final  Iterable<Context>  contexts)  {  	66	replace-1
56	bears_186	buggy:  context:  }  public  void  processOpts()  {  if  (additionalProperties.containsKey(GENERATE_POM))  {  generatePom  =  Boolean.valueOf(additionalProperties.get(GENERATE_POM).toString());  }  if  (additionalProperties.containsKey(INTERFACE_ONLY))  {  interfaceOnly  =  Boolean.valueOf(additionalProperties.get(INTERFACE_ONLY).toString());  }  if  (interfaceOnly)  {  artifactId  =   "swagger-jaxrs-client ";  }  super.processOpts();  	if  (!interfaceOnly)  {  additionalProperties.remove(INTERFACE_ONLY);  }  	88	add
78	bears_169	buggy:  FileUtils.deleteQuietly(new  File(_segmentFile));  context:  }  public  long  getOffset()  {  return  _offset;  }  public  String  getSegmentFile()  {  return  _segmentFile;  }  public  void  deleteSegmentFile()  {    FileUtils.deleteQuietly(new  File(_segmentFile));  }  }  private  static  final  Logger  LOGGER  =  LoggerFactory.getLogger(LLRealtimeSegmentDataManager.class);  	if  (_segmentFile  !=  null)  {  FileUtils.deleteQuietly(new  File(_segmentFile));  }  	142	replace-1
205	bears_217	buggy:  packageDeclaration.setPosition(factory.Core().createCompoundSourcePosition(  context.compilationUnitSpoon,  packageRef.sourceStart(),  packageRef.sourceEnd(),  packageRef.declarationSourceStart,  packageRef.declarationEnd,  context.compilationUnitSpoon.getLineSeparatorPositions()));  context:  if  (!enclosingModule.isUnnamed()  &&  enclosingModule.shortReadableName()  !=  null  &&  enclosingModule.shortReadableName().length  >  0)  {  module  =  getFactory().Module().getOrCreate(String.valueOf(enclosingModule.shortReadableName()));  }  else  {  module  =  getFactory().Module().getUnnamedModule();  }  context.compilationUnitSpoon.setDeclaredPackage(getFactory().Package().getOrCreate(CharOperation.toString(scope.currentPackageName),  module));  CtPackageDeclaration  packageDeclaration  =  context.compilationUnitSpoon.getPackageDeclaration();  if  (packageDeclaration  !=  null)  {  ImportReference  packageRef  =  compilationUnitDeclaration.currentPackage;  packageDeclaration.setPosition(factory.Core().createCompoundSourcePosition(  context.compilationUnitSpoon,  packageRef.sourceStart(),  packageRef.sourceEnd(),  packageRef.declarationSourceStart,  packageRef.declarationEnd,  context.compilationUnitSpoon.getLineSeparatorPositions()));  }  return  true;  }  	if  (packageRef  !=  null)  {  packageDeclaration.setPosition(factory.Core().createCompoundSourcePosition(  context.compilationUnitSpoon,  packageRef.sourceStart(),  packageRef.sourceEnd(),  packageRef.declarationSourceStart,  packageRef.declarationEnd,  context.compilationUnitSpoon.getLineSeparatorPositions()));  }  	795	replace-2
243	bears_82	buggy:  context:  boolean  isImportedField  =  importsContext.isImported(f.getVariable());  if  (!isInitializeStaticFinalField  &&  !(isStaticField  &&  isImportedField))  {  if  (target.isImplicit()  &&  !(f.getVariable().getFieldDeclaration()  ==  null  &&  this.env.getNoClasspath()))  {  final  CtField<?>  field  =  f.getVariable().getFieldDeclaration();  final  String  fieldName  =  field.getSimpleName();  CtVariable<?>  var  =  f.getVariable().map(new  PotentialVariableDeclarationFunction(fieldName)).first();  if  (var  !=  field)  {  target.setImplicit(false);  }  }  	if  (field  ==  null)  {  throw  new  SpoonException( "The  reference  to  field  named  \ " "  +  f.getVariable().getSimpleName()  +   "\ "  is  invalid,  because  there  is  no  field  with  such  name  on  path: "  +  getPath(f));  }  	790	add
128	bears_238	buggy:  return  field.getType().isPrimitive()  ||  field.getType().isArray()  ||  ignoredNames.contains(field.getName());  context:  case   "short ":  field.setLong(object,  Short.MIN_VALUE);  break;  default:  field.set(object,  null);  }  }  private  boolean  fieldAcceptable(Field  field)  {      return  field.getType().isPrimitive()  ||  field.getType().isArray()  ||  ignoredNames.contains(field.getName());  }  public  void  ignoreFields(Object  object)  throws  IllegalAccessException  {  Class  clazz  =  object.getClass().getDeclaredFields().length  >  0  ?  object.getClass()  :  object.getClass().getSuperclass();  Class  currentClass  =  object.getClass();  for  (Field  field  :  clazz.getDeclaredFields())  {  if  (!fieldAcceptable(field)  &&  fieldHasGetter(field,  clazz))  {  	return  /*field.getType().isPrimitive()  ||*/  field.getType().isArray()  ||  ignoredNames.contains(field.getName());  	133	replace-1
38	bears_107	buggy:  lac  =  Integer.parseInt(data[i]);  cid  =  Integer.parseInt(data[i]);  context:  case   "#OUT2# ":  position.set(Position.PREFIX_OUT  +  2,  Integer.parseInt(data[i]));  break;  case   "#OUT3# ":  position.set(Position.PREFIX_OUT  +  3,  Integer.parseInt(data[i]));  break;  case   "#OUT4# ":  position.set(Position.PREFIX_OUT  +  4,  Integer.parseInt(data[i]));  break;  case   "#LAC# ":          lac  =  Integer.parseInt(data[i]);  break;  case   "#CID# ":          cid  =  Integer.parseInt(data[i]);  	if  (!data[i].isEmpty())  {  lac  =  Integer.parseInt(data[i]);  }  if  (!data[i].isEmpty())  {  cid  =  Integer.parseInt(data[i]);  }  	154	replace-2
123	bears_150	buggy:  private  String  value;  public  LocaleHandle(String  locale)  {  this.value  =  locale;  String  s  =  this.value;  if  (s  ==  null)  return  null;  int  len  =  s.length();  char  ch  =  '  ';  int  i  =  0;  for  (;  i  <  len  &&  ('a'  <=  (ch  =  s.charAt(i))  &&  ch  <=  'z'  ||  'A'  <=  ch  &&  ch  <=  'Z'  ||  '0'  <=  ch  &&  ch  <=  '9');  i++)  {  }  String  language  =  s.substring(0,  i);  String  country  =  null;  String  var  =  null;  if  (ch  ==  '-'  ||  ch  ==  '_')  {  int  head  =  ++i;  for  (;  i  <  len  &&  ('a'  <=  (ch  =  s.charAt(i))  &&  ch  <=  'z'  ||  'A'  <=  ch  &&  ch  <=  'Z'  ||  '0'  <=  ch  &&  ch  <=  '9');  i++)  {  }  country  =  s.substring(head,  i);  }  if  (ch  ==  '-'  ||  ch  ==  '_')  {  int  head  =  ++i;  for  (;  i  <  len  &&  ('a'  <=  (ch  =  s.charAt(i))  &&  ch  <=  'z'  ||  'A'  <=  ch  &&  ch  <=  'Z'  ||  '0'  <=  ch  &&  ch  <=  '9');  i++)  {  }  var  =  s.substring(head,  i);  }  if  (var  !=  null)  return  new  Locale(language,  country,  var);  else  if  (country  !=  null)  return  new  Locale(language,  country);  else  return  new  Locale(language);  context:  package  com.alibaba.com.caucho.hessian.io;  public  class  LocaleHandle  implements  java.io.Serializable,  HessianHandle  {  private  String  value;  public  LocaleHandle(String  locale)  {      this.value  =  locale;  	private  String  language;  private  String  country;  private  String  variant;    public  LocaleHandle(String  language,  String  country,  String  variant)  {  this.language  =  language;  this.country  =  country;  this.variant  =  variant;  return  new  Locale(language,  country,  variant);  	57	replace-56
74	bears_202	buggy:  blacklistLibOrExtJars(libOrExtJar);  context:  public  ClassGraph  blacklistLibOrExtJars(final  String...  jarLeafNames)  {  if  (jarLeafNames.length  ==  0)  {  for  (final  String  libOrExtJar  :  JarUtils.getJreLibOrExtJars())  {      blacklistLibOrExtJars(libOrExtJar);  }  }  else  {  for  (final  String  jarLeafName  :  jarLeafNames)  {  final  String  leafName  =  JarUtils.leafName(jarLeafName);  if  (!leafName.equals(jarLeafName))  {  throw  new  IllegalArgumentException( "Can  only  blacklist  jars  by  leafname:   "  +  jarLeafName);  }  if  (jarLeafName.contains( "* "))  {  	blacklistLibOrExtJars(JarUtils.leafName(libOrExtJar));  	865	replace-1
182	bears_214	buggy:  context:  public  CharSequence  preferSameRackWeighting(Collection<UpstreamInfo>  upstreams,  UpstreamInfo  currentUpstream,  Options  options)  {  final  RackMethodsHelper  rackHelper  =  new  RackMethodsHelper();  final  List<String>  allRacks  =  rackHelper.generateAllRacks(upstreams);  final  BigDecimal  totalPendingLoad  =  rackHelper.getTotalPendingLoad(allRacks);  final  BigDecimal  capacity  =  rackHelper.calculateCapacity(allRacks);  return  preferSameRackWeightingOperation(upstreams,  currentUpstream,  allRacks,  capacity,  totalPendingLoad,  null);  }  	if  (allRacks.size()  ==  0)  {  return   " ";  }  	48	add
186	bears_61	buggy:  context:  public  <T>  CtTypeReference<T>  createCtTypeReference(Class<?>  originalClass)  {  if  (originalClass  ==  null)  {  return  null;  }  CtTypeReference<T>  typeReference  =  factory.Core().<T>createTypeReference();  typeReference.setSimpleName(originalClass.getSimpleName());  if  (originalClass.isPrimitive())  {  return  typeReference;  }  return  typeReference.setPackage(createCtPackageReference(originalClass.getPackage()));  }  	if  (originalClass.getDeclaringClass()  !=  null)  {  return  typeReference.setDeclaringType(createCtTypeReference(originalClass.getDeclaringClass()));  }  	576	add
66	bears_234	buggy:  context:  public  void  transfer(int  debitAccountId,  int  creditAccountId,  String  amount)  {  Optional<Account>  debitedAccountWrapper  =  accountRepository.findById(debitAccountId);  Optional<Account>  creditedAccountWrapper  =  accountRepository.findById(creditAccountId);  Account  debitedAccount  =  debitedAccountWrapper.orElseThrow(NoSuchElementException::new);  Account  creditedAccount  =  creditedAccountWrapper.orElseThrow(NoSuchElementException::new);  BigDecimal  debitedAccountBalance  =  calculateDebitedBalance(debitedAccount,  amount);  BigDecimal  creditedAccountBalance  =  calculateCreditedBalance(creditedAccount,  amount);  debitedAccount.setBalance(debitedAccountBalance);  creditedAccount.setBalance(creditedAccountBalance);  	if  (debitedAccount.isDisabled()  ||  creditedAccount.isDisabled()){  throw  new  IllegalStateException( "Account  disabled ");  }    	44	add
150	bears_7	buggy:  }  else  {  if  (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS))  {  return  ctxt.handleWeirdNumberValue(_enumClass(),  index,   "not  allowed  to  deserialize  Enum  value  out  of  number:  disable  DeserializationConfig.DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS  to  allow "  );  }  context:  private  final  Object  _deserializeAltString(JsonParser  p,  DeserializationContext  ctxt,  CompactStringObjectMap  lookup,  String  name)  throws  IOException  {  name  =  name.trim();  if  (name.length()  ==  0)  {  if  (ctxt.isEnabled(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT))  {  return  null;  }      }  else  {      //  [databind#149]:  Allow  use  of  'String'  indexes  as  well  char  c  =  name.charAt(0);  if  (c  >=  '0'  &&  c  <=  '9')  {  try  {  int  index  =  Integer.parseInt(name);          if  (ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS))  {          return  ctxt.handleWeirdNumberValue(_enumClass(),  index,  	}  else  if  (!ctxt.isEnabled(DeserializationFeature.FAIL_ON_NUMBERS_FOR_ENUMS))  {  	170	replace-6
238	bears_77	buggy:  context:  BLOCK  }  String  getContent();  	String  LINE_SEPARATOR  =   "\n ";    	59	add
27	bears_98	buggy:  if  (parser.hasNext(4))  {  context:  position.set(Position.KEY_SATELLITES,  parser.next());  position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.HEM_DEG));  position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.HEM_DEG));  position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble()));  position.setCourse(parser.nextDouble());  position.setAltitude(parser.nextDouble());  position.set(Position.KEY_HDOP,  parser.next());      if  (parser.hasNext(4))  {  position.setNetwork(new  Network(CellTower.from(  parser.nextInt(),  parser.nextInt(),  parser.nextInt(16),  parser.nextInt(16),  parser.nextInt())));  }  if  (parser.hasNext())  {  position.set(Position.KEY_ODOMETER,  parser.nextInt());  }  position.set(Position.KEY_POWER,  parser.next());  position.set(Position.KEY_BATTERY,  parser.next());  	if  (parser.hasNext(5))  {  	159	replace-1
8	bears_127	buggy:  decodeStatus(position,  buf.readUnsignedShort());  context:  position.set(Position.KEY_ALARM,  decodeAlarm(buf.readUnsignedByte()));  }  else  if  (type  ==  MSG_STATE)  {  int  statusType  =  buf.readUnsignedByte();  position.set(Position.KEY_EVENT,  statusType);  if  (statusType  ==  0x01  ||  statusType  ==  0x02  ||  statusType  ==  0x03)  {  buf.readUnsignedInt();  //  device  time      decodeStatus(position,  buf.readUnsignedShort());  }  }  return  position;  }  	if  (buf.readableBytes()  >=  2)  {  decodeStatus(position,  buf.readUnsignedShort());  }  	163	replace-1
118	bears_166	buggy:  context:  private  boolean  isReady  =  false;  private  Phase  phase  =  Phase.Pending;  private  List<String>  messages  =  new  ArrayList<>();  public  Status(boolean  isReady)  {  this.isReady  =  isReady;  }  public  Status(io.enmasse.address.model.Status  other)  {  this.isReady  =  other.isReady();  this.messages.addAll(other.getMessages());  }  public  boolean  isReady()  {  return  isReady;  }  public  Phase  getPhase()  {  return  phase;  	this.phase  =  other.getPhase();  	24	add
46	bears_189	buggy:  context:  private  SteeringSystem  steeringSystem;  private  SteeringWheel  steeringWheel;  private  final  List<UltrasonicSensor>  ultrasonicSensors  =  new  ArrayList<>();  public  AutomatedCar(int  x,  int  y,  String  imageFileName)  {  super(x,  y,  imageFileName);  final  int  carTestX  =  200;  	Detector  d  =  Detector.getDetector();  d.setWorldObjects(w.getWorldObjects());  	36	add
34	bears_131	buggy:  int  index  =  Integer.valueOf(temp.substring(0,  2),  16);  double  value  =  Short.valueOf(temp.substring(2),  16);  double  value  =  Byte.valueOf(temp.substring(2,  4),  16);  value  +=  (value  <  0  ?  -0.01  :  0.01)  *  Integer.valueOf(temp.substring(4),  16);  context:  int  protocol  =  parser.nextInt(0);  if  (parser.hasNext())  {  String  fuel  =  parser.next();  position.set(Position.KEY_FUEL_LEVEL,  Integer.parseInt(fuel.substring(0,  2),  16)  +  Integer.parseInt(fuel.substring(2),  16)  *  0.01);  }  if  (parser.hasNext())  {  for  (String  temp  :  parser.next().split( "\\| "))  {      int  index  =  Integer.valueOf(temp.substring(0,  2),  16);  if  (protocol  >=  3)  {          double  value  =  Short.valueOf(temp.substring(2),  16);  position.set(Position.PREFIX_TEMP  +  index,  value  *  0.01);  }  else  {          double  value  =  Byte.valueOf(temp.substring(2,  4),  16);          value  +=  (value  <  0  ?  -0.01  :  0.01)  *  Integer.valueOf(temp.substring(4),  16);  	int  index  =  Integer.parseInt(temp.substring(0,  2),  16);  double  value  =  (short)  Integer.parseInt(temp.substring(2),  16);  double  value  =  Byte.parseByte(temp.substring(2,  4),  16);  value  +=  (value  <  0  ?  -0.01  :  0.01)  *  Integer.parseInt(temp.substring(4),  16);  	222	replace-4
45	bears_130	buggy:  .number( "(x+), ")          //  power  context:  .number( "(d+), ")          //  runtime  .number( "(d+)| ")          //  mcc  .number( "(d+)| ")          //  mnc  .number( "(x+)| ")          //  lac  .number( "(x+), ")          //  cid  .number( "(x+), ")          //  state  .number( "(x+)?| ")        //  adc1  .number( "(x+)?| ")        //  adc2  .number( "(x+)?| ")        //  adc3  .number( "(x+)| ")          //  battery      .number( "(x+), ")          //  power  .groupBegin()  .expression( "([^,]+)?, ")      //  event  specific  .expression( "[^,]*, ")        //  reserved  .number( "d*, ")        //  protocol  .number( "(x{4})? ")        //  fuel  .number( "(?:,(x{6}(?:|x{6})*))? ")    //  temperature  .or()  .any()  	.number( "(x+)?, ")                                        //  power  	72	replace-1
47	bears_188	buggy:  paintComponent(getGraphics());  context:  public  void  updateDisplayedValues(ReadOnlyInputPacket  inputPacket)  {  gasProgressBar.setValue(inputPacket.getGasPedalPosition());  breakProgressBar.setValue(inputPacket.getBreakPedalPosition());  speedAngle  =  calculateSpeedometer(0);  rpmAngle  =  calculateTachometer(0);      paintComponent(getGraphics());  }  private  void  initializeDashboard()  {  setLayout(null);  	repaint();  	59	replace-1
242	bears_76	buggy:  if  (getTemplateParameterType(ref.getFactory()).isSubtypeOf(ref.getType()))  {  context:  return  true;  }  if  (ref.getType()  instanceof  CtTypeParameterReference)  {  return  false;  }  if  (ref.getSimpleName().equals( "this "))  {  return  false;  }  if  (getTemplateParameterType(ref.getFactory()).isSubtypeOf(ref.getType()))  {  //the  type  of  template  field  is  or  extends  from  class  TemplateParameter.  return  true;  }  return  false;  }  	if  (TemplateParameter.class.getName().equals(ref.getType().getQualifiedName()))  {  	271	replace-1
29	bears_99	buggy:  context:  result  =  result  *  10  +  BcdUtil.readInteger(buf,  length)  *  0.0001;  result  /=  60;  result  +=  degrees;  return  result;  }  private  void  processStatus(Position  position,  long  status)  {  if  (!BitUtil.check(status,  0)  ||  !BitUtil.check(status,  1)  ||  !BitUtil.check(status,  2))  {  if  (!BitUtil.check(status,  0))  {  	}  else  if  (marker  ==  'X')  {    if  (buf.readableBytes()  >=  MESSAGE_SHORT)  {  return  buf.readBytes(MESSAGE_SHORT);  }    	69	add
149	bears_6	buggy:  context:  package  com.fasterxml.jackson.databind.introspect;  		-2	add
160	bears_21	buggy:  if  (property  !=  null)  {  JsonFormat.Value  format  =  findFormatOverrides(serializers,  property,  handledType());  if  (format  !=  null)  {  JsonFormat.Shape  shape  =  format.getShape();  if  (shape.isNumeric())  {  return  withFormat(Boolean.TRUE,  null);  }  if  ((shape  ==  JsonFormat.Shape.STRING)  ||  format.hasPattern()  ||  format.hasLocale()  ||  format.hasTimeZone())  {  TimeZone  tz  =  format.getTimeZone();  final  String  pattern  =  format.hasPattern()  ?  format.getPattern()  :  StdDateFormat.DATE_FORMAT_STR_ISO8601;  final  Locale  loc  =  format.hasLocale()  ?  format.getLocale()  :  serializers.getLocale();  SimpleDateFormat  df  =  new  SimpleDateFormat(pattern,  loc);  if  (tz  ==  null)  {  tz  =  serializers.getTimeZone();  }  df.setTimeZone(tz);  return  withFormat(Boolean.FALSE,  df);  }  return  this;  context:  _useTimestamp  =  useTimestamp;  _customFormat  =  customFormat;  }  public  abstract  DateTimeSerializerBase<T>  withFormat(Boolean  timestamp,  DateFormat  customFormat);  public  JsonSerializer<?>  createContextual(SerializerProvider  serializers,  BeanProperty  property)  throws  JsonMappingException  {      if  (property  !=  null)  {      JsonFormat.Value  format  =  findFormatOverrides(serializers,  property,  handledType());      if  (format  !=  null)  {      //  Simple  case  first:  serialize  as  numeric  timestamp?      JsonFormat.Shape  shape  =  format.getShape();      if  (shape.isNumeric())  {          return  withFormat(Boolean.TRUE,  null);      }      if  ((shape  ==  JsonFormat.Shape.STRING)  ||  format.hasPattern()              ||  format.hasLocale()  ||  format.hasTimeZone())  {  	if  (property  ==  null)  {  return  this;  }  JsonFormat.Value  format  =  findFormatOverrides(serializers,  property,  handledType());  if  (format  ==  null)  {  return  this;  }  JsonFormat.Shape  shape  =  format.getShape();  if  (shape.isNumeric())  {  return  withFormat(Boolean.TRUE,  null);  }    if  (format.hasPattern())  {  final  Locale  loc  =  format.hasLocale()  ?  format.getLocale()  :  serializers.getLocale();  SimpleDateFormat  df  =  new  SimpleDateFormat(format.getPattern(),  loc);  TimeZone  tz  =  format.hasTimeZone()  ?  format.getTimeZone()  :  serializers.getTimeZone();  df.setTimeZone(tz);  return  withFormat(Boolean.FALSE,  df);  }    final  boolean  hasLocale  =  format.hasLocale();  final  boolean  hasTZ  =  format.hasTimeZone();  final  boolean  asString  =  (shape  ==  JsonFormat.Shape.STRING);    if  (!hasLocale  &&  !hasTZ  &&  !asString)  {  return  this;  }    DateFormat  df0  =  serializers.getConfig().getDateFormat();  if  (df0  instanceof  StdDateFormat)  {  StdDateFormat  std  =  (StdDateFormat)  df0;  if  (format.hasLocale())  {  std  =  std.withLocale(format.getLocale());  }  if  (format.hasTimeZone())  {  std  =  std.withTimeZone(format.getTimeZone());  return  withFormat(Boolean.FALSE,  std);  }    if  (!(df0  instanceof  SimpleDateFormat))  {  serializers.reportMappingProblem(   "Configured  `DateFormat`  (%s)  not  a  `SimpleDateFormat`;  can  not  configure  `Locale`  or  `TimeZone` ",  df0.getClass().getName());  }  SimpleDateFormat  df  =  (SimpleDateFormat)  df0;  if  (hasLocale)  {  df  =  new  SimpleDateFormat(df.toPattern(),  format.getLocale());  }  else  {  df  =  (SimpleDateFormat)  df.clone();  }  TimeZone  newTz  =  format.getTimeZone();  boolean  changeTZ  =  (newTz  !=  null)  &&  !newTz.equals(df.getTimeZone());  if  (changeTZ)  {  df.setTimeZone(newTz);  return  withFormat(Boolean.FALSE,  df);  	52	replace-24
65	bears_235	buggy:  context:  accountRepository.save(account);  }  public  void  disable(int  accountId)  {  Optional<Account>  wrappedAccount  =  accountRepository.findById(accountId);  Account  account  =  wrappedAccount.orElseThrow(NoSuchElementException::new);  account.setDisabled(true);  accountRepository.save(account);  }  	if  (hasAnyChildrenAccountEnabled(account)){  throw  new  IllegalStateException( "Children  accounts  enabled ");  }    private  boolean  hasAnyChildrenAccountEnabled(Account  account){  return  account.getChildren().stream()  .filter(a  ->  !a.isDisabled())  .findAny()  .isPresent();  }  	108	add
227	bears_37	buggy:  context:  if  (rtMethod  ==  null  ||  getClass()  !=  rtMethod.getClass())  {  return  false;  }  if  (name  !=  null  ?  !name.equals(rtMethod.name)  :  rtMethod.name  !=  null)  {  return  false;  }  return  Arrays.equals(parameterTypes,  rtMethod.parameterTypes);  }  }  	ctMethod.setDefaultMethod(method.isDefault());  	162	add
184	bears_184	buggy:  .filter(it  ->  it.getJavaType().equals(entity))  //  context:  public  boolean  isSingleIdAttribute(Class<?>  entity,  String  name,  Class<?>  attributeType)  {  return  metamodel.getEntities().stream()  //  .filter(it  ->  it.getJavaType().equals(entity))  //  .findFirst()  //  .flatMap(it  ->  getSingularIdAttribute(it))  //  .filter(it  ->  it.getJavaType().equals(attributeType))  //  .map(it  ->  it.getName().equals(name))  //  .orElse(false);  }  	.filter(it  ->  entity.equals(it.getJavaType()))  //  	79	replace-1
195	bears_56	buggy:  if  (targetType.getSimpleName().equals(ref.getSimpleName())  &&  !targetType.equals(ref))  {  context:  return  result;  }  protected  boolean  isTypeInCollision(CtReference  ref,  boolean  fqnMode)  {  if  (targetType.getSimpleName().equals(ref.getSimpleName())  &&  !targetType.equals(ref))  {  return  true;  }  try  {  CtElement  parent;  if  (ref  instanceof  CtTypeReference)  {  parent  =  ref.getParent();  }  else  {  	if  (targetType  !=  null  &&  targetType.getSimpleName().equals(ref.getSimpleName())  &&  !targetType.equals(ref))  {  	566	replace-1
125	bears_151	buggy:  if  (value  instanceof  String)  {  subProperties.put(subName,  String.valueOf(value));  }  context:  Map<String,  String>  subProperties  =  new  LinkedHashMap<String,  String>();  String  normalizedPrefix  =  prefix.endsWith( ". ")  ?  prefix  :  prefix  +   ". ";  for  (PropertySource<?>  source  :  propertySources)  {  if  (source  instanceof  EnumerablePropertySource)  {  for  (String  name  :  ((EnumerablePropertySource<?>)  source).getPropertyNames())  {  if  (name.startsWith(normalizedPrefix))  {  String  subName  =  name.substring(normalizedPrefix.length());  Object  value  =  source.getProperty(name);          if  (value  instanceof  String)  {          subProperties.put(subName,  String.valueOf(value));          }  }  }  }  }  return  subProperties;  	subProperties.put(subName,  String.valueOf(value));  	55	replace-3
101	bears_95	buggy:  return  entity.getType().getClassLoader()  !=  null  &&  !entity.getType().getPackage().getName().startsWith( "java ");  context:  try  {  return  ReflectionUtils.findMethod(entity.getType().getClassLoader().getClass(),   "defineClass ",  String.class,  byte[].class,  Integer.TYPE,  Integer.TYPE,  ProtectionDomain.class)  !=  null;  }  catch  (Exception  e)  {  return  false;  }  }  private  static  boolean  isTypeInjectable(PersistentEntity<?,  ?>  entity)  {  return  entity.getType().getClassLoader()  !=  null  &&  !entity.getType().getPackage().getName().startsWith( "java ");  }  private  boolean  hasUniquePropertyHashCodes(PersistentEntity<?,  ?>  entity)  {  Set<Integer>  hashCodes  =  new  HashSet<>();  	  Class<?>  type  =  entity.getType();  return  type.getClassLoader()  !=  null  &&  (type.getPackage()  ==  null  ||  !type.getPackage().getName().startsWith( "java "));  	136	replace-1
13	bears_110	buggy:  .any()  context:  .number( "(d+.d+), ")      //  fuel  .number( "(-?d+), ")        //  altitude  .number( "(x+), ")          //  lac  .number( "(x+)# ")          //  cid  .or()  .number( ",(d+), ")  .number( "(d+), ")  .number( "(d+), ")  .number( "(d+)# ")  .or()      .any()  .groupEnd()  .compile();  private  static  final  Pattern  PATTERN_NBR  =  new  PatternBuilder()  .text( "* ")  .expression( ".., ")        //  manufacturer  	.expression( ",.* ")  .or()  .text( "# ")  	187	replace-1
84	bears_239	buggy:  if  (token.type  !=  TokenType.IDENTIFIER  &&  token.type  !=  TokenType.YIELD  &&  token.type  !=  TokenType.LET  &&  token.type  !=  TokenType.ASYNC)  {  context:  PropertyName  propName  =  keyOrMethod.left().fromJust();  if  (propName  instanceof  StaticPropertyName)  {  StaticPropertyName  staticPropertyName  =  (StaticPropertyName)  propName;  if  (this.eat(TokenType.ASSIGN))  {  Expression  init  =  this.isolateCoverGrammar(this::parseAssignmentExpression).left().fromJust();  this.firstExprError  =  this.createErrorWithLocation(startLocation,  ErrorMessages.ILLEGAL_PROPERTY);  AssignmentTargetPropertyIdentifier  toReturn  =  new  AssignmentTargetPropertyIdentifier(this.transformDestructuring(staticPropertyName),  Maybe.of(init));  return  Either.right(this.finishNode(startState,  toReturn));  }  if  (!this.match(TokenType.COLON))  {          if  (token.type  !=  TokenType.IDENTIFIER  &&  token.type  !=  TokenType.YIELD  &&  token.type  !=  TokenType.LET  &&  token.type  !=  TokenType.ASYNC)  {  throw  this.createUnexpected(token);  }  ShorthandProperty  toReturn  =  new  ShorthandProperty(this.finishNode(startState,  new  IdentifierExpression(staticPropertyName.value)));  return  Either.left(this.finishNode(startState,  toReturn));  }  }  }  	if  (token.type  !=  TokenType.IDENTIFIER  &&  token.type  !=  TokenType.YIELD  &&  token.type  !=  TokenType.LET  &&  token.type  !=  TokenType.ASYNC  &&  token.type  !=  TokenType.AWAIT)  {  	2181	replace-1
198	bears_67	buggy:  return  createReference(e.getParent(CtType.class).getReference(),  lambdaMethod  ==  null  ?  null  :  lambdaMethod.getType(),  executableName,  refs);  context:  :  factory.Type().OBJECT.clone();  }  String  executableName  =  e.getSimpleName();  if  (e  instanceof  CtMethod)  {  boolean  isStatic  =  ((CtMethod)  e).hasModifier(ModifierKind.STATIC);  return  createReference(((CtMethod<T>)  e).getDeclaringType().getReference(),  isStatic,  ((CtMethod<T>)  e).getType().clone(),  executableName,  refs);  }  else  if  (e  instanceof  CtLambda)  {  CtMethod<T>  lambdaMethod  =  ((CtLambda)  e).getOverriddenMethod();  return  createReference(e.getParent(CtType.class).getReference(),  lambdaMethod  ==  null  ?  null  :  lambdaMethod.getType(),  executableName,  refs);  }  else  if  (e  instanceof  CtAnonymousExecutable)  {  return  createReference(((CtAnonymousExecutable)  e).getDeclaringType().getReference(),  e.getType().clone(),  executableName);  }  return  createReference(((CtConstructor<T>)  e).getDeclaringType().getReference(),  ((CtConstructor<T>)  e).getType().clone(),  CtExecutableReference.CONSTRUCTOR_NAME,  refs);  }  	return  createReference(e.getParent(CtType.class).getReference(),  lambdaMethod  ==  null  ?  null  :  lambdaMethod.getType().clone(),  executableName,  refs);  	121	replace-1
64	bears_232	buggy:  l  =  (l  <<  8)  |  a[i];  context:  public  static  long  packLong(byte[]  a,  byte  pad)  {  return  pack(a,  pad,  8);  }  private  static  long  pack(byte[]  a,  byte  pad,  int  size)  {  long  l  =  0;  int  i  =  0;  for  (;  i  <  Math.min(a.length,  size);  i++)      l  =  (l  <<  8)  |  a[i];  for  (;  i  <  size;  i++)  l  =  (l  <<  8)  |  pad;  return  l;  }  	l  =  (l  <<  8)  |  a[i]  &  0xFF;  	93	replace-1
241	bears_71	buggy:  context:  final  SignaturePrinter  pr  =  new  SignaturePrinter();  pr.scan(this);  return  pr.getSignature();  }  public  CtExecutableReference<T>  clone()  {  return  (CtExecutableReference<T>)  super.clone();  }  }  	this.exploringParameterizedBindings.put(binding,  ref);  	476	add
10	bears_121	buggy:  if  (channel.getPipeline().get(HttpRequestDecoder.class)  !=  null  context:  if  (remoteAddress  !=  null)  {  message.append( "  ( ").append(((InetSocketAddress)  remoteAddress).getHostString()).append( ") ");  }  Log.warning(message.toString());  }  }  return  deviceId;  }  public  DeviceSession  getDeviceSession(Channel  channel,  SocketAddress  remoteAddress,  String...  uniqueIds)  {      if  (channel.getPipeline().get(HttpRequestDecoder.class)  !=  null  ||  Context.getConfig().getBoolean( "decoder.ignoreSessionCache "))  {  long  deviceId  =  findDeviceId(remoteAddress,  uniqueIds);  if  (deviceId  !=  0)  {  if  (Context.getConnectionManager()  !=  null)  {  Context.getConnectionManager().addActiveDevice(deviceId,  protocol,  channel,  remoteAddress);  }  return  new  DeviceSession(deviceId);  }  else  {  	if  (channel  !=  null  &&  channel.getPipeline().get(HttpRequestDecoder.class)  !=  null  	109	replace-1
179	bears_199	buggy:  private  synchronized  void  addArrivedRecordsInput(ProcessRecordsInput  processRecordsInput)  throws  InterruptedException  {  context:  drainQueueForRequests();  }  public  void  cancel()  {  requestedResponses.set(0);  }  });  }  private  synchronized  void  addArrivedRecordsInput(ProcessRecordsInput  processRecordsInput)  throws  InterruptedException  {  getRecordsResultQueue.put(processRecordsInput);  prefetchCounters.added(processRecordsInput);  }  private  synchronized  void  drainQueueForRequests()  {  while  (requestedResponses.get()  >  0  &&  !getRecordsResultQueue.isEmpty())  {  subscriber.onNext(getNextResult());  }  	private  void  addArrivedRecordsInput(ProcessRecordsInput  processRecordsInput)  throws  InterruptedException  {  	179	replace-1
91	bears_160	buggy:  context:  }  else  if  (tokens.canConsumeAnyOf( "INDEX ",   "KEY "))  {  tokens.consume();  //  index  name  }  else  if  (tokens.canConsume( "PARTITION "))  {  parsePartitionNames(start);  }  else  {  if(!isNextTokenQuotedIdentifier())  {  tokens.canConsume( "COLUMN ");  }  String  columnName  =  parseColumnName();  table.removeColumn(columnName);  }  }  else  if  (tokens.canConsume( "ALTER "))  {  if  (!isNextTokenQuotedIdentifier())  {  tokens.canConsume( "COLUMN ");  }  tokens.consume();  //  column  name  if  (!tokens.canConsume( "DROP ",   "DEFAULT "))  {  tokens.consume( "SET ");  parseDefaultClause(start);  	tokens.canConsume( "RESTRICT ");  	1228	add
132	bears_249	buggy:  this.dep  =  new  Clock<>(commitDepBox.dep);  context:  private  final  MessageMap  messageMap;  public  CommittedQueueBox(Dot  dot,  Clock<ExceptionSet>  dep,  Message  message,  Clock<MaxInt>  conf)  {  this.dots  =  new  Dots(dot);  this.dep  =  dep;  this.messageMap  =  new  MessageMap(dot,  message,  conf);  }  public  CommittedQueueBox(CommittedQueueBox  commitDepBox)  {  this.dots  =  new  Dots(commitDepBox.dots);      this.dep  =  new  Clock<>(commitDepBox.dep);  this.messageMap  =  new  MessageMap(commitDepBox.messageMap);  }  	if  (commitDepBox.dep  !=  null)  {  this.dep  =  new  Clock<>(commitDepBox.dep);  }  else  {  this.dep  =  null;  }  	38	replace-1
43	bears_137	buggy:  int  flagIndex  =  buf.indexOf(buf.readerIndex(),  buf.writerIndex(),  new  StringFinder( "AA "));  if  (flagIndex  !=  -1  &&  flagIndex  -  beginIndex  ==  6)  {  context:  int  beginIndex  =  buf.indexOf(buf.readerIndex(),  buf.writerIndex(),  new  StringFinder( "$$ "));  if  (beginIndex  ==  -1)  {  return  null;  }  else  if  (beginIndex  >  buf.readerIndex())  {  buf.readerIndex(beginIndex);  }  int  length;      int  flagIndex  =  buf.indexOf(buf.readerIndex(),  buf.writerIndex(),  new  StringFinder( "AA "));      if  (flagIndex  !=  -1  &&  flagIndex  -  beginIndex  ==  6)  {  length  =  Integer.parseInt(buf.toString(buf.readerIndex()  +  2,  4,  StandardCharsets.US_ASCII));  }  else  {  length  =  Integer.parseInt(buf.toString(buf.readerIndex()  +  2,  2,  StandardCharsets.US_ASCII),  16);  }  if  (length  <=  buf.readableBytes())  {  	int  separatorIndex  =  buf.indexOf(buf.readerIndex(),  buf.writerIndex(),  (byte)  '|');  if  (separatorIndex  >  0  &&  separatorIndex  -  beginIndex  >  19)  {  	45	replace-2
114	bears_84	buggy:  context:  markModified(object);  }  }  }  	protected  final  boolean  isAuditable(Object  source)  {  return  factory.getBeanWrapperFor(source)  !=  null;  }    	95	add
102	bears_92	buggy:  AnnotationDetectionFieldCallback  numberCallback  =  new  AnnotationDetectionFieldCallback(annotationType);  ReflectionUtils.doWithFields(entity.getClass(),  numberCallback);  return  numberCallback.getValue(entity);  context:  public  <T>  T  getDelegate()  {  return  (T)  entity;  }  private  static  <T>  Lazy<Optional<T>>  detectAnnotation(Object  entity,  Class<?  extends  Annotation>  annotationType)  {  return  Lazy.of(()  ->  {  AnnotationDetectionFieldCallback  numberCallback  =  new  AnnotationDetectionFieldCallback(annotationType);  ReflectionUtils.doWithFields(entity.getClass(),  numberCallback);  return  numberCallback.getValue(entity);  });  }  }  	AnnotationDetectionFieldCallback  callback  =  new  AnnotationDetectionFieldCallback(annotationType);  ReflectionUtils.doWithFields(entity.getClass(),  callback);  return  Optional.ofNullable(callback.getValue(entity));  	88	replace-3
248	bears_156	buggy:  if  (columnNames.length  ==  1  &&  columnNames[0]  ==  null)  {  context:  }  else  if  (entityPersister  instanceof  SingleTableEntityPersister)  {  tables  =  new  Table[((SingleTableEntityPersister)  entityPersister).getSubclassTableSpan()];  for  (int  i  =  0;  i  <  tables.length;  i++)  {  tables[i]  =  database.getTable(entityPersister.getSubclassTableName(i));  }  }  else  {  tables  =  new  Table[]  {  database.getTable(entityPersister.getTableName())  };  }      if  (columnNames.length  ==  1  &&  columnNames[0]  ==  null)  {  Type  propertyType  =  entityPersister.getPropertyType(attributeName);  long  length;  int  precision;  int  scale;  try  {  	boolean  isFormula  =  columnNames.length  ==  1  &&  columnNames[0]  ==  null;  boolean  isSubselect  =  tables.length  ==  1  &&  tables[0]  ==  null;    if  (isFormula  ||  isSubselect)  {  if  (propertyType  instanceof  org.hibernate.type.EntityType)  {  propertyType  =  ((org.hibernate.type.EntityType)  propertyType).getIdentifierOrUniqueKeyType(sfi);  }    	509	replace-1
85	bears_204	buggy:  context:  public  UnregisterResponseMessage(boolean  success,  String[]  messages)  {  super(ViewMessageType.UNREGISTER_RESPONSE);  this.success  =  success;  this.messages  =  messages;  }  	  @Override  public  boolean  equals(Object  o){  if  (o  ==  null  ||  !(o  instanceof  LoginResponseMessage))  {  return  false;  }  LoginResponseMessage  other  =  (LoginResponseMessage)  o;  return  success  ==  other.success  &&  nickname.equals(other.nickname);  }    	27	add
246	bears_47	buggy:  context:  ref.setSimpleName( " ");  }  else  {  ref.setSimpleName(String.valueOf(binding.sourceName()));  if  (binding.enclosingType()  !=  null)  {  ref.setDeclaringType(getTypeReference(binding.enclosingType()));  }  else  {  ref.setPackage(getPackageReference(binding.getPackage()));  }  }  }  if  (((ParameterizedTypeBinding)  binding).arguments  !=  null)  {  for  (TypeBinding  b  :  ((ParameterizedTypeBinding)  binding).arguments)  {  if  (bindingCache.containsKey(b))  {  ref.addActualTypeArgument(getCtCircularTypeReference(b));  }  else  {  ref.addActualTypeArgument(getTypeReference(b));  	if  (binding.actualType()  instanceof  MissingTypeBinding)  {  ref  =  getTypeReference(binding.actualType());  }  	644	add
177	bears_245	buggy:  context:  }  public  Builder  addModifiers(Modifier...  modifiers)  {  Collections.addAll(this.modifiers,  modifiers);  return  this;  }  public  Builder  addModifiers(Iterable<Modifier>  modifiers)  {  checkNotNull(modifiers,   "modifiers  ==  null ");  for  (Modifier  modifier  :  modifiers)  {  this.modifiers.add(modifier);  }  return  this;  }  public  ParameterSpec  build()  {  return  new  ParameterSpec(this);  	if  (!modifier.equals(Modifier.FINAL))  {  throw  new  IllegalStateException( "unexpected  parameter  modifier:   "  +  modifier);  }  	163	add
61	bears_183	buggy:  return  queryAll(entityClass,  pageable,  null);  context:  SpannerQueryOptions  options)  {  Assert.notNull(pageable,   "Pageable  must  not  be  null! ");  Long  count  =  count(entityClass);  List<T>  list  =  queryAll(entityClass,  pageable.getSort(),  options);  return  new  PageImpl(list,  pageable,  count);  }  public  <T>  Page<T>  queryAll(Class<T>  entityClass,  Pageable  pageable)  {  return  queryAll(entityClass,  pageable,  null);  }  public  void  insert(Object  object)  {  applyMutationUsingEntity(this.mutationFactory::insert,  object);  }  	return  queryAll(entityClass,  pageable,  new  SpannerQueryOptions()  .setOffset(pageable.getOffset()).setLimit(pageable.getPageSize()));  	181	replace-1
96	bears_212	buggy:  _writer.close();  context:  _writer.flush();  }  public  void  close()  throws  IOException  {  if  (!isClosed())  {  _emitter.emit(new  DocumentEndEvent(null,  null,  false));  _emitter.emit(new  StreamEndEvent(null,  null));  super.close();      _writer.close();  	  if  (_writer  !=  null)  {  if  (_ioContext.isResourceManaged()  ||  isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET))  {  _writer.close();  }  else    if  (isEnabled(JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM))  {  _writer.flush();  }  }  	454	replace-1
105	bears_244	buggy:  context:  private  static  boolean  hasKotlinCopyMethod(PersistentProperty<?>  property)  {  Class<?>  type  =  property.getOwner().getType();  if  (isAccessible(type)  &&  org.springframework.data.util.ReflectionUtils.isKotlinClass(type))  {  return  KotlinCopyMethod.findCopyMethod(type).filter(it  ->  it.supportsProperty(property)).isPresent();  }  return  false;  }  }  	if  (!ClassUtils.isPresent(ObjectInstantiator.class.getName(),  type.getClassLoader()))  {  return  true;  }    	1438	add
234	bears_46	buggy:  context:  public  Object  getMetadata(String  key)  {  if  (metadata  ==  null)  {  return  null;  }  return  metadata.get(key);  }  public  Set<String>  getMetadataKeys()  {  return  metadata.keySet();  }  public  List<CtComment>  getComments()  {  return  unmodifiableList(comments);  }  	if  (metadata  ==  null)  {  return  Collections.EMPTY_SET;  }  	389	add
121	bears_157	buggy:  return  otherNode.getNodeId()  ==  null  context:  public  boolean  isSameNode(@Nonnull  String  nodeString)  {  NodeLocator  otherNode  =  NodeLocator.parseString(nodeString);  if  (otherNode.getNodeId()  !=  null  &&  otherNode.getNodeId().equals(getNodeId()))  {  return  true;  }  else  {      //  Otherwise,  the  other  node  must  not  have  a  node  ID  set      return  otherNode.getNodeId()  ==  null  &&  otherNode.getHost().equals(getHost())  &&  otherNode.getPort()  ==  getPort();  }  }  }  	return  !(otherNode.getNodeId()  ==  null  &&  getNodeId()  !=  null)  	148	replace-1
115	bears_85	buggy:  Class<?>  rawType  =  ResolvableType.forType(type).getRawClass();  context:  public  boolean  canRead(Type  type,  Class<?>  contextClass,  MediaType  mediaType)  {  if  (!canRead(mediaType))  {  return  false;  }  Class<?>  rawType  =  ResolvableType.forType(type).getRawClass();  Boolean  result  =  supportedTypesCache.get(rawType);  if  (result  !=  null)  {  return  result;  }  result  =  rawType.isInterface()  &&  AnnotationUtils.findAnnotation(rawType,  ProjectedPayload.class)  !=  null;  	ResolvableType  owner  =  contextClass  ==  null  ?  null  :  ResolvableType.forClass(contextClass);  Class<?>  rawType  =  ResolvableType.forType(type,  owner).resolve(Object.class);  	120	replace-1
35	bears_136	buggy:  result.writeShort(2  +  2  +  2  +  buf.readableBytes());  //  length  context:  if  (content  !=  null)  {  buf.writeBytes(content);  }  ChannelBuffer  result  =  ChannelBuffers.dynamicBuffer();  if  (connectionless)  {  result.writeByte('E');  result.writeByte('L');      result.writeShort(2  +  2  +  2  +  buf.readableBytes());  //  length  result.writeShort(checksum(buf.toByteBuffer()));  }  result.writeBytes(buf);  return  result;  }  	result.writeShort(2  +  buf.readableBytes());  //  length  	68	replace-1
251	bears_248	buggy:  }  else  {  this.clientResponse  =  clientResponse;  fire(ClientPhase.RECEIVE_RESPONSE);  context:  redirects++;  Future<HttpClientRequest>  next  =  client.redirectHandler().apply(clientResponse);  if  (next  !=  null)  {  next.setHandler(ar  ->  {  if  (ar.succeeded())  {  sendRequest(ar.result());  }  else  {  fail(ar.cause());  }  });  }  }  else  {    this.clientResponse  =  clientResponse;    fire(ClientPhase.RECEIVE_RESPONSE);  }  }  	return;  this.clientResponse  =  clientResponse;  fire(ClientPhase.RECEIVE_RESPONSE);  	198	replace-3
90	bears_161	buggy:  parsePartitionDefinition(start,  table);  context:  }  else  if  (tokens.canConsume( "DISCARD ",   "PARTITION ")  ||  tokens.canConsume( "IMPORT ",   "PARTITION "))  {  if  (!tokens.canConsume( "ALL "))  {  tokens.consume();  //  partition  name  }  tokens.consume( "TABLESPACE ");  }  else  if  (tokens.canConsume( "COALLESCE ",   "PARTITION "))  {  tokens.consume();  //  number  }  else  if  (tokens.canConsume( "REORGANIZE ",   "PARTITION "))  {  parsePartitionNames(start);  tokens.consume( "INTO ",   "( ");      parsePartitionDefinition(start,  table);  tokens.consume(')');  }  else  if  (tokens.canConsume( "EXCHANGE ",   "PARTITION "))  {  tokens.consume();  //  partition  name  tokens.consume( "WITH ",   "TABLE ");  parseSchemaQualifiedName(start);  //  table  name  if  (tokens.canConsumeAnyOf( "WITH ",   "WITHOUT "))  {  	do  {  parsePartitionDefinition(start,  table);  }  while  (tokens.canConsume(','));  	1300	replace-1
100	bears_198	buggy:  this.encryptedDataKeys  =  request.getEncryptedDataKeys();  context:  .build();  }  public  static  final  class  Builder  {  private  CryptoAlgorithm  algorithm;  private  Map<String,  String>  encryptionContext;  private  List<KeyBlob>  encryptedDataKeys;  private  Builder(DecryptionMaterialsRequest  request)  {  this.algorithm  =  request.getAlgorithm();      this.encryptedDataKeys  =  request.getEncryptedDataKeys();  this.encryptedDataKeys  =  request.getEncryptedDataKeys();  }  private  Builder()  {}  public  DecryptionMaterialsRequest  build()  {  return  new  DecryptionMaterialsRequest(this);  }  	this.encryptionContext  =  request.getEncryptionContext();  	57	replace-1
9	bears_120	buggy:  context:  public  class  AplicomFrameDecoder  extends  FrameDecoder  {  protected  Object  decode(  ChannelHandlerContext  ctx,  Channel  channel,  ChannelBuffer  buf)  throws  Exception  {  if  (buf.readableBytes()  <  11)  {  return  null;  }  	while  (buf.readable()  &&  Character.isDigit(buf.getByte(buf.readerIndex())))  {  buf.readByte();  }    	30	add
206	bears_27	buggy:  if  (compilationunitdeclaration  !=  null)  {  context:  private  final  JDTTreeBuilder  jdtTreeBuilder;  ContextBuilder(JDTTreeBuilder  jdtTreeBuilder)  {  this.jdtTreeBuilder  =  jdtTreeBuilder;  }  void  enter(CtElement  e,  ASTNode  node)  {  stack.push(new  ASTPair(e,  node));  if  (!(e  instanceof  CtPackage)  ||  (compilationUnitSpoon.getFile()  !=  null  &&  compilationUnitSpoon.getFile().getName().equals(DefaultJavaPrettyPrinter.JAVA_PACKAGE_DECLARATION)))  {  if  (compilationunitdeclaration  !=  null)  {  e.setPosition(this.jdtTreeBuilder.getPositionBuilder().buildPositionCtElement(e,  node));  }  }  ASTPair  pair  =  stack.peek();  CtElement  current  =  pair.element;  if  (current  instanceof  CtExpression)  {  	if  (compilationunitdeclaration  !=  null  &&  !e.isImplicit())  {  	90	replace-1
181	bears_225	buggy:  while  (Future.class.isAssignableFrom(actualReturnType.getRawClass())  ||  ReactiveTypes.supports(actualReturnType.getRawClass()))  {  context:  this.method  =  method;  this.returnType  =  ResolvableType.forMethodReturnType(method);  this.parameters  =  parameters;  this.futureExecution  =  Future.class.isAssignableFrom(getReturnType().getRawClass());  this.reactiveExecution  =  ReactiveTypes.supports(getReturnType().getRawClass());  Collections.addAll(arguments,  method.getParameterTypes());  ResolvableType  actualReturnType  =  this.returnType;      while  (Future.class.isAssignableFrom(actualReturnType.getRawClass())      ||  ReactiveTypes.supports(actualReturnType.getRawClass()))  {  ResolvableType[]  generics  =  actualReturnType.getGenerics();  if  (generics.length  !=  1)  {  break;  }  actualReturnType  =  generics[0];  	while  (Future.class.isAssignableFrom(actualReturnType.getRawClass()))  {  	82	replace-2
50	bears_233	buggy:  WhiteList.add( "ro.pippo.session.SessionData ");  context:  public  class  ClassFilter  {  private  ArrayList<String>  WhiteList=  null;  public  ClassFilter()  {  WhiteList=new  ArrayList<String>();      WhiteList.add( "ro.pippo.session.SessionData ");  WhiteList.add( "java.util.HashMap ");  WhiteList.add( "ro.pippo.core.Flash ");  WhiteList.add( "java.util.ArrayList ");  }  public  boolean  isWhiteListed(String  className)  {  if  (className==null)  return  false;  for(String  name:WhiteList)  {  	WhiteList.add( "ro.pippo.session.DefaultSessionData ");  	12	replace-1
188	bears_66	buggy:  CtElement  parent2  =  ((CtExecutableReference)  parent).getDeclaration();  e  =  ((CtExecutableReference<?>)  parent).getDeclaringType().getTypeDeclaration();  context:  }  public  CtTypeParameter  getDeclaration()  {  if  (!isParentInitialized())  {  return  null;  }  CtElement  e  =  this;  CtElement  parent  =  getParent();  if  (parent  instanceof  CtExecutableReference)  {  CtElement  parent2  =  ((CtExecutableReference)  parent).getDeclaration();  	if  (parent  instanceof  CtTypeReference)  {  if  (parent.isParentInitialized()  ==  false)  {  return  null;  }  parent  =  parent.getParent();  }  CtElement  parent2  =  ((CtExecutableReference)  parent).getExecutableDeclaration();  e  =  e.getParent(CtFormalTypeDeclarer.class);  	180	replace-3
106	bears_89	buggy:  context:  protected  TypeInformation<?>  doGetComponentType()  {  return  createInfo(type.getActualTypeArguments()[0]);  }  	@Override  public  TypeInformation<?>  specialize(ClassTypeInformation<?>  type)  {  return  isResolvedCompletely()  ?  type  :  super.specialize(type);  }    	187	add
