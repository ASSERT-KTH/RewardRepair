bugid	bug	buggy	patch	lineNo	action
1	accumulo_3d55560a	buggy:  return  -1;  if  (count  >  other.count)  context:  }  public  int  compareTo(Key  o)  {  int  compare  =  super.compareTo(o);  if  (compare  !=  0)  return  compare;  if  (o  instanceof  MockMemKey)  {  MockMemKey  other  =  (MockMemKey)  o;  if  (count  <  other.count)    return  -1;      if  (count  >  other.count)  return  1;  }  else  {  return  1;  }  return  0;  }  	if  (count  >  other.count)  return  -1;  	72	replace-2
2	wicket_2d9ebf9a	buggy:  int  firstDigits  =  Integer.parseInt(creditCardNumber.substring(0,  5));  context:  private  CreditCard  isChinaUnionPay(String  creditCardNumber)  {  if  ((creditCardNumber.length()  >=  16  &&  creditCardNumber.length()  <=  19)  &&  (creditCardNumber.startsWith( "622 ")))  {  int  firstDigits  =  Integer.parseInt(creditCardNumber.substring(0,  5));  if  (firstDigits  >=  622126  &&  firstDigits  <=  622925)  {  return  CreditCard.CHINA_UNIONPAY;  }  }  return  CreditCard.INVALID;  }  	int  firstDigits  =  Integer.parseInt(creditCardNumber.substring(0,  6));  	325	replace-1
3	wicket_6cefb9f8	buggy:  if  (behavior.getStatelessHint(component))  context:  }  behavior.bind(component);  }  }  private  void  internalAdd(final  Behavior  behavior)  {  component.data_add(behavior);  if  (behavior.getStatelessHint(component))  {  getBehaviorId(behavior);  }  }  public  <M  extends  Behavior>  List<M>  getBehaviors(Class<M>  type)  {  	if  (behavior.getStatelessHint(component)  ==  false)  	66	replace-1
4	jackrabbit-oak_f4d5bbe1	buggy:  if  (doc.isCommitted(rev))  {  context:  Iterable<Revision>  revs  =  mergeSorted(of(  filter(doc.getLocalCommitRoot().keySet(),  cp),  filter(doc.getLocalRevisions().keySet(),  cp)),  StableRevisionComparator.REVERSE  );  for  (Revision  rev  :  revs)  {  if  (rev.compareRevisionTime(currentLastRev)  >  0)  {      if  (doc.isCommitted(rev))  {  return  rev;  }  }  else  {  break;  	rev  =  doc.getCommitRevision(rev);  if  (rev  !=  null)  {  	292	replace-1
5	wicket_f3d7565c	buggy:  PageParameters  cleanParameters  =  new  PageParameters(originalParameters);  cleanParameters.remove(WebRequest.PARAM_AJAX);  cleanParameters.remove(WebRequest.PARAM_AJAX_BASE_URL);  context:  private  PageParameters  cleanPageParameters(final  PageParameters  originalParameters)  {  PageParameters  cleanParameters  =  new  PageParameters(originalParameters);  //  WICKET-4038:  Ajax  related  parameters  are  set  by  wicket-ajax.js  when  needed.  //  They  shouldn't  be  propagated  to  the  next  requests  cleanParameters.remove(WebRequest.PARAM_AJAX);  cleanParameters.remove(WebRequest.PARAM_AJAX_BASE_URL);  	PageParameters  cleanParameters  =  null;  if  (originalParameters  !=  null)  {  cleanParameters  =  new  PageParameters(originalParameters);  cleanParameters.remove(WebRequest.PARAM_AJAX);  cleanParameters.remove(WebRequest.PARAM_AJAX_BASE_URL);  }  	91	replace-4
6	accumulo_019edb16	buggy:  context:  protected  abstract  static  class  RecordReaderBase<K,V>  extends  AbstractRecordReader<K,V>  {  protected  void  setupIterators(JobConf  job,  Scanner  scanner,  String  tableName,  org.apache.accumulo.core.client.mapred.RangeInputSplit  split)  {  List<IteratorSetting>  iterators  =  null;  if  (null  ==  split)  {  iterators  =  getIterators(job);  }  else  {  iterators  =  split.getIterators();  }  setupIterators(iterators,  scanner);  }  	if  (null  ==  iterators)  {  iterators  =  getIterators(job);  }  	325	add
7	wicket_89184b79	buggy:  if  (page  ==  null)  {  pageParameters  =  null;  }  context:  private  void  resolvePageInstance(Integer  pageId,  Class<?  extends  IRequestablePage>  pageClass,  PageParameters  pageParameters,  Integer  renderCount)  {  IRequestablePage  page  =  null;  boolean  freshCreated  =  false;  if  (pageId  !=  null)  {  page  =  getStoredPage(pageId);  if  (page  ==  null)  {  //  WICKET-4594  -  ignore  the  parsed  parameters  for  stateful  pages  pageParameters  =  null;  }  }  if  (page  ==  null)  {  		262	remove-5
8	wicket_bcea89fc	buggy:  context:  private  void  readObject(final  java.io.ObjectInputStream  s)  throws  IOException,  ClassNotFoundException  {  s.defaultReadObject();  int  numBuckets  =  s.readInt();  table  =  new  Entry[numBuckets];  init();  //  Give  subclass  a  chance  to  do  its  thing.  	modCount  =  new  AtomicInteger(0);    	1148	add
9	jackrabbit-oak_621a5101	buggy:  context:  public  LoginContextProvider  getLoginContextProvider(NodeStore  nodeStore)  {  String  appName  =  configuration.getConfigValue(PARAM_APP_NAME,  DEFAULT_APP_NAME);  Configuration  loginConfig;  try  {  loginConfig  =  Configuration.getConfiguration();  }  catch  (SecurityException  e)  {  log.warn( "Failed  to  retrieve  login  configuration:  using  default. ",  e);  loginConfig  =  new  OakConfiguration();  Configuration.setConfiguration(loginConfig);  }  return  new  LoginContextProviderImpl(appName,  loginConfig,  nodeStore,  this);  }  	if  (loginConfig.getAppConfigurationEntry(appName)  ==  null)  {  log.warn( "Failed  to  retrieve  login  configuration  for  {}:  using  default  configuration. ",  appName);  loginConfig  =  new  OakConfiguration();  Configuration.setConfiguration(loginConfig);  }  	80	add
10	logging-log4j2_a8a24357	buggy:  context:  package  org.apache.log4j;  public  class  PatternLayout  extends  Layout  {  public  String  format(final  LoggingEvent  event)  {  return   " ";  }  	public  PatternLayout(String  pattern)  {    }    	26	add
11	wicket_204849bc	buggy:  public  int  getCompatibilityScore(Request  request)  {  if  (urlStartsWith(request.getUrl(),  mountSegments))  {  int  countOptional  =  0;  int  fixedSegments  =  0;  for  (MountPathSegment  pathSegment  :  pathSegments)  {  fixedSegments  +=  pathSegment.getFixedPartSize();  countOptional  +=  pathSegment.getOptionalParameters();  }  return  mountSegments.length  -  countOptional  +  fixedSegments;  }  else  {  return  0;  }  }  context:  protected  boolean  pageMustHaveBeenCreatedBookmarkable()  {  return  false;  }  public  int  getCompatibilityScore(Request  request)  {  if  (urlStartsWith(request.getUrl(),  mountSegments))  {  /*  see  WICKET-5056  -  alter  score  with  pathSegment  type  */  int  countOptional  =  0;  int  fixedSegments  =  0;  for  (MountPathSegment  pathSegment  :  pathSegments)  {  fixedSegments  +=  pathSegment.getFixedPartSize();  	public  abstract  int  getCompatibilityScore(Request  request);  	274	replace-18
12	wicket_1b7afefc	buggy:  context:  log.warn( "component  not  enabled  or  visible;  ignoring  call.  Component:   "  +  component);  return;  }  if  (!behavior.isEnabled((Component)component))  {  log.warn( "behavior  not  enabled;  ignore  call.  Behavior  {}  at  component  {} ",  behavior,  component);  }  try  {  method.invoke(behavior,  new  Object[]  {  });  }  catch  (InvocationTargetException  e)  {  	return;  	258	add
13	jackrabbit-oak_c02ecef8	buggy:  setValues((Iterable<T>)  property.getValue(type.getArrayType()));  setValue(property.getValue(type));  context:  }  public  PropertyBuilder<T>  assignFrom(PropertyState  property)  {  if  (property  !=  null)  {  setName(property.getName());  if  (property.isArray())  {  isArray  =  true;      setValues((Iterable<T>)  property.getValue(type.getArrayType()));  }  else  {  isArray  =  false;  	if  (type  ==  Type.DATE)  {  setValues((Iterable<T>)  property.getValue(Type.STRINGS));  }  else  {  setValues((Iterable<T>)  property.getValue(type.getArrayType()));  }  if  (type  ==  Type.DATE)  {  setValue((T)  property.getValue(Type.STRING));  }  else  {  setValue(property.getValue(type));  }  	226	replace-2
14	commons-math_bb005b56	buggy:  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  context:  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));          out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  	out[i][j]  =  2  *  tDistribution.cumulativeProbability(-t);  	171	replace-1
15	flink_937963e3	buggy:  context:  }  Execution  exec  =  vertex.getTaskVertices()[state.getSubtask()]  .getCurrentExecutionAttempt();  exec.setInitialState(state.getState(),  recoveryTimestamp);  }  long  nextCheckpointId  =  checkpoint.getCheckpointID();  checkpointIdCounter.setCount(nextCheckpointId  +  1);  LOG.info( "Reset  the  checkpoint  ID  to  {} ",  nextCheckpointId);  this.appId  =  savepoint.getApplicationId();  LOG.info( "Reset  the  application  ID  to  {} ",  appId);  return  appId;  }  }  	checkpointIdCounter.start();  	233	add
16	camel_e7ac45b6	buggy:  if  (uri.contains( "& ")  &&  !uri.contains( "? "))  {  throw  new  ResolveEndpointFailedException(uri,   "Invalid  uri  syntax:  no  ?  marker  however  the  uri   "  +   "has  &  parameter  separators.  Check  the  uri  if  its  missing  a  ?  marker. ");  }    context:  protected  void  validateURI(String  uri,  String  path,  Map<String,  Object>  parameters)  {      //  check  for  uri  containing  &  but  no  ?  marker      if  (uri.contains( "& ")  &&  !uri.contains( "? "))  {      throw  new  ResolveEndpointFailedException(uri,   "Invalid  uri  syntax:  no  ?  marker  however  the  uri   "      +   "has  &  parameter  separators.  Check  the  uri  if  its  missing  a  ?  marker. ");      }  if  (uri.contains( "&& "))  {  Pattern  pattern  =  Pattern.compile( "RAW(.*&&.*) ");  Matcher  m  =  pattern.matcher(uri);  		200	remove-5
17	jackrabbit-oak_08f0b280	buggy:  cp.setProperty( "timestamp ",  now  +  lifetime);  context:  for  (String  n  :  checkpoints.getChildNodeNames())  {  NodeBuilder  cp  =  checkpoints.getChildNode(n);  PropertyState  ts  =  cp.getProperty( "timestamp ");  if  (ts  ==  null  ||  ts.getType()  !=  LONG  ||  now  >  ts.getValue(LONG))  {  cp.remove();  }  }  NodeBuilder  cp  =  checkpoints.child(name);      cp.setProperty( "timestamp ",  now  +  lifetime);  cp.setProperty( "created ",  now);  NodeBuilder  props  =  cp.setChildNode( "properties ");  for  (Entry<String,  String>  p  :  properties.entrySet())  {  	if  (Long.MAX_VALUE  -  now  >  lifetime)  {  cp.setProperty( "timestamp ",  now  +  lifetime);  }  else  {  cp.setProperty( "timestamp ",  Long.MAX_VALUE);  }  	407	replace-1
18	jackrabbit-oak_eabb4066	buggy:  left.setLimit(limit);  right.setLimit(limit);  context:  r[i]  =  o.createCopy();  }  left.setOrderings(l);  right.setOrderings(r);  this.orderings  =  orderings;  }  public  void  setLimit(long  limit)  {  this.limit  =  limit;      left.setLimit(limit);      right.setLimit(limit);  }  public  void  setOffset(long  offset)  {  this.offset  =  offset;  	applyLimitOffset();  applyLimitOffset();  }    private  void  applyLimitOffset()  {  long  subqueryLimit  =  QueryImpl.saturatedAdd(limit,  offset);  left.setLimit(subqueryLimit);  right.setLimit(subqueryLimit);  	94	replace-2
19	flink_d90672fd	buggy:  hasher.putString(node.getOperatorName(),  Charset.forName( "UTF-8 "));    context:  private  void  generateNodeLocalHash(StreamNode  node,  Hasher  hasher,  int  id)  {  hasher.putInt(id);  hasher.putInt(node.getParallelism());  hasher.putString(node.getOperatorName(),  Charset.forName( "UTF-8 "));  if  (node.getOperator()  instanceof  AbstractUdfStreamOperator)  {  String  udfClassName  =  ((AbstractUdfStreamOperator<?,  ?>)  node.getOperator())  .getUserFunction().getClass().getName();  hasher.putString(udfClassName,  Charset.forName( "UTF-8 "));  }  }  }  		739	remove-2
20	wicket_ccb8fc9e	buggy:  String  id  =  tag.getId();  if  (id.equals(INLINE_ENCLOSURE_ID_PREFIX))  {  id  =  id  +  container.getPage().getAutoIndex();  }  context:  return  tag.getAttributes().getString(INLINE_ENCLOSURE_ATTRIBUTE_NAME);  }  public  Component  resolve(final  MarkupContainer  container,  final  MarkupStream  markupStream,  final  ComponentTag  tag)  {  String  inlineEnclosureChildId  =  getInlineEnclosureAttribute(tag);  if  (Strings.isEmpty(inlineEnclosureChildId)  ==  false)  {  String  id  =  tag.getId();  if  (id.equals(INLINE_ENCLOSURE_ID_PREFIX))  {  id  =  id  +  container.getPage().getAutoIndex();  }  return  new  InlineEnclosure(id,  inlineEnclosureChildId);  }  	String  id  =  tag.getId()  +  container.getPage().getAutoIndex();  	179	replace-5
21	wicket_0cf14725	buggy:  private  static  final  String  emailPattern  =   "[\\w\\.-]+@[\\w\\.-]+ ";  context:  public  class  DefaultLinkParser  extends  LinkParser  {  private  static  final  String  emailPattern  =   "[\\w\\.-]+@[\\w\\.-]+ ";  private  static  final  String  urlPattern  =   "([a-zA-Z]+://[\\w\\.\\-\\:\\/~]+)[\\w\\.:\\-/?&=%]* ";  	private  static  final  String  emailPattern  =   "[\\w\\.-\\\\+]+@[\\w\\.-]+ ";  	32	replace-1
22	wicket_2abc18f1	buggy:  context:  tag.append( "class ",   "tree-node ",   "   ");  }  public  void  afterRender(Component  component)  {  Response  response  =  component.getResponse();  for  (int  i  =  0;  i  <  branches.length;  i++)  {  response.write( "</div> ");  }  }  }  	if  (i  >  0)  {  response.write( "</div> ");  }  	86	add
23	jackrabbit-oak_b6f89048	buggy:  next  =  (lane  <  OrderedIndex.LANES)  ?  ps.getValue(Type.STRING,  lane)  :   " ";  context:  static  String  getPropertyNext(@Nonnull  final  NodeState  state,  final  int  lane)  {  String  next  =   " ";  PropertyState  ps  =  state.getProperty(NEXT);  if  (ps  !=  null)  {      next  =  (lane  <  OrderedIndex.LANES)  ?  ps.getValue(Type.STRING,  lane)                :   " ";  }  return  next;  }  	if  (ps.isArray())  {  next  =  ps.getValue(Type.STRING,  Math.min(ps.count()  -  1,  lane));  }  else  {  next  =  ps.getValue(Type.STRING);  }  	1024	replace-2
24	logging-log4j2_50e19247	buggy:  final  String  prot  =  protocol  !=  null  ?  protocol  :  Protocol.TCP.name();  final  Protocol  p  =  EnglishEnums.valueOf(Protocol.class,  protocol);  context:  Layout<S>  l  =  (Layout<S>)  SerializedLayout.createLayout();  layout  =  l;  }  if  (name  ==  null)  {  LOGGER.error( "No  name  provided  for  SocketAppender ");  return  null;  }      final  String  prot  =  protocol  !=  null  ?  protocol  :  Protocol.TCP.name();      final  Protocol  p  =  EnglishEnums.valueOf(Protocol.class,  protocol);  if  (p.equals(Protocol.UDP))  {  isFlush  =  true;  }  final  AbstractSocketManager  manager  =  createSocketManager(p,  host,  port,  reconnectDelay,  fail,  layout);  if  (manager  ==  null)  {  return  null;  	final  Protocol  p  =  EnglishEnums.valueOf(Protocol.class,  protocol  !=  null  ?  protocol  :  Protocol.TCP.name());  	118	replace-2
25	logging-log4j2_1461f1f6	buggy:  toAppendTo.append(config  !=  null  &&  result.contains( "${ ")  ?  config.getSubst().replace(event,  result)  :  result);  context:  public  void  format(final  LogEvent  event,  final  StringBuilder  toAppendTo)  {  final  Message  msg  =  event.getMessage();  if  (msg  !=  null)  {  String  result;  if  (msg  instanceof  MultiformatMessage)  {  result  =  ((MultiformatMessage)  msg).getFormattedMessage(formats);  }  else  {  result  =  msg.getFormattedMessage();  }      toAppendTo.append(config  !=  null  &&  result.contains( "${ ")  ?      config.getSubst().replace(event,  result)  :  result);  }  }  	if  (result  !=  null)  {  toAppendTo.append(config  !=  null  &&  result.contains( "${ ")  ?  config.getSubst().replace(event,  result)  :  result);  }  else  {  toAppendTo.append( "null ");  }  	70	replace-2
26	logging-log4j2_e9b628ec	buggy:  if  (!inEsc)  {  inEsc  =  false;  context:  final  int  start  =  text.indexOf(EVENT_START_MARKER,  beginIndex);  if  (start  ==  END)  {  return  END_PAIR;  }  final  char[]  charArray  =  text.toCharArray();  int  stack  =  0;  boolean  inStr  =  false;  boolean  inEsc  =  false;  for  (int  i  =  start;  i  <  charArray.length;  i++)  {  final  char  c  =  charArray[i];      if  (!inEsc)  {      inEsc  =  false;  switch  (c)  {  case  EVENT_START_MARKER:  if  (!inStr)  {  stack++;  	if  (inEsc)  {  inEsc  =  false;  }  else  {  	58	replace-2
27	wicket_925cae5c	buggy:  context:  httpServletResponse.getWriter().write(   "<ajax-response><redirect><![CDATA[ "  +  url  +   "]]></redirect></ajax-response> ");  setContentType( "text/xml;charset= "  +  webRequest.getContainerRequest().getCharacterEncoding());  disableCaching();  }  else  {  httpServletResponse.sendRedirect(url);  }  	if  (url.startsWith( "./ "))  {  url  =  url.substring(2);  }  	230	add
28	wicket_295e73bd	buggy:  }  context:  AppendingStringBuffer  filter(AppendingStringBuffer  responseBuffer);  }  \  No  newline  at  end  of  file  	}import  org.apache.wicket.response.StringResponse;  private  void  contructResponseBody(final  Response  bodyResponse,  final  String  encoding)  {  bodyResponse.write( "<?xml  version=\ "1.0\ "  encoding=\ " ");  bodyResponse.write(encoding);  bodyResponse.write( "\ "?> ");  bodyResponse.write( "<ajax-response> ");    fireOnBeforeRespondListeners();    Iterator<CharSequence>  it  =  prependJavaScripts.iterator();  while  (it.hasNext())  {  CharSequence  js  =  it.next();  respondInvocation(bodyResponse,  js);  }    respondComponents(bodyResponse);    fireOnAfterRespondListeners(bodyResponse);    it  =  domReadyJavaScripts.iterator();  while  (it.hasNext())  {  CharSequence  js  =  it.next();  respondInvocation(bodyResponse,  js);  }  it  =  appendJavaScripts.iterator();  while  (it.hasNext())  {  CharSequence  js  =  it.next();  respondInvocation(bodyResponse,  js);  }    bodyResponse.write( "</ajax-response> ");  }    private  void  invokeResponseFilters(final  StringResponse  contentResponse)  {  AppendingStringBuffer  responseBuffer  =  new  AppendingStringBuffer(  contentResponse.getBuffer());    List<IResponseFilter>  responseFilters  =  Application.get()  .getRequestCycleSettings()  .getResponseFilters();    if  (responseFilters  !=  null)  {  for  (IResponseFilter  filter  :  responseFilters)  {  filter.filter(responseBuffer);  }  }  }    	46	replace-1
29	maven_b92af0e4	buggy:  context:  if  (  metadata  ==  null  )  {  metadata  =  this.metadata;  changed  =  true;  }  else  {  changed  =  metadata.merge(  this.metadata  );  }  if  (  changed  )  	  String  version  =  metadata.getVersion();  if  (  version  !=  null  &&  (  Artifact.LATEST_VERSION.equals(  version  )  ||  Artifact.RELEASE_VERSION.equals(  version  )  )  )  {  changed  =  false;  }  	116	add
30	camel_4ed448c7	buggy:  context:  public  void  updateRouteFromXml(String  xml)  throws  Exception  {  RouteDefinition  def  =  ModelHelper.createModelFromXml(xml,  RouteDefinition.class);  if  (def  ==  null)  {  return;  }  context.addRouteDefinition(def);  }  	if  (ObjectHelper.isEmpty(def.getId()))  {  def.setId(getRouteId());  }  else  if  (!def.getId().equals(getRouteId()))  {  throw  new  IllegalArgumentException( "Cannot  update  route  from  XML  as  routeIds  does  not  match.  routeId:   "  +  getRouteId()  +   ",  routeId  from  XML:   "  +  def.getId());  }    	236	add
31	wicket_ad849602	buggy:  if  (url.getPort()  !=  null  ||  !desired.usesStandardPort(config))  {  url.setPort(desired.getPort(config));  }  context:  {  Url  url  =  delegate.mapHandler(handler);  Scheme  desired  =  getDesiredSchemeFor(handler);  Scheme  current  =  getSchemeOf(request);  if  (!desired.isCompatibleWith(current))  {  url.setProtocol(desired.urlName());  if  (url.getPort()  !=  null  ||  !desired.usesStandardPort(config))  {  url.setPort(desired.getPort(config));  }  }  return  url;  }  	url.setPort(desired.getPort(config));  	173	replace-4
32	accumulo_be2fdba7	buggy:  MASTER_BULK_SERVERS( "master.bulk.server.max ",   "4 ",  PropertyType.COUNT,   "The  number  of  servers  to  use  during  a  bulk  load "),  context:   "The  balancer  class  that  accumulo  will  use  to  make  tablet  assignment  and  migration  decisions. "),  MASTER_LOGGER_BALANCER( "master.logger.balancer ",   "org.apache.accumulo.server.master.balancer.SimpleLoggerBalancer ",  PropertyType.CLASSNAME,   "The  balancer  class  that  accumulo  will  use  to  make  logger  assignment  decisions. "),  MASTER_RECOVERY_REDUCERS( "master.recovery.reducers ",   "10 ",  PropertyType.COUNT,   "Number  of  reducers  to  use  to  sort  recovery  logs  (per  log) "),  MASTER_RECOVERY_MAXAGE( "master.recovery.max.age ",   "60m ",  PropertyType.TIMEDURATION,   "Recovery  files  older  than  this  age  will  be  removed. "),  MASTER_RECOVERY_MAXTIME( "master.recovery.time.max ",   "30m ",  PropertyType.TIMEDURATION,   "The  maximum  time  to  attempt  recovery  before  giving  up "),  MASTER_RECOVERY_QUEUE( "master.recovery.queue ",   "default ",  PropertyType.STRING,   "Priority  queue  to  use  for  log  recovery  map/reduce  jobs. "),  MASTER_RECOVERY_POOL( "master.recovery.pool ",   "recovery ",  PropertyType.STRING,   "Priority  queue  to  use  for  log  recovery  map/reduce  jobs. "),  MASTER_RECOVERY_SORT_MAPREDUCE( "master.recovery.sort.mapreduce ",   "false ",  PropertyType.BOOLEAN,   "If  true,  use  map/reduce  to  sort  write-ahead  logs  during  recovery "),    MASTER_BULK_SERVERS( "master.bulk.server.max ",   "4 ",  PropertyType.COUNT,   "The  number  of  servers  to  use  during  a  bulk  load "),  MASTER_BULK_RETRIES( "master.bulk.retries ",   "3 ",  PropertyType.COUNT,   "The  number  of  attempts  to  bulk-load  a  file  before  giving  up. "),  MASTER_BULK_THREADPOOL_SIZE( "master.bulk.threadpool.size ",   "5 ",  PropertyType.COUNT,   "The  number  of  threads  to  use  when  coordinating  a  bulk-import. "),  MASTER_MINTHREADS( "master.server.threads.minimum ",   "2 ",  PropertyType.COUNT,   "The  minimum  number  of  threads  to  use  to  handle  incoming  requests. "),  MASTER_THREADCHECK( "master.server.threadcheck.time ",   "1s ",  PropertyType.TIMEDURATION,   "The  time  between  adjustments  of  the  server  thread  pool. "),  TSERV_PREFIX( "tserver. ",  null,  PropertyType.PREFIX,   "Properties  in  this  category  affect  the  behavior  of  the  tablet  servers "),  TSERV_CLIENT_TIMEOUT( "tserver.client.timeout ",   "3s ",  PropertyType.TIMEDURATION,   "Time  to  wait  for  clients  to  continue  scans  before  closing  a  session. "),  TSERV_DEFAULT_BLOCKSIZE( "tserver.default.blocksize ",   "1M ",  PropertyType.MEMORY,   "Specifies  a  default  blocksize  for  the  tserver  caches "),  		68	remove-1
33	jackrabbit-oak_039f892d	buggy:  if  (list.size()  >  max  *  2)  {  context:  }  ArrayList<K>  list  =  new  ArrayList<K>();  while  (source.hasNext())  {  K  x  =  source.next();  list.add(x);  checkMemoryLimit(list.size(),  settings);      //  this  should  results  in  O(n*log(2*keep))  operations,      if  (list.size()  >  max  *  2)  {  Collections.sort(list,  orderBy);  keepFirst(list,  max);  }  }  Collections.sort(list,  orderBy);  keepFirst(list,  max);  result  =  list.iterator();  	if  (list.size()  >  (long)  max  *  2)  {  	211	replace-1
34	logging-log4j2_7792679c	buggy:  final  Map<String,  Properties>  filters  =  PropertiesUtil.partitionOnCommonPrefixes(  PropertiesUtil.extractSubset(rootProperties,   "filter "));  for  (final  Map.Entry<String,  Properties>  entry  :  filters.entrySet())  {  builder.add(createFilter(entry.getKey().trim(),  entry.getValue()));  final  Map<String,  Properties>  appenders  =  PropertiesUtil.partitionOnCommonPrefixes(  PropertiesUtil.extractSubset(rootProperties,   "appender "));  for  (final  Map.Entry<String,  Properties>  entry  :  appenders.entrySet())  {  builder.add(createAppender(entry.getKey().trim(),  entry.getValue()));  final  Map<String,  Properties>  loggers  =  PropertiesUtil.partitionOnCommonPrefixes(  PropertiesUtil.extractSubset(rootProperties,   "logger "));  for  (final  Map.Entry<String,  Properties>  entry  :  loggers.entrySet())  {  final  String  name  =  entry.getKey().trim();  if  (!name.equals(LoggerConfig.ROOT))  {  builder.add(createLogger(name,  entry.getValue()));  context:  }  }  final  Properties  levelProps  =  PropertiesUtil.extractSubset(rootProperties,   "customLevel ");  if  (levelProps.size()  >  0)  {  for  (final  String  key  :  levelProps.stringPropertyNames())  {  builder.add(builder.newCustomLevel(key,  Integer.parseInt(levelProps.getProperty(key))));  }  }      final  Map<String,  Properties>  filters  =  PropertiesUtil.partitionOnCommonPrefixes(      PropertiesUtil.extractSubset(rootProperties,   "filter "));      for  (final  Map.Entry<String,  Properties>  entry  :  filters.entrySet())  {      builder.add(createFilter(entry.getKey().trim(),  entry.getValue()));  	String  filterProp  =  rootProperties.getProperty( "filters ");  if  (filterProp  !=  null)  {  String[]  filterNames  =  filterProp.split( ", ");  for  (String  filterName  :  filterNames)  {  String  name  =  filterName.trim();  builder.add(createFilter(name,  PropertiesUtil.extractSubset(rootProperties,   "filter. "  +  name)));  }  }  else  {    final  Map<String,  Properties>  filters  =  PropertiesUtil  .partitionOnCommonPrefixes(PropertiesUtil.extractSubset(rootProperties,   "filter "));  for  (final  Map.Entry<String,  Properties>  entry  :  filters.entrySet())  {  builder.add(createFilter(entry.getKey().trim(),  entry.getValue()));  }  String  appenderProp  =  rootProperties.getProperty( "appenders ");  if  (appenderProp  !=  null)  {  String[]  appenderNames  =  appenderProp.split( ", ");  for  (String  appenderName  :  appenderNames)  {  String  name  =  appenderName.trim();  builder.add(createAppender(appenderName.trim(),  PropertiesUtil.extractSubset(rootProperties,   "appender. "  +  name)));  }  }  else  {  final  Map<String,  Properties>  appenders  =  PropertiesUtil  .partitionOnCommonPrefixes(PropertiesUtil.extractSubset(rootProperties,   "appender "));  for  (final  Map.Entry<String,  Properties>  entry  :  appenders.entrySet())  {  builder.add(createAppender(entry.getKey().trim(),  entry.getValue()));  }  String  loggerProp  =  rootProperties.getProperty( "loggers ");  if  (loggerProp  !=  null)  {  String[]  loggerNames  =  loggerProp.split( ", ");  for  (String  loggerName  :  loggerNames)  {  String  name  =  loggerName.trim();  if  (!name.equals(LoggerConfig.ROOT))  {  builder.add(createLogger(name,  PropertiesUtil.extractSubset(rootProperties,   "logger. "  +  name)));  }  }  }  else  {  final  Map<String,  Properties>  loggers  =  PropertiesUtil  .partitionOnCommonPrefixes(PropertiesUtil.extractSubset(rootProperties,   "logger "));  for  (final  Map.Entry<String,  Properties>  entry  :  loggers.entrySet())  {  final  String  name  =  entry.getKey().trim();  if  (!name.equals(LoggerConfig.ROOT))  {  builder.add(createLogger(name,  entry.getValue()));  }  	123	replace-14
35	logging-log4j2_d3989b40	buggy:  try  {  clazz  =  Loader.initializeClass(className,  this.getClass().getClassLoader());  }  catch  (final  ClassNotFoundException  ignore)  {  return  null;  }  context:  if  (clazz  !=  null)  {  return  clazz;  }  }  catch  (final  Throwable  ignore)  {  }  }  try  {  clazz  =  Loader.loadClass(className);  }  catch  (final  ClassNotFoundException  ignored)  {      try  {      clazz  =  Loader.initializeClass(className,  this.getClass().getClassLoader());      }  catch  (final  ClassNotFoundException  ignore)  {      return  null;      }  }  return  clazz;  	return  initializeClass(className);  }  catch  (final  NoClassDefFoundError  ignored)  {  return  initializeClass(className);  private  Class<?>  initializeClass(final  String  className)  {  try  {  return  Loader.initializeClass(className,  this.getClass().getClassLoader());  }  catch  (final  ClassNotFoundException  ignore)  {  return  null;  }  catch  (final  NoClassDefFoundError  ignore)  {  return  null;  }  }    	454	replace-5
36	jackrabbit-oak_073b814c	buggy:  if  (nodeBuilder.isNew())  {  context:  protected  void  buildPath(StringBuilder  sb)  {  if  (!isRoot())  {  getParent().buildPath(sb);  sb.append('/').append(name);  }  }  public  Status  getStatus()  {      if  (nodeBuilder.isNew())  {  return  NEW;  }  else  if  (nodeBuilder.isModified())  {  return  MODIFIED;  }  else  {  return  UNCHANGED;  }  }  	if  (nodeBuilder.isNew()  ||  nodeBuilder.isReplaced())  {  	207	replace-1
37	accumulo_813109d7	buggy:  context:  public  void  setProperty(ByteBuffer  login,  String  property,  String  value)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  boolean  testClassLoad(ByteBuffer  login,  String  className,  String  asTypeName)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  boolean  authenticateUser(ByteBuffer  login,  String  user,  Map<String,String>  properties)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  void  changeUserAuthorizations(ByteBuffer  login,  String  user,  Set<ByteBuffer>  authorizations)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  void  changeLocalUserPassword(ByteBuffer  login,  String  user,  ByteBuffer  password)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  void  createLocalUser(ByteBuffer  login,  String  user,  ByteBuffer  password)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  void  dropLocalUser(ByteBuffer  login,  String  user)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  List<ByteBuffer>  getUserAuthorizations(ByteBuffer  login,  String  user)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  public  void  grantSystemPermission(ByteBuffer  login,  String  user,  SystemPermission  perm)  throws  AccumuloException,  AccumuloSecurityException,  org.apache.thrift.TException;  	        	150	replace-4
38	accumulo_891584fb	buggy:  sb.append( "-  Authorization  timeout:   ").append(String.format( "%.2fs%n ",  TimeUnit.NANOSECONDS.toSeconds(authTimeout)));  context:  }  public  void  printVerboseInfo()  throws  IOException  {  StringBuilder  sb  =  new  StringBuilder( "-\n ");  sb.append( "-  Current  user:   ").append(connector.whoami()).append( "\n ");  if  (execFile  !=  null)  sb.append( "-  Executing  commands  from:   ").append(execFile).append( "\n ");  if  (disableAuthTimeout)  sb.append( "-  Authorization  timeout:  disabled\n ");  else    sb.append( "-  Authorization  timeout:   ").append(String.format( "%.2fs%n ",  TimeUnit.NANOSECONDS.toSeconds(authTimeout)));  sb.append( "-  Debug:   ").append(isDebuggingEnabled()  ?   "on "  :   "off ").append( "\n ");  if  (!scanIteratorOptions.isEmpty())  {  for  (Entry<String,List<IteratorSetting>>  entry  :  scanIteratorOptions.entrySet())  {  sb.append( "-  Session  scan  iterators  for  table   ").append(entry.getKey()).append( ":\n ");  for  (IteratorSetting  setting  :  entry.getValue())  {  sb.append( "-    Iterator   ").append(setting.getName()).append( "  options:\n ");  sb.append( "-     ").append( "iteratorPriority ").append( "  =   ").append(setting.getPriority()).append( "\n ");  sb.append( "-     ").append( "iteratorClassName ").append( "  =   ").append(setting.getIteratorClass()).append( "\n ");  	sb.append( "-  Authorization  timeout:   ").append(String.format( "%ds%n ",  TimeUnit.NANOSECONDS.toSeconds(authTimeout)));  	496	replace-1
39	wicket_4fc82e35	buggy:  context:  private  RuntimeConfigurationType  configurationType;  public  static  WebApplication  get()  {  Application  application  =  Application.get();  	public  static  final  String  ENCTYPE_MULTIPART_FORM_DATA  =   "multipart/form-data ";    	152	add
40	wicket_5fd03973	buggy:  return  true;  context:  {  throw  new  WicketRuntimeException( "Couldn't  find  component  behavior. ",  e);  }  }  }  public  final  boolean  isPageInstanceCreated()  {  //  this  request  handler  always  operates  on  a  created  page  instance  return  true;  	if  (!(pageComponentProvider  instanceof  IIntrospectablePageProvider))  {  LOG.warn(   "{}  used  by  this  application  does  not  implement  {},  the  request  handler  is  falling  back  on  using  incorrect  behavior ",  IPageProvider.class,  IIntrospectablePageProvider.class);  return  !pageComponentProvider.isNewPageInstance();  }  return  ((IIntrospectablePageProvider)pageComponentProvider).hasPageInstance();  	253	replace-1
41	maven_1c3abfba	buggy:  if  (  !hasExpression(  string  )  )  return  true;  addViolation(  problems,  severity,  fieldName,  sourceHint,   "must  be  a  valid  version  but  is  ' "  +  string  +   "'. ",  tracker  );  return  false;  Severity  errOn30  =  getSeverity(  request,  ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0  );  if  (  string.length()  >  0  &&  !hasExpression(  string  )  &&  ! "RELEASE ".equals(  string  )  &&  ! "LATEST ".equals(  string  )  )  return  true;  addViolation(  problems,  errOn30,  fieldName,  sourceHint,   "must  be  a  valid  version  but  is  ' "  +  string  +   "'. ",  tracker  );  return  false;  context:  }  private  boolean  validateVersion(  String  fieldName,  ModelProblemCollector  problems,  Severity  severity,  String  string,  String  sourceHint,  InputLocationTracker  tracker  )  {  if  (  string  ==  null  ||  string.length()  <=  0  )  {  return  true;  }      if  (  !hasExpression(  string  )  )  {      return  true;  }      addViolation(  problems,  severity,  fieldName,  sourceHint,   "must  be  a  valid  version  but  is  ' "  +  string  +   "'. ",  	if  (  hasExpression(  string  )  )  addViolation(  problems,  severity,  fieldName,  sourceHint,   "must  be  a  valid  version  but  is  ' "  +  string  +   "'. ",  tracker  );  return  false;  if  (  !validateBannedCharacters(  fieldName,  problems,  severity,  string,  sourceHint,  tracker,  ILLEGAL_VERSION_CHARS  )  )  {  return  false;  }  return  true;  Severity  errOn30  =  getSeverity(  request,  ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_0  );    if  (  !validateVersion(  fieldName,  problems,  errOn30,  string,  sourceHint,  tracker  )  )  return  false;  if  (  string.length()  <=  0  ||   "RELEASE ".equals(  string  )  ||   "LATEST ".equals(  string  )  )  {  addViolation(  problems,  errOn30,  fieldName,  sourceHint,   "must  be  a  valid  version  but  is  ' "  +  string  +   "'. ",  tracker  );  return  false;  }  return  true;  	767	replace-13
42	jackrabbit-oak_7d72e6ed	buggy:  context:  if  (s  ==  selector1)  {  PropertyExistenceImpl  ex  =  new  PropertyExistenceImpl(s.getSelectorName(),  property1Name);  ex.bindSelector(s);  s.restrictSelector(ex);  }  else  if  (s  ==  selector2)  {  PropertyExistenceImpl  ex  =  new  PropertyExistenceImpl(s.getSelectorName(),  property2Name);  ex.bindSelector(s);  s.restrictSelector(ex);  }  }  	  private  String  getPlan()  {  return  source.getPlan(rootState);  }  	131	add
43	commons-math_03178c8b	buggy:  return  0.5  *  (1  +  Erf.erf(dev  /  (standardDeviation  *  SQRT2)));  context:  public  double  cumulativeProbability(double  x)  {  final  double  dev  =  x  -  mean;  if  (FastMath.abs(dev)  >  40  *  standardDeviation)  {  return  dev  <  0  ?  0.0d  :  1.0d;  }      return  0.5  *  (1  +  Erf.erf(dev  /  (standardDeviation  *  SQRT2)));  }  public  double  inverseCumulativeProbability(final  double  p)  throws  OutOfRangeException  {  if  (p  <  0.0  ||  p  >  1.0)  {  	return  0.5  *  Erf.erfc(-dev  /  (standardDeviation  *  SQRT2));  	196	replace-1
44	wicket_ba516f02	buggy:  context:  JavaScriptUtils.SCRIPT_CLOSE_TAG);  }  public  void  updateModel()  {  }  }  	  @Override  protected  String  getModelValue()  {  return  null;  }  	202	add
45	wicket_1b57b51c	buggy:  String  id  =  getMarkupIdFromMarkup();  if  (id  !=  null)  {  return  id;  }  return  getMetaData(MARKUP_ID_KEY);  context:  return  ValueMap.EMPTY_MAP;  }  public  final  Object  getMarkupIdImpl()  {  String  id  =  getMarkupIdFromMarkup();  if  (id  !=  null)  {  return  id;  }  if  (generatedMarkupId  !=  -1)  {  return  generatedMarkupId;  }  	String  id  =  getMetaData(MARKUP_ID_KEY);    if  (id  ==  null  &&  findPage()  !=  null)  {  id  =  getMarkupIdFromMarkup();  }  return  id;  	1502	replace-7
46	commons-math_91d280b7	buggy:  context:  public  static  double  linearCombination(final  double[]  a,  final  double[]  b)  throws  DimensionMismatchException  {  final  int  len  =  a.length;  if  (len  !=  b.length)  {  throw  new  DimensionMismatchException(len,  b.length);  }  final  double[]  prodHigh  =  new  double[len];  double  prodLowSum  =  0;  for  (int  i  =  0;  i  <  len;  i++)  {  final  double  ai  =  a[i];  	if  (len  ==  1)  {  return  a[0]  *  b[0];  }    	821	add
47	wicket_e93fdd5a	buggy:  connection.setDoInput(false);  context:  final  File  file  =  Files.getLocalFileFromUrl(url);  if  (file  !=  null)  {  return  Files.getLastModified(file);  }  URLConnection  connection  =  url.openConnection();  connection.setDoInput(false);  final  long  milliseconds;  try  {  if  (connection  instanceof  JarURLConnection)  {  JarURLConnection  jarUrlConnection  =  (JarURLConnection)connection;  URL  jarFileUrl  =  jarUrlConnection.getJarFileURL();  		60	remove-1
48	wicket_6ce34ccf	buggy:  minifiedName  =  name.substring(0,  name.length()  -  extension.length()  +  1)  +   "min "  +  extension;  context:  protected  String  getMinifiedName()  {  String  name  =  super.getName();  String  minifiedName;  int  idxOfExtension  =  name.lastIndexOf('.');  if  (idxOfExtension  >  -1)  {  String  extension  =  name.substring(idxOfExtension);  minifiedName  =  name.substring(0,  name.length()  -  extension.length()  +  1)  +   "min "  +  extension;  }  else  	final  String  baseName  =  name.substring(0,  name.length()  -  extension.length()  +  1);  if  (! ".min ".equals(extension)  &&  !baseName.endsWith( ".min. "))  {  minifiedName  =  baseName  +   "min "  +  extension;  }  else  {  minifiedName  =  name;  }  	210	replace-1
49	flink_30761572	buggy:  CompositeType<?>  compositeType  =  (CompositeType<?>)  type;  TypeInformation<?>  fieldType  =  compositeType.getTypeAt(i);  if(groupingFields[j]  ==  i)  {  //  check  if  user  set  the  key  int  keyId  =  countNestedElementsBefore(compositeType,  i)  +  i;  if(fieldType  instanceof  TupleTypeInfoBase)  {  TupleTypeInfoBase<?>  tupleFieldType  =  (TupleTypeInfoBase<?>)  fieldType;  tupleFieldType.addAllFields(keyId,  keyFields);  }  else  {  Preconditions.checkArgument(fieldType  instanceof  AtomicType,   "Wrong  field  type ");  keyFields.add(new  FlatFieldDescriptor(keyId,  fieldType));    private  static  int  countNestedElementsBefore(CompositeType<?>  compositeType,  int  pos)  {  if(  pos  ==  0)  {  return  0;  }  int  ret  =  0;  for  (int  i  =  0;  i  <  pos;  i++)  {  TypeInformation<?>  fieldType  =  compositeType.getTypeAt(i);  ret  +=  fieldType.getTotalFields()  -1;  }  return  ret;  }    context:  if  (groupingFields  ==  null  ||  groupingFields.length  ==  0)  {  groupingFields  =  new  int[type.getArity()];  for  (int  i  =  0;  i  <  groupingFields.length;  i++)  {  groupingFields[i]  =  i;  }  }  else  {  groupingFields  =  rangeCheckFields(groupingFields,  type.getArity()  -1);  }  CompositeType<?>  compositeType  =  (CompositeType<?>)  type;  Preconditions.checkArgument(groupingFields.length  >  0,   "Grouping  fields  can  not  be  empty  at  this  point ");  keyFields  =  new  ArrayList<FlatFieldDescriptor>(type.getTotalFields());  for(int  j  =  0;  j  <  groupingFields.length;  j++)  {  for(int  i  =  0;  i  <  type.getArity();  i++)  {  	int  keyPos  =  groupingFields[j];    int  offset  =  0;    TypeInformation  fieldType  =  ((CompositeType<?>)  type).getTypeAt(i);  if(i  <  keyPos)  {  offset  +=  fieldType.getTotalFields();  }  else  {  if(fieldType  instanceof  CompositeType)  {  ((CompositeType)  fieldType).getFlatFields( "* ",  offset,  keyFields);  else  if(fieldType  instanceof  AtomicType)  {  keyFields.add(new  FlatFieldDescriptor(offset,  fieldType));  }  else  {  throw  new  InvalidProgramException( "Field  type  is  neither  CompositeType  nor  AtomicType:   "+fieldType);  }  break;    	226	replace-25
50	camel_7f8a295a	buggy:  context:  ObjectHelper.notNull( "language ",  getLanguage());  Language  language  =  camelContext.resolveLanguage(getLanguage());  String  exp  =  getExpression();  if  (exp  !=  null  &&  isTrim())  {  exp  =  exp.trim();  }  predicate  =  language.createPredicate(exp);  configurePredicate(camelContext,  predicate);  }  }  	  if  (expression  !=  null  &&  expression.getExpression()  ==  null)  {  if  (expression.getPredicate()  !=  null)  {  expression.setExpression(expression.getPredicate().toString());  }  else  if  (expression.getExpressionValue()  !=  null)  {  expression.setExpression(expression.getExpressionValue().toString());  }  }  	163	add
51	maven_778f044e	buggy:  context:  projectBuilderConfiguration  );  mavenProject.setParentFile(  domainModel.getParentFile()  );  return  mavenProject;  }  catch  (  InvalidRepositoryException  e  )  {  throw  new  IOException(  e.getMessage()  );  }  }  	s.add(ProjectUri.Profiles.Profile.Build.Plugins.Plugin.configuration);//TODO:  More  profile  info  	309	add
52	accumulo_5ca779a0	buggy:  return  toThrift(false).hashCode();  context:  return  true;  }  if  (o  !=  null  &&  o.getClass().equals(this.getClass()))  {  return  equalMutation((Mutation)  o);  }  return  false;  }  public  int  hashCode()  {  return  toThrift(false).hashCode();  }  	return  serializedSnapshot().hashCode();  	601	replace-1
53	commons-math_ce2badf0	buggy:  return  pBminus  +  pB;  context:  if  (x  <  min)  {  return  0d;  }  else  if  (x  >=  max)  {  return  1d;  }  final  int  binIndex  =  findBin(x);  final  double  pBminus  =  pBminus(binIndex);  final  double  pB  =  pB(binIndex);  final  RealDistribution  kernel  =  k(x);  if  (kernel  instanceof  ConstantRealDistribution)  {      return  pBminus  +  pB;  }  final  double[]  binBounds  =  getUpperBounds();  final  double  kB  =  kB(binIndex);  final  double  lower  =  binIndex  ==  0  ?  min  :  binBounds[binIndex  -  1];  	if  (x  <  kernel.getNumericalMean())  {  return  pBminus;  }  else  {  return  pBminus  +  pB;  }  	613	replace-1
54	commons-math_73605560	buggy:  return  new  Line(zero,  zero.subtract(direction));  context:  throw  new  MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);  }  this.direction  =  new  Vector3D(1.0  /  FastMath.sqrt(norm2),  delta);  zero  =  new  Vector3D(1.0,  p1,  -p1.dotProduct(delta)  /  norm2,  delta);  }  public  Line  revert()  {      return  new  Line(zero,  zero.subtract(direction));  }  public  Vector3D  getDirection()  {  	final  Line  reverted  =  new  Line(this);  reverted.direction  =  reverted.direction.negate();  return  reverted;  	87	replace-1
55	wicket_aa82ccfc	buggy:  context:  protected  String  transformForUrl(final  String  className)  {  return  className;  }  	private  boolean  isPageMounted(Class<?  extends  IRequestablePage>  pageClass,  Application  application)  {  ICompoundRequestMapper  applicationMappers  =  application.getRootRequestMapperAsCompound();    for  (IRequestMapper  requestMapper  :  applicationMappers)  {  if(requestMapper  instanceof  AbstractBookmarkableMapper    &&  requestMapper  !=  this)  {  AbstractBookmarkableMapper  mapper  =  (AbstractBookmarkableMapper)  requestMapper;    if(mapper.checkPageClass(pageClass))  {  return  true;  }  }  }    return  false;  }    	219	add
56	jackrabbit-oak_38f5ef13	buggy:  context:  NodeDocument.setChildrenFlag(op,  true);  }  }  private  void  rollback(List<UpdateOp>  newDocuments,  List<UpdateOp>  changed,  UpdateOp  commitRoot)  {  DocumentStore  store  =  nodeStore.getDocumentStore();  for  (UpdateOp  op  :  changed)  {  UpdateOp  reverse  =  op.getReverseOperation();  store.findAndUpdate(NODES,  reverse);  }  for  (UpdateOp  op  :  newDocuments)  {  UpdateOp  reverse  =  op.getReverseOperation();  store.findAndUpdate(NODES,  reverse);  }  	if  (op.isNew())  {  NodeDocument.setDeletedOnce(reverse);  }  NodeDocument.setDeletedOnce(reverse);  	451	add
57	camel_9cb09d14	buggy:  if  (ObjectHelper.isEmpty(key)  ||  ObjectHelper.isEmpty(type))  {  context:  remainder  =  ifStartsWithReturnRemainder( "headerAs ",  function);  if  (remainder  !=  null)  {  String  keyAndType  =  ObjectHelper.between(remainder,   "( ",   ") ");  if  (keyAndType  ==  null)  {  throw  new  SimpleParserException( "Valid  syntax:  ${headerAs(key,  type)}  was:   "  +  function,  token.getIndex());  }  String  key  =  ObjectHelper.before(keyAndType,   ", ");  String  type  =  ObjectHelper.after(keyAndType,   ", ");      if  (ObjectHelper.isEmpty(key)  ||  ObjectHelper.isEmpty(type))  {  throw  new  SimpleParserException( "Valid  syntax:  ${headerAs(key,  type)}  was:   "  +  function,  token.getIndex());  }  key  =  StringHelper.removeQuotes(key);  type  =  StringHelper.removeQuotes(type);  return  ExpressionBuilder.headerExpression(key,  type);  }  	remainder  =  ObjectHelper.after(remainder,   ") ");  if  (ObjectHelper.isEmpty(key)  ||  ObjectHelper.isEmpty(type)  ||  ObjectHelper.isNotEmpty(remainder))  {  	241	replace-1
58	commons-math_d2777388	buggy:  context:  for  (int  i  =  0;  i  <  scale.length;  ++i)  {  scale[i]  =  vecAbsoluteTolerance[i]  +  vecRelativeTolerance[i]  *  FastMath.abs(y[i]);  }  }  hNew  =  initializeStep(forward,  getOrder(),  scale,  stepStart,  y,  yDotK[0],  yTmp,  yDotK[1]);  firstTime  =  false;  }  stepSize  =  hNew;  	if  (forward)  {  if  (stepStart  +  stepSize  >=  t)  {  stepSize  =  t  -  stepStart;  }  }  else  {  if  (stepStart  +  stepSize  <=  t)  {  stepSize  =  t  -  stepStart;  }  }  	250	add
59	wicket_8ccb1f6d	buggy:  response.setCacheDurationToMaximum();  response.setCacheScope(WebResponse.CacheScope.PUBLIC);  context:  }  public  void  decorateResponse(AbstractResource.ResourceResponse  response,  IStaticCacheableResource  resource)  {  response.setCacheDurationToMaximum();  response.setCacheScope(WebResponse.CacheScope.PUBLIC);  }  	String  requestedVersion  =  RequestCycle.get().getMetaData(URL_VERSION);  String  calculatedVersion  =  this.resourceVersion.getVersion(resource);  if  (calculatedVersion  !=  null  &&  calculatedVersion.equals(requestedVersion))  {  response.setCacheDurationToMaximum();  response.setCacheScope(WebResponse.CacheScope.PUBLIC);  }  	199	replace-2
60	camel_169b981e	buggy:  String  newEndpointPath  =  FileUtil.normalizePath(endpointPath);  context:  public  void  changeFileName(String  newName)  {  LOG.trace( "Changing  name  to:  {} ",  newName);  String  newFileName  =  FileUtil.normalizePath(newName);      String  newEndpointPath  =  FileUtil.normalizePath(endpointPath);  LOG.trace( "Normalized  endpointPath:  {} ",  newEndpointPath);  LOG.trace( "Normalized  newFileName:  () ",  newFileName);  File  file  =  new  File(newFileName);  if  (!absolute)  {  if  (ObjectHelper.isNotEmpty(newEndpointPath)  &&  newFileName.startsWith(newEndpointPath))  {  	String  newEndpointPath  =  FileUtil.normalizePath(endpointPath.endsWith( " "  +  File.separatorChar)  ?  endpointPath  :  endpointPath  +  File.separatorChar);  	188	replace-1
61	jackrabbit-oak_93c1aa40	buggy:  if  (Objects.equal(checkpoint,  async.getString(name))  context:  private  void  mergeWithConcurrencyCheck(  NodeBuilder  builder,  final  String  checkpoint,  final  long  lease)  throws  CommitFailedException  {  CommitHook  concurrentUpdateCheck  =  new  CommitHook()  {  public  NodeState  processCommit(  NodeState  before,  NodeState  after,  CommitInfo  info)  throws  CommitFailedException  {  NodeState  async  =  before.getChildNode(ASYNC);      if  (Objects.equal(checkpoint,  async.getString(name))  &&  lease  ==  async.getLong(name  +   "-lease "))  {  return  after;  }  else  {  throw  CONCURRENT_UPDATE;  }  }  };  CompositeHook  hooks  =  new  CompositeHook(  	if  (checkpoint  ==  null  ||  Objects.equal(checkpoint,  async.getString(name))  	321	replace-1
62	camel_2a3f3392	buggy:  if  (singleton)  {  context:  strategy.onServiceAdd(this,  service,  null);  }  }  boolean  singleton  =  true;  //  assume  singleton  by  default  if  (service  instanceof  IsSingleton)  {  singleton  =  ((IsSingleton)  service).isSingleton();  }      if  (singleton)  {  servicesToClose.add(service);  }  }  startServices(object);  }  public  boolean  hasService(Object  object)  {  	if  (singleton  &&  !(service  instanceof  Endpoint))  {  	894	replace-1
63	maven_06090da4	buggy:  changed  =  false;  if  (  changed  )  context:  if  (  metadata  ==  null  )  {  metadata  =  this.metadata;  changed  =  true;  }  else  {  changed  =  metadata.merge(  this.metadata  );  }  String  version  =  metadata.getVersion();  if  (  version  !=  null  &&  (  Artifact.LATEST_VERSION.equals(  version  )  ||  Artifact.RELEASE_VERSION.equals(  version  )  )  )  {      changed  =  false;  }  	  metadata.setVersion(  null  );  if  (  changed  ||  !metadataFile.exists()  )  	116	replace-3
64	flink_21f47d9c	buggy:  return  (T)  kryo.readClassAndObject(input);  context:  public  T  deserialize(DataInputView  source)  throws  IOException  {  checkKryoInitialized();  if  (source  !=  previousIn)  {  DataInputViewStream  inputStream  =  new  DataInputViewStream(source);  input  =  new  NoFetchingInput(inputStream);  previousIn  =  source;  }  return  (T)  kryo.readClassAndObject(input);  	  try  {  return  (T)  kryo.readClassAndObject(input);  }  catch  (KryoException  ke)  {  Throwable  cause  =  ke.getCause();    if(cause  instanceof  EOFException)  {  throw  (EOFException)  cause;  }  else  {  throw  ke;  }  }  	198	replace-1
65	wicket_1ac05533	buggy:  set(index,  other.get(index));  set(curNamed.getKey(),  curNamed.getValue());  context:  public  PageParameters  mergeWith(final  PageParameters  other)  {  if  (this  !=  other)  {  for  (int  index  =  0;  index  <  other.getIndexedCount();  index++)  set(index,  other.get(index));  	{  if  (!other.get(index).isNull())  {  set(index,  other.get(index));  }  }  for  (String  name  :  other.getNamedKeys())  {  remove(name);  }  {  add(curNamed.getKey(),  curNamed.getValue());  }  	459	replace-2
66	jackrabbit-oak_64045631	buggy:  branch.merge(hook,  info);  context:  NodeState  head  =  branch.getHead();  reset(head);  return  head;  }  NodeState  merge(CommitHook  hook,  CommitInfo  info)  throws  CommitFailedException  {  purge();      branch.merge(hook,  info);  	boolean  success  =  false;  try  {  branch.merge(hook,  info);  success  =  true;  }  finally  {  if  (!success)  {  super.reset(branch.getHead());  this.base  =  branch.getBase();  }  }  	145	replace-1
67	wicket_eb125865	buggy:  while  (index--  >=  0  &&  childIterator.hasNext())  if(childAtIndex  ==  null)  throw  new  ArrayIndexOutOfBoundsException(Integer.toString(index));  context:  public  final  Component  get(int  index)  {  Component  childAtIndex  =  null;  Iterator<Component>  childIterator  =  iterator();  while  (index--  >=  0  &&  childIterator.hasNext())  {  childAtIndex  =  childIterator.next();  }  if(childAtIndex  ==  null)  	final  int  requestedIndex  =  index;  while  (index  >=  0  &&  childIterator.hasNext())  index--;  if(index  >=  0  ||  childAtIndex  ==  null)  throw  new  ArrayIndexOutOfBoundsException(Integer.toString(requestedIndex));  	1019	replace-3
68	maven_cdb8ad6d	buggy:  public  static  final  String  DEFAULT_BUILD_TIMESTAMP_FORMAT  =   "yyyyMMdd-HHmm ";  }    context:  public  class  MavenBuildTimestamp  {  public  static  final  String  DEFAULT_BUILD_TIMESTAMP_FORMAT  =   "yyyyMMdd-HHmm ";  public  static  final  String  BUILD_TIMESTAMP_FORMAT_PROPERTY  =   "maven.build.timestamp.format ";  private  String  formattedTimestamp;  public  MavenBuildTimestamp()  {  	public  static  final  String  DEFAULT_BUILD_TIMESTAMP_FORMAT  =   "yyyy-MM-dd'T'HH:mm:ss'Z' ";  }    	29	replace-3
69	commons-math_a56d4998	buggy:  (numIterations  <  maximumIterations)  &&  (a  >  lowerBound  ||  b  >  upperBound);  context:  verifySequence(lowerBound,  initial,  upperBound);  double  a  =  initial;  double  b  =  initial;  double  fa    =  Double.NaN;  double  fb    =  Double.NaN;  double  delta  =  0;  for  (int  numIterations  =  0;      (numIterations  <  maximumIterations)  &&  (a  >  lowerBound  ||  b  >  upperBound);  final  double  previousA  =  a;  final  double  previousFa  =  fa;  final  double  previousB  =  b;  final  double  previousFb  =  fb;  delta  =  r  *  delta  +  q;  	(numIterations  <  maximumIterations)  &&  (a  >  lowerBound  ||  b  <  upperBound);  	317	replace-1
70	jackrabbit-oak_3ce758b7	buggy:  private  static  int  idCounter;  this.id  =  ++idCounter;  context:  return  (val  !=  null)  ?  Integer.parseInt(val)  :  DEFAULT_CACHE_SIZE;  }  static  class  PutTokenImpl  extends  PutToken  {      private  static  int  idCounter;  private  int  id;  private  StoredNode  lastModifiedNode;  public  PutTokenImpl()  {      this.id  =  ++idCounter;  }  	private  static  final  AtomicInteger  ID_COUNTER  =  new  AtomicInteger();  this.id  =  ID_COUNTER.incrementAndGet();  	226	replace-2
71	commons-math_607c9ec6	buggy:  RealMatrix  product;  product  =  new  OpenMapRealMatrix(this.getDimension(),  v.getDimension());  product  =  new  Array2DRowRealMatrix(this.getDimension(),  v.getDimension());  Iterator<Entry>  thisIt  =  sparseIterator();  while  (thisIt.hasNext())  {  final  Entry  thisE  =  thisIt.next();  Iterator<Entry>  otherIt  =  v.sparseIterator();  while  (otherIt.hasNext())  {  final  Entry  otherE  =  otherIt.next();  product.setEntry(thisE.getIndex(),  otherE.getIndex(),  thisE.getValue()  *  otherE.getValue());    context:  return  mapToSelf(FunctionUtils.fix2ndArgument(new  Divide(),  d));  }  public  RealMatrix  outerProduct(RealVector  v)  {      RealMatrix  product;  if  (v  instanceof  SparseRealVector  ||  this  instanceof  SparseRealVector)  {      product  =  new  OpenMapRealMatrix(this.getDimension(),                  v.getDimension());  }  else  {      product  =  new  Array2DRowRealMatrix(this.getDimension(),  	final  int  m  =  this.getDimension();  final  int  n  =  v.getDimension();  final  RealMatrix  product;  product  =  new  OpenMapRealMatrix(m,  n);  product  =  new  Array2DRowRealMatrix(m,  n);  for  (int  i  =  0;  i  <  m;  i++)  {  for  (int  j  =  0;  j  <  n;  j++)  {  product.setEntry(i,  j,  this.getEntry(i)  *  v.getEntry(j));  	645	replace-15
72	wicket_d1b62639	buggy:  return  new  EmptyRequestHandler();  context:  currentPage)));  }  else  if  (IExceptionSettings.SHOW_INTERNAL_ERROR_PAGE.equals(unexpectedExceptionDisplay))  {  return  createPageRequestHandler(new  PageProvider(  application.getApplicationSettings().getInternalErrorPage()));  }  else  {  return  new  EmptyRequestHandler();  }  }  }  private  RenderPageRequestHandler  createPageRequestHandler(PageProvider  pageProvider)  {  RequestCycle  requestCycle  =  RequestCycle.get();  	return  new  ErrorCodeRequestHandler(500);  	124	replace-1
73	wicket_34634266	buggy:  protected  final  void  onDetach()  super.onDetach();  context:  protected  final  String  load()  {  return  getString();  }  /**  *  @see  org.apache.wicket.model.IDetachable#detach()  */  protected  final  void  onDetach()  {  super.onDetach();  if  (model  !=  null)  {  model.detach();  	public  final  void  detach()  super.detach();  	597	replace-2
74	commons-math_118f0cc0	buggy:  if  (!(meanImpl  instanceof  Mean))  {  if  (!(varianceImpl  instanceof  Variance))  {  if  (!(geoMeanImpl  instanceof  GeometricMean))  {  context:  public  void  addValue(double  value)  {  sumImpl.increment(value);  sumsqImpl.increment(value);  minImpl.increment(value);  maxImpl.increment(value);  sumLogImpl.increment(value);  secondMoment.increment(value);      if  (!(meanImpl  instanceof  Mean))  {  meanImpl.increment(value);  }      if  (!(varianceImpl  instanceof  Variance))  {  varianceImpl.increment(value);  }      if  (!(geoMeanImpl  instanceof  GeometricMean))  {  	if  (meanImpl  !=  mean)  {  if  (varianceImpl  !=  variance)  {  if  (geoMeanImpl  !=  geoMean)  {  	158	replace-3
75	maven_a7d9b689	buggy:  context:  PluginRealmCache.Key  cacheKey  =  pluginRealmCache.createKey(  plugin,  parent,  foreignImports,  filter,  project.getRemotePluginRepositories(),  session.getRepositorySession()  );  PluginRealmCache.CacheRecord  cacheRecord  =  pluginRealmCache.get(  cacheKey  );  if  (  cacheRecord  !=  null  )  {  pluginDescriptor.setClassRealm(  cacheRecord.realm  );  pluginDescriptor.setArtifacts(  new  ArrayList<Artifact>(  cacheRecord.artifacts  )  );  }  else  {  createPluginRealm(  pluginDescriptor,  session,  parent,  foreignImports,  filter  );  cacheRecord  =  	for  (  ComponentDescriptor<?>  componentDescriptor  :  pluginDescriptor.getComponents()  )  {  componentDescriptor.setRealm(  cacheRecord.realm  );  }  	314	add
76	commons-math_63a48705	buggy:  return  multiply(100).doubleValue();  context:  public  double  percentageValue()  {      return  multiply(100).doubleValue();  }  	return  100  *  doubleValue();  	597	replace-1
77	logging-log4j2_8dead3bb	buggy:  servletContext.addFilter( "log4jServletFilter ",  new  Log4jServletFilter());  context:  public  class  Log4jServletContainerInitializer  implements  ServletContainerInitializer  {  public  void  onStartup(final  Set<Class<?>>  classes,  final  ServletContext  servletContext)  throws  ServletException  {  if  (servletContext.getMajorVersion()  >  2  &&  servletContext.getEffectiveMajorVersion()  >  2)  {  servletContext.log( "Log4jServletContainerInitializer  starting  up  Log4j  in  Servlet  3.0+  environment. ");  final  FilterRegistration.Dynamic  filter  =          servletContext.addFilter( "log4jServletFilter ",  new  Log4jServletFilter());  if  (filter  ==  null)  {  servletContext.log( "WARNING:  In  a  Servlet  3.0+  application,  you  should  not  define  a   "  +   "log4jServletFilter  in  web.xml.  Log4j  2  normally  does  this  for  you  automatically.  Log4j  2   "  +   "web  auto-initialization  has  been  canceled. ");  return;  }  final  Log4jWebInitializer  initializer  =  Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);  	servletContext.addFilter( "log4jServletFilter ",  Log4jServletFilter.class);  	44	replace-1
78	flink_fef9f115	buggy:  context:  public  CopyingOperatorCollector(OneInputStreamOperator  operator,  TypeSerializer<T>  serializer)  {  super(operator);  this.serializer  =  serializer;  }  public  void  collect(T  record)  {  try  {  operator.processElement(serializer.copy(record));  }  catch  (Exception  e)  {  if  (LOG.isErrorEnabled())  {  LOG.error( "Could  not  forward  element  to  operator. ",  e);  }  throw  new  RuntimeException(e);  }  }  }  	operator.getRuntimeContext().setNextInput(record);  	277	add
79	flink_0cfa43d7	buggy:  chainableOperator.setup(wrapper,  vertex.context);  context:  if  (chainedTaskConfig.isChainStart())  {  return  (Output<X>)  wrapper;  }  else  {  OneInputStreamOperator  chainableOperator  =  chainedTaskConfig.getStreamOperator(vertex.getUserCodeClassLoader());  chainableOperator.setup(wrapper,  vertex.context);  chainedOperators.add(chainableOperator);  return  new  OperatorCollector<X>(chainableOperator);  }  	  StreamingRuntimeContext  chainedContext  =  vertex.createRuntimeContext(chainedTaskConfig);  vertex.contexts.add(chainedContext);    chainableOperator.setup(wrapper,  chainedContext);  	153	replace-1
80	jackrabbit-oak_dde7de85	buggy:  store.remove(NODES,  op.id);  context:  private  void  rollback(List<UpdateOp>  newDocuments,  List<UpdateOp>  changed,  UpdateOp  commitRoot)  {  DocumentStore  store  =  nodeStore.getDocumentStore();  for  (UpdateOp  op  :  changed)  {  UpdateOp  reverse  =  op.getReverseOperation();  store.createOrUpdate(NODES,  reverse);  }  for  (UpdateOp  op  :  newDocuments)  {      store.remove(NODES,  op.id);  }  UpdateOp  removeCollision  =  new  UpdateOp(commitRoot.getId(),  false);  NodeDocument.removeCollision(removeCollision,  revision);  store.createOrUpdate(NODES,  removeCollision);  }  	UpdateOp  reverse  =  op.getReverseOperation();  NodeDocument.unsetLastRev(reverse,  revision.getClusterId());  store.createOrUpdate(NODES,  reverse);  	411	replace-1
81	wicket_4f08e6f2	buggy:  if  (encryptedUrl.getSegments().isEmpty()  &&  encryptedUrl.getQueryParameters().isEmpty())  context:  HashedSegmentGenerator  generator  =  new  HashedSegmentGenerator(encryptedUrlString);  for  (int  segNo  =  0;  segNo  <  numberOfSegments;  segNo++)  {  encryptedUrl.getSegments().add(generator.next());  }  return  encryptedUrl;  }  private  Url  decryptUrl(final  Request  request,  final  Url  encryptedUrl)  {  if  (encryptedUrl.getSegments().isEmpty()  &&  encryptedUrl.getQueryParameters().isEmpty())  {  return  encryptedUrl;  }  List<String>  encryptedSegments  =  encryptedUrl.getSegments();  if  (encryptedSegments.size()  <  1)  {  return  null;  	if  (encryptedUrl.getSegments().isEmpty())  	155	replace-1
82	accumulo_ef0f6ddc	buggy:  while  (scanner.hasNextLine())  execCommand(scanner.nextLine(),  true,  isVerbose());  context:  history.setHistoryFile(new  File(historyPath));  reader.setHistory(history);  }  catch  (IOException  e)  {  log.warn( "Unable  to  load  history  file  at   "  +  historyPath);  }  ShellCompletor  userCompletor  =  null;  if  (execFile  !=  null)  {  java.util.Scanner  scanner  =  new  java.util.Scanner(new  File(execFile));    while  (scanner.hasNextLine())      execCommand(scanner.nextLine(),  true,  isVerbose());  }  else  if  (execCommand  !=  null)  {  	try  {  while  (scanner.hasNextLine()  &&  !hasExited())  {  execCommand(scanner.nextLine(),  true,  isVerbose());  }  }  finally  {  scanner.close();  }  	441	replace-2
83	accumulo_5594b2e0	buggy:  MASTER_BULK_SERVERS( "master.bulk.server.max ",   "4 ",  PropertyType.COUNT,   "The  number  of  servers  to  use  during  a  bulk  load "),  context:   "The  balancer  class  that  accumulo  will  use  to  make  tablet  assignment  and  migration  decisions. "),  MASTER_LOGGER_BALANCER( "master.logger.balancer ",   "org.apache.accumulo.server.master.balancer.SimpleLoggerBalancer ",  PropertyType.CLASSNAME,   "The  balancer  class  that  accumulo  will  use  to  make  logger  assignment  decisions. "),  MASTER_RECOVERY_REDUCERS( "master.recovery.reducers ",   "10 ",  PropertyType.COUNT,   "Number  of  reducers  to  use  to  sort  recovery  logs  (per  log) "),  MASTER_RECOVERY_MAXAGE( "master.recovery.max.age ",   "60m ",  PropertyType.TIMEDURATION,   "Recovery  files  older  than  this  age  will  be  removed. "),  MASTER_RECOVERY_MAXTIME( "master.recovery.time.max ",   "30m ",  PropertyType.TIMEDURATION,   "The  maximum  time  to  attempt  recovery  before  giving  up "),  MASTER_RECOVERY_QUEUE( "master.recovery.queue ",   "default ",  PropertyType.STRING,   "Priority  queue  to  use  for  log  recovery  map/reduce  jobs. "),  MASTER_RECOVERY_POOL( "master.recovery.pool ",   "recovery ",  PropertyType.STRING,   "Priority  queue  to  use  for  log  recovery  map/reduce  jobs. "),  MASTER_RECOVERY_SORT_MAPREDUCE( "master.recovery.sort.mapreduce ",   "false ",  PropertyType.BOOLEAN,   "If  true,  use  map/reduce  to  sort  write-ahead  logs  during  recovery "),    MASTER_BULK_SERVERS( "master.bulk.server.max ",   "4 ",  PropertyType.COUNT,   "The  number  of  servers  to  use  during  a  bulk  load "),  MASTER_BULK_RETRIES( "master.bulk.retries ",   "3 ",  PropertyType.COUNT,   "The  number  of  attempts  to  bulk-load  a  file  before  giving  up. "),  MASTER_BULK_THREADPOOL_SIZE( "master.bulk.threadpool.size ",   "5 ",  PropertyType.COUNT,   "The  number  of  threads  to  use  when  coordinating  a  bulk-import. "),  MASTER_MINTHREADS( "master.server.threads.minimum ",   "2 ",  PropertyType.COUNT,   "The  minimum  number  of  threads  to  use  to  handle  incoming  requests. "),  MASTER_THREADCHECK( "master.server.threadcheck.time ",   "1s ",  PropertyType.TIMEDURATION,   "The  time  between  adjustments  of  the  server  thread  pool. "),  TSERV_PREFIX( "tserver. ",  null,  PropertyType.PREFIX,   "Properties  in  this  category  affect  the  behavior  of  the  tablet  servers "),  TSERV_CLIENT_TIMEOUT( "tserver.client.timeout ",   "3s ",  PropertyType.TIMEDURATION,   "Time  to  wait  for  clients  to  continue  scans  before  closing  a  session. "),  TSERV_DEFAULT_BLOCKSIZE( "tserver.default.blocksize ",   "1M ",  PropertyType.MEMORY,   "Specifies  a  default  blocksize  for  the  tserver  caches "),  		68	remove-1
84	commons-math_dd6cefb0	buggy:  if  ((Boolean)  getTree(false).getAttribute())  {  context:  return  new  PolygonsSet(tree);  }  protected  void  computeGeometricalProperties()  {  final  Vector2D[][]  v  =  getVertices();  if  (v.length  ==  0)  {      if  ((Boolean)  getTree(false).getAttribute())  {  setSize(Double.POSITIVE_INFINITY);  setBarycenter(Vector2D.NaN);  }  else  {  setSize(0);  setBarycenter(new  Vector2D(0,  0));  }  	final  BSPTree<Euclidean2D>  tree  =  getTree(false);  if  (tree.getCut()  ==  null  &&  (Boolean)  tree.getAttribute())  {  	135	replace-1
85	wicket_813d8bee	buggy:  final  String  marker  =   "wicket- "  +  getGroup().getMarkupId();  String  clazz  =  tag.getAttribute( "class ");  if  (Strings.isEmpty(clazz))  {  clazz  =  marker;  }  else  {  clazz  =  clazz  +   "   "  +  marker;  }  tag.put( "class ",  clazz);    context:   "='  +  this.value; ");  }  }  if  (!isEnabledInHierarchy())  {  tag.put(ATTR_DISABLED,  ATTR_DISABLED);  }  //  put  group  id  into  the  class  so  we  can  easily  identify  all  radios  belonging  to  the  group  final  String  marker  =   "wicket- "  +  getGroup().getMarkupId();  String  clazz  =  tag.getAttribute( "class ");  if  (Strings.isEmpty(clazz))  {  clazz  =  marker;  }  else  {  clazz  =  clazz  +   "   "  +  marker;  }  		209	remove-12
86	commons-math_f656676e	buggy:  if  (basicRows.contains(basicRow))  {  context:  Set<Integer>  basicRows  =  new  HashSet<Integer>();  double[]  coefficients  =  new  double[getOriginalNumDecisionVariables()];  for  (int  i  =  0;  i  <  coefficients.length;  i++)  {  int  colIndex  =  columnLabels.indexOf( "x "  +  i);  if  (colIndex  <  0)  {  coefficients[i]  =  0;  continue;  }  Integer  basicRow  =  getBasicRow(colIndex);    if  (basicRows.contains(basicRow))  {  coefficients[i]  =  0  -  (restrictToNonNegative  ?  0  :  mostNegative);  	if  (basicRow  !=  null  &&  basicRow  ==  0)  {  coefficients[i]  =  0;  }  else  if  (basicRows.contains(basicRow))  {  	410	replace-1
87	jackrabbit-oak_002c5845	buggy:  private  static  final  char[]  LUCENE_QUERY_OPERATORS  =  {':'  ,  '/',  '!',  '&',  '|'};  context:  try  {  return  parserHelper.parse(text,  fieldName);  }  catch  (QueryNodeException  e)  {  throw  new  RuntimeException(e);  }  }  private  static  final  char[]  LUCENE_QUERY_OPERATORS  =  {':'  ,  '/',  '!',  '&',  '|'};  static  String  rewriteQueryText(String  textsearch)  {  StringBuilder  rewritten  =  new  StringBuilder();  	private  static  final  char[]  LUCENE_QUERY_OPERATORS  =  {':'  ,  '/',  '!',  '&',  '|',  '='};  	1374	replace-1
88	commons-math_3c4cb189	buggy:  if  (Precision.compareTo(entry,  0d,  maxUlps)  >  0)  {  context:  if  (getNumObjectiveFunctions()  ==  1)  {  return;  }  List<Integer>  columnsToDrop  =  new  ArrayList<Integer>();  columnsToDrop.add(0);  for  (int  i  =  getNumObjectiveFunctions();  i  <  getArtificialVariableOffset();  i++)  {  final  double  entry  =  tableau.getEntry(0,  i);      if  (Precision.compareTo(entry,  0d,  maxUlps)  >  0)  {  columnsToDrop.add(i);  }  }  for  (int  i  =  0;  i  <  getNumArtificialVariables();  i++)  {  int  col  =  i  +  getArtificialVariableOffset();  if  (getBasicRow(col)  ==  null)  {  	if  (Precision.compareTo(entry,  0d,  epsilon)  >  0)  {  	338	replace-1
89	jackrabbit-oak_e39b4d96	buggy:  }  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:&/ ".indexOf(c)  >=  0)  {  context:  char  c  =  text.charAt(i);  if  (c  ==  '*')  {  buff.append('%');  pattern  =  true;  }  else  if  (c  ==  '?')  {  buff.append('_');  pattern  =  true;  }  else  if  (c  ==  '_')  {  buff.append( "\\_ ");  pattern  =  true;      }  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:&/ ".indexOf(c)  >=  0)  {  buff.append(c);  }  }  this.filteredText  =  buff.toString().toLowerCase();  }  if  (pattern)  {  like  =  new  LikePattern( "% "  +  filteredText  +   "% ");  }  else  {  	}  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:&/. ".indexOf(c)  >=  0)  {  	70	replace-1
90	wicket_9e6efa61	buggy:  MutableDateTime  mDate;  mDate  =  new  MutableDateTime(modelObject,  DateTimeZone.forTimeZone(zone));  }  else  {  mDate  =  new  MutableDateTime(modelObject);  date  =  mDate.toDate();  context:  Date  modelObject  =  (Date)getDefaultModelObject();  if  (modelObject  ==  null)  {  date  =  null;  hours  =  null;  minutes  =  null;  }  else  {  MutableDateTime  mDate;  TimeZone  zone  =  getClientTimeZone();  if  (zone  !=  null)  {  mDate  =  new  MutableDateTime(modelObject,  DateTimeZone.forTimeZone(zone));  }  else  {  	MutableDateTime  mDate  =  new  MutableDateTime(modelObject);  mDate.setZone(DateTimeZone.forTimeZone(zone));  date  =  mDate.toDateTime().toLocalDate().toDate();  	438	replace-7
91	camel_1957a828	buggy:  if  (Modifier.isAbstract(info.getMethod().getModifiers()))  {  context:  it.remove();  }  }  }  private  void  removeAllAbstractMethods(List<MethodInfo>  methods)  {  Iterator<MethodInfo>  it  =  methods.iterator();  while  (it.hasNext())  {  MethodInfo  info  =  it.next();      if  (Modifier.isAbstract(info.getMethod().getModifiers()))  {  it.remove();  }  }  }  	boolean  isFromInterface  =  Modifier.isInterface(info.getMethod().getDeclaringClass().getModifiers());  if  (!isFromInterface  &&  Modifier.isAbstract(info.getMethod().getModifiers()))  {  	990	replace-1
92	camel_1f92fa42	buggy:  context:  }  public  String  getManagementName()  {  return  context.getManagementName();  }  public  String  getCamelVersion()  {  return  context.getVersion();  }  public  String  getState()  {  return  context.getStatus().name();  }  public  String  getUptime()  {  return  context.getUptime();  }  	@ManagedAttribute(description  =   "Message  History ")  Boolean  getMessageHistory();    	83	add
93	maven_691a03a7	buggy:  this.activeProfiles.addAll(  activeProfiles  );  context:  return  remoteProjectRepositories;  }  public  List<RemoteRepository>  getRemotePluginRepositories()  {  return  remotePluginRepositories;  }  public  void  setActiveProfiles(  List<Profile>  activeProfiles  )  {      this.activeProfiles.addAll(  activeProfiles  );  }  public  List<Profile>  getActiveProfiles()  {  return  activeProfiles;  }  public  void  setInjectedProfileIds(  String  source,  List<String>  injectedProfileIds  )  	this.activeProfiles  =  activeProfiles;  	1410	replace-1
94	accumulo_efef09b0	buggy:  colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  2);  context:  int  zeroIndex  =  currentDocID.find( "\0 ");  if  (zeroIndex  <  0)  throw  new  IllegalArgumentException( "bad  current  docID ");  Text  colf  =  new  Text(docColf);  colf.append(nullByte,  0,  1);  colf.append(currentDocID.getBytes(),  0,  zeroIndex);  docColfSet  =  Collections.singleton((ByteSequence)  new  ArrayByteSequence(colf.getBytes(),  0,  colf.getLength()));  if  (log.isTraceEnabled())  log.trace(zeroIndex  +   "   "  +  currentDocID.getLength());  Text  colq  =  new  Text();  colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  2);  Key  k  =  new  Key(currentPartition,  colf,  colq);  if  (log.isTraceEnabled())  log.trace( "built  doc  key  for  seek:   "  +  k.toString());  return  k;  }  }  	colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  1);  	154	replace-1
95	wicket_12124902	buggy:  listeners.onRequestHandlerScheduled(handler);  context:  return  current;  }  public  void  scheduleRequestHandlerAfterCurrent(IRequestHandler  handler)  {  requestHandlerExecutor.schedule(handler);  listeners.onRequestHandlerScheduled(handler);  }  	  if  (handler  !=  null)  listeners.onRequestHandlerScheduled(handler);  	671	replace-1
96	jackrabbit-oak_57bd2dc5	buggy:  if  (revision.equalsIgnoreBranch(readRevision))  {  return  true;  }  context:  private  boolean  isCommitted(@Nonnull  RevisionContext  context,      if  (revision.equalsIgnoreBranch(readRevision))  {      return  true;      }  if  (commitValue  ==  null)  {  commitValue  =  getCommitValue(revision);  }  if  (commitValue  ==  null)  {  return  false;  }  if  (Utils.isCommitted(commitValue))  {  		1333	remove-3
97	accumulo_17344890	buggy:  if  (bb.remaining()  >=  len)  {  bb.put(b,  off,  len);  if  (bb.remaining()  ==  0)  flush();  }  else  {  write(b,  off,  remaining);  write(b,  off  +  remaining,  len  -  remaining);  context:  public  void  write(int  b)  throws  IOException  {  if  (bb.remaining()  ==  0)  flush();  bb.put((byte)  b);  }  public  void  write(byte  b[],  int  off,  int  len)  throws  IOException  {  if  (bb.remaining()  >=  len)  {    bb.put(b,  off,  len);    if  (bb.remaining()  ==  0)      flush();  }  else  {  int  remaining  =  bb.remaining();    write(b,  off,  remaining);  	while  (len  >=  bb.remaining())  {  bb.put(b,  off,  remaining);  flush();  off  +=  remaining;  len  -=  remaining;  bb.put(b,  off,  len);  	75	replace-7
98	flink_adb321d6	buggy:  if  (tm.breaksPipeline()  &&  channel.getDataExchangeMode()  !=  DataExchangeMode.BATCH)  {  context:  }  assignLocalStrategyResources(channel,  config,  inputNum);  if  (channel.getTempMode()  !=  null)  {  final  TempMode  tm  =  channel.getTempMode();  boolean  needsMemory  =  false;  //  Don't  add  a  pipeline  breaker  if  the  data  exchange  is  already  blocking.  if  (tm.breaksPipeline()  &&  channel.getDataExchangeMode()  !=  DataExchangeMode.BATCH)  {  config.setInputAsynchronouslyMaterialized(inputNum,  true);  needsMemory  =  true;  }  if  (tm.isCached())  {  config.setInputCached(inputNum,  true);  needsMemory  =  true;  	if  (tm.breaksPipeline()  &&  (channel.isOnDynamicPath()  ||  channel.getDataExchangeMode()  !=  DataExchangeMode.BATCH)  )  {  	1167	replace-1
99	flink_ed3810b1	buggy:  context:  return  kryo;  }  }  private  void  checkKryoInitialized()  {  if  (this.kryo  ==  null)  {  this.kryo  =  getKryoInstance();  kryo.addDefaultSerializer(Throwable.class,  new  JavaSerializer());  for  (Map.Entry<Class<?>,  ExecutionConfig.SerializableSerializer<?>>  entry:  defaultSerializers.entrySet())  {  kryo.addDefaultSerializer(entry.getKey(),  entry.getValue().getSerializer());  }  	kryo.setReferences(false);    	328	add
100	logging-log4j2_8faf7f77	buggy:  context:  }  final  String  guid  =  UUIDUtil.getTimeBasedUUID().toString();  final  Message  message  =  event.getMessage();  if  (message  instanceof  MapMessage)  {  ((MapMessage)  message).put(GUID,  guid);  if  (message  instanceof  StructuredDataMessage)  {  addStructuredData(eventPrefix,  headers,  (StructuredDataMessage)  message);  }  addMapData(eventPrefix,  headers,  (MapMessage)  message);  }  addContextData(mdcPrefix,  headers,  ctx);  }  protected  void  addStructuredData(final  String  prefix,  final  Map<String,  String>  fields,  final  StructuredDataMessage  msg)  {  fields.put(prefix  +  EVENT_TYPE,  msg.getType());  	}  else  {  headers.put(GUID,  guid);  	137	add
101	jackrabbit-oak_4416a9f8	buggy:  context:  }  }  return  list;  }  private  Property  internalRemoveProperty(final  String  jcrName)  throws  RepositoryException  {  final  String  oakName  =  getOakName(checkNotNull(jcrName));  return  perform(new  ItemWriteOperation<Property>( "internalRemoveProperty ")  {  	@Override  public  void  checkPreconditions()  throws  RepositoryException  {  super.checkPreconditions();  if  (!isCheckedOut())  {  throw  new  VersionException(   "Cannot  remove  property.  Node  is  checked  in. ");  }  }  	1427	add
102	wicket_cd281092	buggy:  String  resource  =  prefix(prefix,  getId()  +   ". "  +  key);  context:  final  Localizer  localizer  =  formComponent.getLocalizer();  String  prefix  =  formComponent.getValidatorKeyPrefix();  String  message  =  null;  //  first  try  the  full  form  of  key  [prefix].[form-component-id].[key]  String  resource  =  prefix(prefix,  getId()  +   ". "  +  key);  message  =  getString(localizer,  resource,  formComponent);  //  if  not  found,  try  a  more  general  form  (without  prefix)  [form-component-id].[key]  if  (Strings.isEmpty(message)  &&  Strings.isEmpty(prefix))  {  	String  resource  =  getId()  +   ". "  +  prefix(prefix,  key);  	163	replace-1
103	flink_259f10c0	buggy:  nextPartialSolution  ==  partialSolution)  context:  public  void  setNextPartialSolution(OptimizerNode  nextPartialSolution,  OptimizerNode  terminationCriterion)  {  if  (nextPartialSolution.getDegreeOfParallelism()  !=  getDegreeOfParallelism()  ||  nextPartialSolution  ==  partialSolution)  {  NoOpNode  noop  =  new  NoOpNode();  noop.setDegreeOfParallelism(getDegreeOfParallelism());  PactConnection  noOpConn  =  new  PactConnection(nextPartialSolution,  noop);  noop.setIncomingConnection(noOpConn);  nextPartialSolution.addOutgoingConnection(noOpConn);  	nextPartialSolution  ==  partialSolution  ||  nextPartialSolution  instanceof  BinaryUnionNode)  	135	replace-1
104	camel_17475d80	buggy:  future.cancel(false);  }  @Override  protected  void  doShutdown()  throws  Exception  {  context:  .newSingleThreadScheduledExecutor(consumer,  consumer.getEndpoint().getEndpointUri());  this.shutdownExecutor  =  true;  }  }  protected  void  doStop()  throws  Exception  {  if  (future  !=  null)  {  LOG.debug( "This  consumer  is  stopping,  so  cancelling  scheduled  task:   "  +  future);      future.cancel(false);  future  =  null;  }  }  @Override  protected  void  doShutdown()  throws  Exception  {  if  (shutdownExecutor  &&  scheduledExecutorService  !=  null)  {  getCamelContext().getExecutorServiceManager().shutdownNow(scheduledExecutorService);  	future.cancel(true);    	159	replace-4
105	wicket_2b1ce91d	buggy:  return  true;  context:  {  return  className;  }  protected  boolean  pageMustHaveBeenCreatedBookmarkable()  {  return  true;  }  public  int  getCompatibilityScore(Request  request)  {  	return  false;  	219	replace-1
106	wicket_6122df49	buggy:  return  new  CssPackageResource(getScope(),  getName(),  getLocale(),  getStyle(),  getVariation());  context:  public  CssResourceReference(Key  key)  {  super(key);  }  public  CssPackageResource  getResource()  {  return  new  CssPackageResource(getScope(),  getName(),  getLocale(),  getStyle(),  getVariation());  }  }  	final  CssPackageResource  resource  =  new  CssPackageResource(getScope(),  getName(),  getLocale(),  getStyle(),  getVariation());  removeCompressFlagIfUnnecessary(resource);  return  resource;  	79	replace-2
107	commons-math_faa77857	buggy:  targetY  =  -REDUCTION_FACTOR  *  yB;  targetY  =  -REDUCTION_FACTOR  *  yA;  context:  default  :  throw  new  MathInternalError(null);  }  }  double  targetY;  if  (agingA  >=  MAXIMAL_AGING)  {      targetY  =  -REDUCTION_FACTOR  *  yB;  }  else  if  (agingB  >=  MAXIMAL_AGING)  {      targetY  =  -REDUCTION_FACTOR  *  yA;  	final  int  p  =  agingA  -  MAXIMAL_AGING;  final  double  weightA  =  (1  <<  p)  -  1;  final  double  weightB  =  p  +  1;  targetY  =  (weightA  *  yA  -  weightB  *  REDUCTION_FACTOR  *  yB)  /  (weightA  +  weightB);  final  int  p  =  agingB  -  MAXIMAL_AGING;  final  double  weightA  =  p  +  1;  final  double  weightB  =  (1  <<  p)  -  1;  targetY  =  (weightB  *  yB  -  weightA  *  REDUCTION_FACTOR  *  yA)  /  (weightA  +  weightB);  	235	replace-2
108	jackrabbit-oak_59a83d23	buggy:  context:  public  boolean  isVirtualRow()  {  return  currentRow.isVirutal;  }  public  String  getPath()  {  String  sub  =  pathRow.getPath();  if  (isVirtualRow())  {  return  sub;  }  else  if  (PathUtils.isAbsolute(sub))  {  return  pathPrefix  +  sub;  }  else  {  return  PathUtils.concat(pathPrefix,  sub);  }  }  	}  else  if  (! " ".equals(pathPrefix)  &&  PathUtils.denotesRoot(sub))  {  return  pathPrefix;  	1531	add
109	wicket_ffdd0864	buggy:  context:  package  org.apache.wicket.markup.html.panel;  	  	20	add
110	jackrabbit-oak_cb3ac20d	buggy:  context:  qs.add(new  TermQuery(new  Term(FieldNames.PATH,   "/// ")));  }  else  {  qs.add(new  TermQuery(newPathTerm(PathUtils.getParentPath(path))));  }  break;  case  NO_RESTRICTION:  break;  }  for  (PropertyRestriction  pr  :  filter.getPropertyRestrictions())  {  String  name  =  pr.propertyName;  if  (name.contains( "/ "))  {  	  if  (pr.first  ==  null  &&  pr.last  ==  null)  {  continue;  }    	478	add
111	commons-math_ce185345	buggy:  context:  Iterator<Entry>  it  =  iterator();  Entry  e;  while  (it.hasNext()  &&  (e  =  it.next())  !=  null)  {  final  double  diff  =  e.getValue()  -  v.getEntry(e.getIndex());  d  +=  diff  *  diff;  }  return  Math.sqrt(d);  }  	public  double  getNorm()  {  double  sum  =  0;  Iterator<Entry>  it  =  sparseIterator();  Entry  e;  while  (it.hasNext()  &&  (e  =  it.next())  !=  null)  {  final  double  value  =  e.getValue();  sum  +=  value  *  value;  }  return  Math.sqrt(sum);  }    public  double  getL1Norm()  {  double  norm  =  0;  Iterator<Entry>  it  =  sparseIterator();  Entry  e;  while  (it.hasNext()  &&  (e  =  it.next())  !=  null)  {  norm  +=  Math.abs(e.getValue());  }  return  norm;  }    public  double  getLInfNorm()  {  double  norm  =  0;  Iterator<Entry>  it  =  sparseIterator();  Entry  e;  while  (it.hasNext()  &&  (e  =  it.next())  !=  null)  {  norm  =  Math.max(norm,  Math.abs(e.getValue()));  }  return  norm;  }    	209	add
112	jackrabbit-oak_ca85ecce	buggy:  return  getRoot(Revision.fromString(checkpoint));  context:  public  Map<String,  String>  checkpointInfo(@Nonnull  String  checkpoint)  {  throw  new  UnsupportedOperationException();  //  FIXME  implement.  See  OAK-2291  }  public  NodeState  retrieve(@Nonnull  String  checkpoint)  {      return  getRoot(Revision.fromString(checkpoint));  }  	Revision  r  =  Revision.fromString(checkpoint);  if  (checkpoints.getCheckpoints().containsKey(r))  {  return  getRoot(r);  }  else  {  return  null;  }  	1386	replace-1
113	logging-log4j2_c79a743b	buggy:  Layout  layout  =  (format.equalsIgnoreCase(RFC5424))  ?  context:  int  reconnectDelay  =  delay  ==  null  ?  0  :  Integer.parseInt(delay);  int  port  =  portNum  ==  null  ?  0  :  Integer.parseInt(portNum);  Charset  c  =  Charset.isSupported( "UTF-8 ")  ?  Charset.forName( "UTF-8 ")  :  Charset.defaultCharset();  if  (charset  !=  null)  {  if  (Charset.isSupported(charset))  {  c  =  Charset.forName(charset);  }  else  {  LOGGER.error( "Charset   "  +  charset  +   "  is  not  supported  for  layout,  using   "  +  c.displayName());  }  }      Layout  layout  =  (format.equalsIgnoreCase(RFC5424))  ?  RFC5424Layout.createLayout(facility,  id,  ein,  includeMDC,  mdcId,  includeNL,  appName,  msgId,  excludes,  includes,  required,  charset,  config)  :  SyslogLayout.createLayout(facility,  includeNL,  charset);  if  (name  ==  null)  {  LOGGER.error( "No  name  provided  for  SyslogAppender ");  return  null;  }  	Layout  layout  =  (RFC5424.equalsIgnoreCase(format))  ?  	114	replace-1
114	wicket_cd414fa5	buggy:  return  null;  //  dont  know  context:  }  else  if  (wicketTag.getAutoComponentFactory()  !=  null)  {  return  DequeueTagAction.DEQUEUE;  }  else  if  (wicketTag.isFragmentTag())  {  return  DequeueTagAction.SKIP;  }  else  {  return  null;  //  dont  know  }  }  	else  if  (wicketTag.isChildTag())  {  return  DequeueTagAction.DEQUEUE;  }  return  null;  //  don't  know  	2181	replace-1
115	maven_5d99b35c	buggy:  context:  public  ResolutionGroup  retrieve(  Artifact  artifact,  ArtifactRepository  localRepository,  List  remoteRepositories  )  	public  DefaultProfileManager(  PlexusContainer  container,  Settings  settings,  Properties  props  )  {  this.container  =  container;    loadSettingsProfiles(  settings  );    if  (  props  !=  null  )  {  systemProperties  =  props;  }  }    	88	add
116	wicket_1858bc18	buggy:  dontNeedEncoding.set('\'');  context:  dontNeedEncoding.set('.');  dontNeedEncoding.set('_');  dontNeedEncoding.set('~');  //  tilde  encoded  by  java.net.URLEncoder  dontNeedEncoding.set('!');  dontNeedEncoding.set('$');  dontNeedEncoding.set('\'');  dontNeedEncoding.set('*');  dontNeedEncoding.set(',');  		177	remove-1
117	logging-log4j2_0bea17d7	buggy:  return  this.parents  ==  null;  context:  public  Marker[]  getParents()  {  if  (this.parents  ==  null)  {  return  null;  }  return  Arrays.copyOf(this.parents,  this.parents.length);  }  public  boolean  hasParents()  {      return  this.parents  ==  null;  }  public  boolean  isInstanceOf(final  Marker  marker)  {  if  (marker  ==  null)  {  throw  new  IllegalArgumentException( "A  marker  parameter  is  required ");  }  if  (this  ==  marker)  {  	return  this.parents  !=  null;  	231	replace-1
118	camel_b6981cfd	buggy:  aggregationRepository.remove(aggregated.getContext(),  key,  original);  context:  }  protected  Exchange  onCompletion(final  String  key,  final  Exchange  original,  final  Exchange  aggregated,  boolean  fromTimeout)  {  if  (original  !=  null)  {  original.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,  key);  }  aggregated.setProperty(Exchange.AGGREGATED_CORRELATION_KEY,  key);      //  remove  from  repository  as  its  completed,  we  do  this  first  as  to  trigger  any  OptimisticLockingException's      aggregationRepository.remove(aggregated.getContext(),  key,  original);  if  (!fromTimeout  &&  timeoutMap  !=  null)  {  	if  (original  !=  null)  {  aggregationRepository.remove(aggregated.getContext(),  key,  original);  }  	485	replace-1
119	wicket_53442bb4	buggy:  if  (wrappedModel  !=  null)  {  addStateChange();  }  modelChanged();  context:  IModel<?>  wrappedModel  =  prevModel;  if  (prevModel  instanceof  IWrapModel)  {  wrappedModel  =  ((IWrapModel<?>)prevModel).getWrappedModel();  }  if  (wrappedModel  !=  model)  {  if  (wrappedModel  !=  null)  {  addStateChange();  }  setModelImpl(wrap(model));  }  	modelChanging();  modelChanged();  	2988	replace-6
120	accumulo_6138a80f	buggy:  context:  public  static  CryptoModuleParameters  createParamsObjectFromAccumuloConfiguration(AccumuloConfiguration  conf)  {  CryptoModuleParameters  params  =  new  CryptoModuleParameters();  return  fillParamsObjectFromConfiguration(params,  conf);  }  public  static  CryptoModuleParameters  fillParamsObjectFromConfiguration(CryptoModuleParameters  params,  AccumuloConfiguration  conf)  {  Map<String,String>  cryptoOpts  =  conf.getAllPropertiesWithPrefix(Property.CRYPTO_PREFIX);  cryptoOpts.putAll(conf.getAllPropertiesWithPrefix(Property.INSTANCE_PREFIX));  cryptoOpts.put(Property.CRYPTO_BLOCK_STREAM_SIZE.getKey(),  Integer.toString((int)  conf.getMemoryInBytes(Property.CRYPTO_BLOCK_STREAM_SIZE)));  return  fillParamsObjectFromStringMap(params,  cryptoOpts);  }  public  static  CryptoModuleParameters  fillParamsObjectFromStringMap(CryptoModuleParameters  params,  Map<String,String>  cryptoOpts)  {  String[]  cipherTransformParts  =  parseCipherTransform(cryptoOpts.get(Property.CRYPTO_CIPHER_SUITE.getKey()));  	cryptoOpts.remove(Property.INSTANCE_SECRET.getKey());  	261	add
121	jackrabbit-oak_2f95b81f	buggy:  if  (b.getBase().equals(base))  {  context:  Revision  rebase(@Nonnull  Revision  branchHead,  @Nonnull  Revision  base)  {  checkNotNull(branchHead);  checkNotNull(base);  Branch  b  =  getBranches().getBranch(branchHead);  if  (b  ==  null)  {  return  base.asBranchRevision();  }      if  (b.getBase().equals(base))  {  return  branchHead;  }  Revision  head  =  newRevision().asBranchRevision();  b.rebase(head,  base);  return  head;  }  	if  (b.getBase(branchHead).equals(base))  {  	750	replace-1
122	jackrabbit-oak_192ee9e4	buggy:  if  (oldDoc.getMemory()  >  getMemory()  *  SPLIT_RATIO)  {  context:  Revision  r  =  entry.getKey();  main.removeMapEntry(property,  r);  old.setMapEntry(property,  r,  entry.getValue());  }  }  NodeDocument  oldDoc  =  new  NodeDocument(store);  UpdateUtils.applyChanges(oldDoc,  old,  context.getRevisionComparator());  setSplitDocProps(this,  oldDoc,  old,  high);      if  (oldDoc.getMemory()  >  getMemory()  *  SPLIT_RATIO)  {  splitOps.add(old);  }  else  {  main  =  null;  }  }  	if  (oldDoc.getMemory()  >  getMemory()  *  SPLIT_RATIO  ||  numValues  >=  NUM_REVS_THRESHOLD)  {  	972	replace-1
123	wicket_f3ec1503	buggy:  MetaPattern.VARIABLE_NAME,  MetaPattern.COLON  });  context:  public  final  class  VariableAssignmentParser  extends  MetaPatternParser  {  /**  The  optional  namespace  like   "namespace:* "  */  private  static  final  MetaPattern  namespace  =  new  OptionalMetaPattern(new  MetaPattern[]  {  MetaPattern.VARIABLE_NAME,  MetaPattern.COLON  });  /**  The  key  (lvalue)  like   "name "  or   "namespace:name "  */  private  final  Group  key  =  new  Group(new  MetaPattern(namespace,  MetaPattern.XML_ATTRIBUTE_NAME));  private  final  Group  value;  	MetaPattern.VARIABLE_NAME,  MetaPattern.COLON,  new  OptionalMetaPattern(new  MetaPattern[]  {MetaPattern.VARIABLE_NAME,  MetaPattern.COLON  })});  	35	replace-1
124	jackrabbit-oak_b939aa6e	buggy:  currentPropValues);  context:  throw  new  SAXException( "error  while  retrieving  value ",  ioe);  }  }  else  {  if  (currentPropMultipleStatus  ==  PropInfo.MultipleStatus.UNKNOWN  &&  currentPropValues.size()  !=  1)  {  currentPropMultipleStatus  =  PropInfo.MultipleStatus.MULTIPLE;  }  PropInfo  prop  =  new  PropInfo(  currentPropName  ==  null  ?  null  :  currentPropName.getRepoQualifiedName(),  currentPropType,          currentPropValues);  state.props.add(prop);  }  currentPropValues.clear();  }  else  if  (namespaceURI.equals(NamespaceConstants.NAMESPACE_SV)  &&   "value ".equals(localName))  {  currentPropValues.add(currentPropValue);  	currentPropValues,  currentPropMultipleStatus);  	280	replace-1
125	logging-log4j2_b2ec5106	buggy:  return  obj  ==  null  ?  that.obj  ==  null  :  obj.equals(that.obj);  context:  public  boolean  equals(final  Object  o)  {  if  (this  ==  o)  {  return  true;  }  if  (o  ==  null  ||  getClass()  !=  o.getClass())  {  return  false;  }  final  ObjectMessage  that  =  (ObjectMessage)  o;      return  obj  ==  null  ?  that.obj  ==  null  :  obj.equals(that.obj);  }  public  int  hashCode()  {  	return  obj  ==  null  ?  that.obj  ==  null  :  equalObjectsOrStrings(obj,  that.obj);  }    private  boolean  equalObjectsOrStrings(Object  left,  Object  right)  {  return  left.equals(right)  ||  String.valueOf(left).equals(String.valueOf(right));  	86	replace-1
126	jackrabbit-oak_b2ca8baa	buggy:  count  =  count  /  size  /  i;  context:  count  *=  10;  }  else  {  int  size  =  values.size();  if  (size  ==  0)  {  return  0;  }  max  =  Math.max(10,  max  /  size);  int  i  =  0;  for  (String  p  :  values)  {  if  (count  >  max  &&  i  >  3)  {          count  =  count  /  size  /  i;  break;  }  NodeState  s  =  index.getChildNode(p);  if  (s.exists())  {  CountingNodeVisitor  v  =  new  CountingNodeVisitor(max);  v.visit(s);  	count  =  count  *  size  /  i;  	167	replace-1
127	jackrabbit-oak_17032c50	buggy:  IndexNode  indexNode  =  null;  context:  public  String  getIndexName()  {  return   "lucene-property ";  }  public  List<IndexPlan>  getPlans(Filter  filter,  List<OrderEntry>  sortOrder,  NodeState  rootState)  {  Collection<String>  indexPaths  =  new  LuceneIndexLookup(rootState).collectIndexNodePaths(filter);  List<IndexPlan>  plans  =  Lists.newArrayListWithCapacity(indexPaths.size());      IndexNode  indexNode  =  null;  for  (String  path  :  indexPaths)  {  try  {  indexNode  =  tracker.acquireIndexNode(path);  if  (indexNode  !=  null)  {  IndexPlan  plan  =  new  IndexPlanner(indexNode,  path,  filter,  sortOrder).getPlan();  if  (plan  !=  null)  {  plans.add(plan);  	IndexNode  indexNode  =  null;  	209	replace-1
128	logging-log4j2_c8fd3c53	buggy:  public  boolean  contains(final  org.slf4j.Marker  marker)  {  return  this.marker.isInstanceOf(marker.getName());  }  context:  public  Iterator<Marker>  iterator()  {  final  List<Marker>  parents  =  new  ArrayList<>();  for  (final  org.apache.logging.log4j.Marker  m  :  this.marker.getParents())  {  parents.add(factory.getMarker(m.getName()));  }  return  parents.iterator();  }  public  boolean  contains(final  org.slf4j.Marker  marker)  {      return  this.marker.isInstanceOf(marker.getName());  }  	public  boolean  contains(final  org.slf4j.Marker  marker)  {  if  (marker  ==  null)  {  throw  new  IllegalArgumentException();  }  return  this.marker.isInstanceOf(marker.getName());  }  	87	replace-3
129	commons-math_596ccd59	buggy:  double  maxMembership  =  0.0;  for  (final  CentroidCluster<T>  c  :  clusters)  {  final  double  distB  =  FastMath.abs(distance(point,  c.getCenter()));  sum  +=  FastMath.pow(distA  /  distB,  2.0  /  (fuzziness  -  1.0));  membershipMatrix[i][j]  =  1.0  /  sum;  context:  clusters  =  newClusters;  }  private  void  updateMembershipMatrix()  {  for  (int  i  =  0;  i  <  points.size();  i++)  {  final  T  point  =  points.get(i);      double  maxMembership  =  0.0;  int  newCluster  =  -1;  for  (int  j  =  0;  j  <  clusters.size();  j++)  {  double  sum  =  0.0;  final  double  distA  =  FastMath.abs(distance(point,  clusters.get(j).getCenter()));      for  (final  CentroidCluster<T>  c  :  clusters)  {          final  double  distB  =  FastMath.abs(distance(point,  c.getCenter()));          sum  +=  FastMath.pow(distA  /  distB,  2.0  /  (fuzziness  -  1.0));  	double  maxMembership  =  Double.MIN_VALUE;  if  (distA  !=  0.0)  {  for  (final  CentroidCluster<T>  c  :  clusters)  {  final  double  distB  =  FastMath.abs(distance(point,  c.getCenter()));  if  (distB  ==  0.0)  {  sum  =  Double.POSITIVE_INFINITY;  break;  }  sum  +=  FastMath.pow(distA  /  distB,  2.0  /  (fuzziness  -  1.0));  }  double  membership;  if  (sum  ==  0.0)  {  membership  =  1.0;  }  else  if  (sum  ==  Double.POSITIVE_INFINITY)  {  membership  =  0.0;  }  else  {  membership  =  1.0  /  sum;  }  membershipMatrix[i][j]  =  membership;  	349	replace-5
130	wicket_1a2bc1bc	buggy:  filter.filter(responseBuffer);  context:  AppendingStringBuffer  responseBuffer  =  new  AppendingStringBuffer(builder);  List<IResponseFilter>  responseFilters  =  Application.get()  .getRequestCycleSettings()  .getResponseFilters();  if  (responseFilters  !=  null)  {  for  (IResponseFilter  filter  :  responseFilters)  {  filter.filter(responseBuffer);  }  }  response.write(builder);  }  public  int  compareTo(Action  o)  	responseBuffer  =  filter.filter(responseBuffer);  return  responseBuffer;  	145	replace-1
131	jackrabbit-oak_86edbffb	buggy:  Version  VERSION  =  Version.LUCENE_46;  context:  public  interface  LuceneIndexConstants  {  String  TYPE_LUCENE  =   "lucene ";  String  INDEX_DATA_CHILD_NAME  =   ":data ";  Version  VERSION  =  Version.LUCENE_46;  Analyzer  ANALYZER  =  new  OakAnalyzer(VERSION);  String  INCLUDE_PROPERTY_TYPES  =   "includePropertyTypes ";  	Version  VERSION  =  Version.LUCENE_47;  	28	replace-1
132	jackrabbit-oak_24f7f60a	buggy:  sessionContext.getAccessManager().checkPermissions(dlg.getTree(),  prop,  Permissions.NODE_TYPE_MANAGEMENT);  context:  if  (parent.getChild(oakName)  !=  null)  {  throw  new  ItemExistsException(relPath);  }  if  (oakTypeName  !=  null)  {  PropertyState  prop  =  PropertyStates.createProperty(JCR_PRIMARYTYPE,  oakTypeName,  NAME);          sessionContext.getAccessManager().checkPermissions(dlg.getTree(),  prop,  Permissions.NODE_TYPE_MANAGEMENT);  }  NodeDelegate  added  =  parent.addChild(oakName,  oakTypeName);  if  (added  ==  null)  {  throw  new  ItemExistsException();  }  return  createNode(added,  sessionContext);  }  	sessionContext.getAccessManager().checkPermissions(parent.getTree(),  prop,  Permissions.NODE_TYPE_MANAGEMENT);  	293	replace-1
133	accumulo_872b6db3	buggy:  context:  Node  child  =  processTerm(subtermStart,  index  -  1,  expr,  expression);  if  (child  ==  null  &&  result  ==  null)  throw  new  BadArgumentException( "empty  expression  not  allowed ",  new  String(expression),  index);  if  (result  ==  null)  return  child;  if  (result.type  ==  child.type)  for  (Node  c  :  child.children)  result.add(c);  else  result.add(child);  return  result;  }  case  ' "':  {  if  (subtermStart  !=  index  -  1)  throw  new  BadArgumentException( "expression  needs  &  or  | ",  new  String(expression),  index  -  1);  while  (index  <  expression.length  &&  expression[index]  !=  ' "')  {  if  (expression[index]  ==  '\\')  {  index++;  	result.end  =  index  -  1;  	305	add
134	jackrabbit-oak_9225a3e2	buggy:  public  SortedMap<Revision,  Revision>  getUncommittedRevisions(RevisionContext  context)  {  SortedMap<Revision,  Revision>  revisions  =  new  TreeMap<Revision,  Revision>(context.getRevisionComparator());  Revision  b  =  Revision.fromString(commit.getValue());  revisions.put(r,  b);  return  revisions;  context:  *  @return  the  uncommitted  revisions  of  this  document.  public  SortedMap<Revision,  Revision>  getUncommittedRevisions(RevisionContext  context)  {  Map<Revision,  String>  valueMap  =  getLocalRevisions();      SortedMap<Revision,  Revision>  revisions  =      new  TreeMap<Revision,  Revision>(context.getRevisionComparator());  for  (Map.Entry<Revision,  String>  commit  :  valueMap.entrySet())  {  	public  int  purgeUncommittedRevisions(RevisionContext  context)  {  UpdateOp  op  =  new  UpdateOp(getId(),  false);  int  purgeCount  =  0;  purgeCount++;  op.removeMapEntry(REVISIONS,  r);    if  (op.hasChanges())  {  store.findAndUpdate(Collection.NODES,  op);  }  return  purgeCount;  	575	replace-6
135	commons-math_ebadb558	buggy:  return  chromosomes.iterator();  context:  }  *  Chromosome  list  iterator  public  Iterator<Chromosome>  iterator()  {      return  chromosomes.iterator();  }  }  	return  getChromosomes().iterator();  	210	replace-1
136	logging-log4j2_a759d8ae	buggy:  case  ',':  case  '=':  case  ':':  sb.append('\\');  needsQuotes  =  true;  context:  public  static  String  escape(final  String  name)  {  final  StringBuilder  sb  =  new  StringBuilder(name.length()  *  2);  boolean  needsQuotes  =  false;  for  (int  i  =  0;  i  <  name.length();  i++)  {  final  char  c  =  name.charAt(i);  switch  (c)  {      case  ',':      case  '=':      case  ':':  case  '\\':  case  '*':  case  '?':      sb.append('\\');      needsQuotes  =  true;  	case  '\ "':  sb.append('\\');  //  quote,  star,  question  &  backslash  must  be  escaped  needsQuotes  =  true;  //  ...  and  can  only  appear  in  quoted  value  break;  case  ',':  case  '=':  case  ':':  needsQuotes  =  true;  //  no  need  to  escape  these,  but  value  must  be  quoted  break;  	77	replace-5
137	flink_734ba01d	buggy:  context:  }  if  (current  ==  CANCELED  ||  current  ==  FINISHED)  {  if  (LOG.isDebugEnabled())  {  LOG.debug( "Ignoring  transition  of  vertex  {}  to  {}  while  being  {}. ",  getVertexWithAttempt(),  FAILED,  current);  }  return  false;  }  if  (transitionState(current,  FAILED,  t))  {  this.failureCause  =  t;  try  {  	if  (current  ==  CANCELING)  {  cancelingComplete();  return  false;  }    	800	add
138	flink_dc78a747	buggy:  kryo.setReferences(false);  context:  return  kryo;  }  }  private  void  checkKryoInitialized()  {  if  (this.kryo  ==  null)  {  this.kryo  =  getKryoInstance();  //  disable  reference  tracking.  reference  tracking  is  costly,  usually  unnecessary,  and  //  inconsistent  with  Flink's  own  serialization  (which  does  not  do  reference  tracking)  kryo.setReferences(false);  kryo.addDefaultSerializer(Throwable.class,  new  JavaSerializer());  for  (Map.Entry<Class<?>,  ExecutionConfig.SerializableSerializer<?>>  entry:  defaultSerializers.entrySet())  {  	kryo.setReferences(true);  	332	replace-1
139	flink_8e3e2f8f	buggy:  int  overallStateSize  =  0;  context:  }  public  void  onCompletedCheckpoint(CompletedCheckpoint  checkpoint)  {  if  (taskParallelism.isEmpty())  {  return;  }  synchronized  (statsLock)  {  int  overallStateSize  =  0;  Map<JobVertexID,  long[][]>  statsForSubTasks  =  new  HashMap<>();  for  (StateForTask  state  :  checkpoint.getStates())  {  overallStateSize  +=  state.getStateSize();  	long  overallStateSize  =  0;  	139	replace-1
140	accumulo_4d23d784	buggy:  final  Option  o  =  new  Option(START_ROW_OPT,   "begin-row ",  true,   "begin  row  (NOT)  inclusive ");  context:  final  Option  listOpt  =  new  Option(AdlOpt.LIST.opt,   "list ",  false,   "list   "  +  name  +   "(s) ");  final  OptionGroup  og  =  new  OptionGroup();  og.addOption(addOpt);  og.addOption(deleteOpt);  og.addOption(listOpt);  og.setRequired(true);  return  og;  }  public  static  Option  startRowOpt()  {  final  Option  o  =  new  Option(START_ROW_OPT,   "begin-row ",  true,   "begin  row  (NOT)  inclusive ");  o.setArgName( "begin-row ");  return  o;  }  public  static  Option  endRowOpt()  {  final  Option  o  =  new  Option(END_ROW_OPT,   "end-row ",  true,   "end  row  (inclusive) ");  o.setArgName( "end-row ");  return  o;  	final  Option  o  =  new  Option(START_ROW_OPT,   "begin-row ",  true,   "begin  row  (exclusive) ");  	120	replace-1
141	wicket_d3dc9a50	buggy:  public  static  boolean  isRelative(String  url)  if  ((url  !=  null)  &&  (url.startsWith( "/ ")  ==  false)  &&  (url.indexOf( ":// ")  <  0)  &&  context:  {  }  public  static  boolean  isRelative(String  url)  {  if  ((url  !=  null)  &&  (url.startsWith( "/ ")  ==  false)  &&  (url.indexOf( ":// ")  <  0)  &&  !(url.startsWith( "# ")))  {  return  true;  }  	public  static  boolean  isRelative(final  String  url)  if  ((url  !=  null)  &&  (url.startsWith( "/ ")  ==  false)  &&  (!url.matches( "^\\w+\\:\\/\\/.* "))  &&  	42	replace-2
142	wicket_fd910746	buggy:  if  (formComponent.isVisibleInHierarchy()  &&  formComponent.isValid()  &&  formComponent.isEnabledInHierarchy())  context:  {  Form<?>  form  =  formComponent.getForm();  if  (!form.isVisibleInHierarchy()  ||  !form.isEnabledInHierarchy())  {  visit.dontGoDeeper();  return;  }  if  (formComponent.isVisibleInHierarchy()  &&  formComponent.isValid()  &&  formComponent.isEnabledInHierarchy())  {  validate(formComponent);  }  if  (formComponent.processChildren()  ==  false)  {  visit.dontGoDeeper();  }  	if  (formComponent.isVisibleInHierarchy()  &&  formComponent.isEnabledInHierarchy())  	173	replace-2
143	jackrabbit-oak_ab1a0cc2	buggy:  &&  that.getChildNodeCount(1)  ==  0;  context:  return   "{N/A} ";  }  }  public  boolean  equals(Object  object)  {  if  (object  ==  EMPTY_NODE  ||  object  ==  MISSING_NODE)  {  return  exists  ==  (object  ==  EMPTY_NODE);  }  else  if  (object  instanceof  NodeState)  {  NodeState  that  =  (NodeState)  object;  return  that.getPropertyCount()  ==  0          &&  that.getChildNodeCount(1)  ==  0;  }  else  {  return  false;  }  }  public  int  hashCode()  {  return  0;  	&&  that.getChildNodeCount(1)  ==  0  &&  (exists  ==  that.exists());  	189	replace-1
144	jackrabbit-oak_61c877d8	buggy:  String  ntName  =  checkNotNull(TreeUtil.getPrimaryTypeName(tree));  context:  public  TreePermission  getTreePermission(@Nonnull  ImmutableTree  tree,  @Nonnull  TreePermission  parentPermission)  {  if  (tree.isRoot())  {  return  new  TreePermissionImpl(tree,  TreeTypeProvider.TYPE_DEFAULT,  TreePermission.EMPTY);  }  int  type  =  tree.getType();  switch  (type)  {  case  TreeTypeProvider.TYPE_HIDDEN:  return  TreePermission.ALL;  case  TreeTypeProvider.TYPE_VERSION:      String  ntName  =  checkNotNull(TreeUtil.getPrimaryTypeName(tree));  if  (VersionConstants.VERSION_STORE_NT_NAMES.contains(ntName)  ||  VersionConstants.NT_ACTIVITY.equals(ntName))  {  return  new  TreePermissionImpl(tree,  TreeTypeProvider.TYPE_VERSION,  parentPermission);  }  else  {  ImmutableTree  versionableTree  =  getVersionableTree(tree);  if  (versionableTree  ==  null)  {  	String  ntName  =  TreeUtil.getPrimaryTypeName(tree);  if  (ntName  ==  null)  {  return  TreePermission.EMPTY;  }  	160	replace-1
145	commons-math_6dd3724b	buggy:  return  getCumPct((Comparable<?>)  v);  context:  public  double  getPct(Object  v)  {      return  getCumPct((Comparable<?>)  v);  }  	return  getPct((Comparable<?>)  v);  	303	replace-1
146	wicket_f1c0f263	buggy:  int  dot2Count  =  countToken( ".. ",  path);  context:  return  false;  }  int  slash2Count  =  countToken( "// ",  path);  if  (isOff(ALLOW_2_SLASHES)  &&  (slash2Count  >  0))  {  return  false;  }  int  slashCount  =  countToken( "/ ",  path);  int  dot2Count  =  countToken( ".. ",  path);  if  (dot2Count  >  0)  {  if  ((slashCount  -  slash2Count  -  1)  <=  dot2Count)  {  return  false;  }  }  	int  dot2Count  =  countToken( "/.. ",  path);  	487	replace-1
147	commons-math_334c01e6	buggy:  x1  =  x;  f1  =  fx;  if  (method  ==  Method.ILLINOIS)  {  }  if  (method  ==  Method.PEGASUS)  {  x1  =  x;  f1  =  fx;  context:  }  if  (f1  *  fx  <  0)  {      //  We  had  [x0..x1].  We  update  it  to  [x1,  x].  Note  that  the      //  value  of  x1  has  switched  to  the  other  bound,  thus  inverting  x0  =  x1;  f0  =  f1;      x1  =  x;      f1  =  fx;  inverted  =  !inverted;  }  else  {      //  We  had  [x0..x1].  We  update  it  to  [x0,  x].      if  (method  ==  Method.ILLINOIS)  {  f0  *=  0.5;      }  	switch  (method)  {  case  ILLINOIS:  break;  case  PEGASUS:  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  final  double  delta  =  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  x0  =  0.5  *  (x0  +  x1  -  delta);  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  x1  =  x;  f1  =  fx;  	178	replace-7
148	jackrabbit-oak_36e70bd7	buggy:  revision++;  context:  public  NodeState  getBaseState()  {  return  baseState;  }  public  void  reset(NodeState  newBase)  {  if  (this  ==  root)  {  baseState  =  checkNotNull(newBase);  writeState  =  new  MutableNodeState(baseState);      revision++;  }  else  {  throw  new  IllegalStateException( "Cannot  reset  a  non-root  builder ");  }  }  public  long  getChildNodeCount()  {  return  read().getChildNodeCount();  	revision  =  0;  	268	replace-1
149	camel_06a8489a	buggy:  boolean  isDirectory  =  file.isDirectory();  if  (!isDirectory  &&  file.getName().contains( ". "))  {  throw  new  IllegalArgumentException( "Only  directory  is  supported.  Endpoint  must  be  configured  with  a  valid  starting  directory:   "  +  file);  }  if  (!file.exists()  &&  !isDirectory)  {  context:  super(endpointUri,  component);  this.readLock  =   "markerFile ";  }  public  FileConsumer  createConsumer(Processor  processor)  throws  Exception  {  ObjectHelper.notNull(operations,   "operations ");  ObjectHelper.notNull(file,   "file ");      //  we  assume  its  a  file  if  the  name  has  a  dot  in  it  (eg  foo.txt)      boolean  isDirectory  =  file.isDirectory();      if  (!isDirectory  &&  file.getName().contains( ". "))  {      throw  new  IllegalArgumentException( "Only  directory  is  supported.  Endpoint  must  be  configured  with  a  valid  starting  directory:   "  +  file);      }      if  (!file.exists()  &&  !isDirectory)  {  if  (isAutoCreate())  {  log.debug( "Creating  non  existing  starting  directory:  {} ",  file);  	if  (!file.exists()  &&  !file.isDirectory())  {  	53	replace-6
150	commons-math_d270055e	buggy:  context:  public  Vector3D  intersection(final  SubLine  subLine,  final  boolean  includeEndPoints)  {  Vector3D  v1D  =  line.intersection(subLine.line);  Location  loc1  =  remainingRegion.checkPoint(line.toSubSpace(v1D));  Location  loc2  =  subLine.remainingRegion.checkPoint(subLine.line.toSubSpace(v1D));  	if  (v1D  ==  null)  {  return  null;  }  	114	add
151	jackrabbit-oak_9772f5b2	buggy:  nodeStore.backgroundRead(true);  context:  DocumentMK(Builder  builder)  {  this.nodeStore  =  builder.getNodeStore();  this.store  =  nodeStore.getDocumentStore();  }  public  void  dispose()  {  nodeStore.dispose();  }  void  backgroundRead()  {      nodeStore.backgroundRead(true);  }  void  backgroundWrite()  {  nodeStore.backgroundWrite();  }  void  runBackgroundOperations()  {  nodeStore.runBackgroundOperations();  	nodeStore.backgroundRead();  	130	replace-1
152	commons-math_19c1c3bb	buggy:  context:  final  double[]  c1  =  new  double[]  {  vA.getNormSq(),  vB.getNormSq(),  vC.getNormSq(),  vD.getNormSq()  };  final  double[]  c2  =  new  double[]  {  vA.getX(),  vB.getX(),  vC.getX(),  vD.getX()  };  final  double[]  c3  =  new  double[]  {  vA.getY(),  vB.getY(),  vC.getY(),  vD.getY()  };  final  double[]  c4  =  new  double[]  {  	  	92	add
153	logging-log4j2_7bb1ad47	buggy:  if  (throwable  ==  null  &&  params  !=  null  &&  params[params.length  -  1]  instanceof  Throwable)  {  context:  if  (showContextMap)  {  final  Map<String,  String>  mdc  =  ThreadContext.getContext();  if  (mdc.size()  >  0)  {  sb.append(SPACE);  sb.append(mdc.toString());  sb.append(SPACE);  }  }  final  Object[]  params  =  msg.getParameters();  Throwable  t;      if  (throwable  ==  null  &&  params  !=  null  &&  params[params.length  -  1]  instanceof  Throwable)  {  t  =  (Throwable)  params[params.length  -  1];  }  else  {  t  =  throwable;  }  if  (t  !=  null)  {  sb.append(SPACE);  final  ByteArrayOutputStream  baos  =  new  ByteArrayOutputStream();  t.printStackTrace(new  PrintStream(baos));  	if  (throwable  ==  null  &&  params  !=  null  &&  params.length  >  0  &&  params[params.length  -  1]  instanceof  Throwable)  {  	157	replace-1
154	wicket_faaae8d3	buggy:  context:  else  if  (urlStartsWith(request.getClientUrl(),  namespace,  pageIdentifier)  &&  urlStartsWith(url,  pageIdentifier))  {  matches  =  true;  }  else  if  (urlStartsWith(request.getClientUrl(),  pageIdentifier)  &&  urlStartsWith(url,  pageIdentifier))  {  matches  =  true;  }  return  matches;  }  }  	else  if  (baseUrl.getSegments().size()  ==  2  &&  urlStartsWith(baseUrl,  bookmarkableIdentifier)  &&  url.getSegments().size()  ==  2  &&  urlStartsWith(url,  bookmarkableIdentifier))  {  matches  =  true;  }  	194	add
155	logging-log4j2_88641f49	buggy:  int  begin  =  i;  int  next  =  pattern.indexOf( "{ ",  i  +  1);  context:  private  static  int  extractOptions(String  pattern,  int  i,  List<String>  options)  {  while  ((i  <  pattern.length())  &&  (pattern.charAt(i)  ==  '{'))  {      int  begin  =  i;  int  end;  int  depth  =  0;  do  {  end  =  pattern.indexOf('}',  i);  if  (end  !=  -1)  {          int  next  =  pattern.indexOf( "{ ",  i  +  1);  if  (next  !=  -1  &&  next  <  end)  {  	int  begin  =  i++;  int  next  =  pattern.indexOf( "{ ",  i);  	213	replace-2
156	accumulo_dc95cb69	buggy:  if  (sp.length  !=  2)  {  String  extension  =  sp[1];  context:  class  DispatchingFileFactory  extends  FileOperations  {  private  FileOperations  findFileFactory(String  file)  {  Path  p  =  new  Path(file);  String  name  =  p.getName();  if  (name.startsWith(Constants.MAPFILE_EXTENSION  +   "_ "))  {  return  new  MapFileOperations();  }  String[]  sp  =  name.split( "\\. ");  if  (sp.length  !=  2)  {  throw  new  IllegalArgumentException( "File  name   "  +  name  +   "  has  no  extension ");  }  String  extension  =  sp[1];  	if  (sp.length  <  2)  {  String  extension  =  sp[sp.length  -  1];  	47	replace-3
157	jackrabbit-oak_429baf4d	buggy:  return  POLICY_NODE_NAMES.contains(name)  ||  REP_PERMISSION_STORE.equals(name);  context:  public  boolean  definesProperty(@Nonnull  Tree  parent,  @Nonnull  PropertyState  property)  {  return  definesTree(parent);  }  public  boolean  definesContextRoot(@Nonnull  Tree  tree)  {  String  name  =  tree.getName();      return  POLICY_NODE_NAMES.contains(name)  ||  REP_PERMISSION_STORE.equals(name);  }  public  boolean  definesTree(@Nonnull  Tree  tree)  {  	if  (POLICY_NODE_NAMES.contains(name))  {  return  NT_REP_ACL.equals(TreeUtil.getPrimaryTypeName(tree));  }  else  {  return  REP_PERMISSION_STORE.equals(name);  }  	50	replace-1
158	wicket_9a6a06be	buggy:  return   "ValidationErrorFeedback{ "  +   "message= "  +  message  +  '}';  context:  public  Serializable  getMessage()  {  return  message;  }  public  String  toString()  {  return   "ValidationErrorFeedback{ "  +   "message= "  +  message  +  '}';  }  }  	return  message  !=  null  ?  message.toString()  :   " ";  	81	replace-3
159	jackrabbit-oak_275eca83	buggy:  cp.setProperty( "timestamp ",  now  +  lifetime);  context:  for  (String  n  :  checkpoints.getChildNodeNames())  {  NodeBuilder  cp  =  checkpoints.getChildNode(n);  PropertyState  ts  =  cp.getProperty( "timestamp ");  if  (ts  ==  null  ||  ts.getType()  !=  LONG  ||  now  >  ts.getValue(LONG))  {  cp.remove();  }  }  NodeBuilder  cp  =  checkpoints.child(name);      cp.setProperty( "timestamp ",  now  +  lifetime);  cp.setProperty( "created ",  now);  NodeBuilder  props  =  cp.setChildNode( "properties ");  for  (Entry<String,  String>  p  :  properties.entrySet())  {  	if  (Long.MAX_VALUE  -  now  >  lifetime)  {  cp.setProperty( "timestamp ",  now  +  lifetime);  }  else  {  cp.setProperty( "timestamp ",  Long.MAX_VALUE);  }  	419	replace-1
160	wicket_38e928c1	buggy:  component.renderHead(headerContainer);  context:  Args.notNull(headerContainer,   "headerContainer ");  Args.notNull(rootComponent,   "rootComponent ");  if  (rootComponent  instanceof  MarkupContainer)  {  new  DeepChildFirstVisitor()  {  public  void  component(final  Component  component,  final  IVisit<Void>  visit)  {  component.renderHead(headerContainer);  }  public  boolean  preCheck(Component  component)  {  	if  (component  !=  rootComponent)  {  component.renderHead(headerContainer);  }  	83	replace-1
161	jackrabbit-oak_94110f21	buggy:  credentials.setAttribute(e.getClass().getName(),  e.getMessage());  context:  root.commit();  log.debug( "User   "  +  userId  +   ":  changed  user  password ");  return  true;  }  else  {  log.warn( "Aborted  password  change  for  user   "  +  userId  }  }  }  catch  (PasswordHistoryException  e)  {      credentials.setAttribute(e.getClass().getName(),  e.getMessage());  log.error( "Failed  to  change  password  for  user   "  +  userId,  e.getMessage());  }  catch  (RepositoryException  e)  {  log.error( "Failed  to  change  password  for  user   "  +  userId,  e.getMessage());  }  catch  (CommitFailedException  e)  {  root.refresh();  log.error( "Failed  to  change  password  for  user   "  +  userId,  e.getMessage());  }  return  false;  	credentials.setAttribute(e.getClass().getSimpleName(),  e.getMessage());  	172	replace-1
162	jackrabbit-oak_8ed779dc	buggy:  String  childName  =  getOakName(PathUtils.getName(relPath));  NodeDefinition  def  =  dp.getDefinition(parent.getTree(),  childName);  context:  throw  new  PathNotFoundException(relPath);  }  if  (parent.getChild(oakName)  !=  null)  {  throw  new  ItemExistsException(relPath);  }  String  ntName  =  primaryNodeTypeName;  if  (ntName  ==  null)  {  DefinitionProvider  dp  =  getDefinitionProvider();          String  childName  =  getOakName(PathUtils.getName(relPath));          NodeDefinition  def  =  dp.getDefinition(parent.getTree(),  childName);  ntName  =  def.getDefaultPrimaryTypeName();  if  (ntName  ==  null)  {  throw  new  ConstraintViolationException(   "no  matching  child  node  definition  found  for   "  +  relPath);  }  }  	NodeDefinition  def  =  dp.getDefinition(parent.getTree(),  oakName);  	243	replace-2
163	jackrabbit-oak_c91bfa54	buggy:  if(dr  !=  null  &&  dr.getLastModified()  <  maxLastModifiedTime){  context:  return  0;  }  public  Iterator<String>  getAllChunkIds(final  long  maxLastModifiedTime)  throws  Exception  {  return  transform(filter(delegate.getAllIdentifiers(),  new  Predicate<DataIdentifier>()  {  public  boolean  apply(DataIdentifier  input)  {  try  {  DataRecord  dr  =  delegate.getRecord(input);          if(dr  !=  null  &&  dr.getLastModified()  <  maxLastModifiedTime){  return  true;  }  }  catch  (DataStoreException  e)  {  log.warn( "Error  occurred  while  fetching  DataRecord  for  identifier  {} ",input,  e);  }  return  false;  }  	if(dr  !=  null  &&  (maxLastModifiedTime  <=0  ||  dr.getLastModified()  <  maxLastModifiedTime)){  	270	replace-1
164	commons-math_645d642b	buggy:  private  static  final  long  serialVersionUID  =  20110928L;  context:  class  EulerStepInterpolator  extends  RungeKuttaStepInterpolator  {    private  static  final  long  serialVersionUID  =  20110928L;  	private  static  final  long  serialVersionUID  =  20111120L;  	45	replace-1
165	flink_a56aad74	buggy:  private  boolean  isReleased;  context:  final  IOMode  ioMode;  BufferFileWriter  spillWriter;  private  boolean  isFinished;  private  boolean  isReleased;  private  ResultSubpartitionView  readView;  SpillableSubpartition(int  index,  ResultPartition  parent,  IOManager  ioManager,  IOMode  ioMode)  {  super(index,  parent);  this.ioManager  =  checkNotNull(ioManager);  	boolean  isReleased;  	62	replace-1
166	wicket_2624d2db	buggy:  private  static  final  String  emailPattern  =   "[\\w\\.-\\\\+]+@[\\w\\.-]+ ";  context:  public  class  DefaultLinkParser  extends  LinkParser  {  private  static  final  String  emailPattern  =   "[\\w\\.-\\\\+]+@[\\w\\.-]+ ";  private  static  final  String  urlPattern  =   "([a-zA-Z]+://[\\w\\.\\-\\:\\/~]+)[\\w\\.:\\-/?&=%]* ";  	private  static  final  String  emailPattern  =   "[\\w\\.\\-\\\\+]+@[\\w\\.\\-]+ ";  	32	replace-1
167	commons-math_fb007815	buggy:  int  swaps  =  0;  context:  tiedXPairs  +=  sum(consecutiveXTies  -  1);  consecutiveXTies  =  1;  tiedXYPairs  +=  sum(consecutiveXYTies  -  1);  consecutiveXYTies  =  1;  }  prev  =  curr;  }  tiedXPairs  +=  sum(consecutiveXTies  -  1);  tiedXYPairs  +=  sum(consecutiveXYTies  -  1);      int  swaps  =  0;  Pair<Double,  Double>[]  pairsDestination  =  new  Pair[n];  for  (int  segmentSize  =  1;  segmentSize  <  n;  segmentSize  <<=  1)  {  for  (int  offset  =  0;  offset  <  n;  offset  +=  2  *  segmentSize)  {  int  i  =  offset;  final  int  iEnd  =  FastMath.min(i  +  segmentSize,  n);  int  j  =  iEnd;  final  int  jEnd  =  FastMath.min(j  +  segmentSize,  n);  	long  swaps  =  0;  	204	replace-1
168	camel_6641f182	buggy:  private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^/^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*> ";  context:  public  class  TokenXMLExpressionIterator  extends  ExpressionAdapter  {  private  static  final  Pattern  NAMESPACE_PATTERN  =  Pattern.compile( "xmlns(:\\w+|)\\s*=\\s*('[^']+'|\ "[^\ "]+\ ") ");  private  static  final  String  SCAN_TOKEN_NS_PREFIX_REGEX  =   "([^:<>]{1,15}?:|) ";  private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^/^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*> ";  private  static  final  String  SCAN_PARENT_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^>]*\\s*)?> ";  protected  final  String  tagToken;  protected  final  String  inheritNamespaceToken;  public  TokenXMLExpressionIterator(String  tagToken,  String  inheritNamespaceToken)  {  ObjectHelper.notEmpty(tagToken,   "tagToken ");  this.tagToken  =  tagToken;  	private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^>]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*> ";  	50	replace-1
169	logging-log4j2_2d7d6311	buggy:  context:  public  Result  filter(final  Logger  logger,  final  Level  level,  final  Marker  marker,  final  String  msg,  final  Object...  params)  {  return  filter(msg);  }  public  Result  filter(final  Logger  logger,  final  Level  level,  final  Marker  marker,  final  Object  msg,  final  Throwable  t)  {  return  filter(msg.toString());  }  public  Result  filter(final  Logger  logger,  final  Level  level,  final  Marker  marker,  final  Message  msg,  final  Throwable  t)  {  	if  (msg  ==  null)  {  return  onMismatch;  }  if  (msg  ==  null)  {  return  onMismatch;  }  	60	add
170	jackrabbit-oak_7fe28a0e	buggy:  context:  public  PropertyDelegate  setProperty(String  name,  CoreValue  value)  throws  InvalidItemStateException  {  PropertyState  propertyState  =  getTree().setProperty(name,  value);  return  new  PropertyDelegate(sessionDelegate,  getTree(),  propertyState);  }  	public  void  removeProperty(String  name)  throws  InvalidItemStateException  {  getTree().removeProperty(name);  }    	294	add
171	camel_b9094cb5	buggy:  ServiceHelper.stopServices(deadLetter,  output,  outputAsync);  context:  throw  new  IllegalArgumentException( "ExecutorServiceRef   "  +  executorServiceRef  +   "  not  found  in  registry. ");  }  }  else  {  executorService  =  camelContext.getExecutorServiceStrategy().newScheduledThreadPool(this,   "ErrorHandlerRedeliveryTask ");  }  }  }  protected  void  doStop()  throws  Exception  {      ServiceHelper.stopServices(deadLetter,  output,  outputAsync);  }  	@Override  protected  void  doShutdown()  throws  Exception  {  ServiceHelper.stopServices(deadLetter,  output,  outputAsync);  }  	843	replace-1
172	maven_3fca2bb2	buggy:  context:  return  fields;  }  private  boolean  isQualifiedForInterpolation(  Class<?>  cls  )  {  return  !cls.getName().startsWith(   "java "  );  }  private  boolean  isQualifiedForInterpolation(  Field  field,  Class<?>  fieldType  )  {  Boolean  primitive  =  fieldIsPrimitiveByClass.get(  fieldType  );  if  (  primitive  ==  null  )  {  primitive  =  fieldType.isPrimitive();  fieldIsPrimitiveByClass.put(  fieldType,  primitive  );  	if  (  Map.class.equals(  fieldType  )  &&   "locations ".equals(  field.getName()  )  )  {  return  false;  }    	327	add
173	jackrabbit-oak_25850476	buggy:  int  slashIdx  =  splitId.lastIndexOf('/');  int  height  =  Integer.parseInt(splitId.substring(slashIdx  +  1));  splitId.substring(splitId.lastIndexOf('/',  slashIdx  -  1)  +  1,  slashIdx));  LOG.warn( "Split  document  {}  not  referenced  anymore.  Main  document  is  {} ",  splitId,  mainId);  context:  private  void  disconnect(NodeDocument  splitDoc)  {  String  splitId  =  splitDoc.getId();  String  mainId  =  Utils.getIdFromPath(splitDoc.getMainPath());  NodeDocument  doc  =  store.find(NODES,  mainId);  if  (doc  ==  null)  {  LOG.warn( "Main  document  {}  already  removed.  Split  document  is  {} ",  mainId,  splitId);  return;  }      int  slashIdx  =  splitId.lastIndexOf('/');      int  height  =  Integer.parseInt(splitId.substring(slashIdx  +  1));  Revision  rev  =  Revision.fromString(      splitId.substring(splitId.lastIndexOf('/',  slashIdx  -  1)  +  1,  slashIdx));  doc  =  doc.findPrevReferencingDoc(rev,  height);  	  String  splitDocPath  =  splitDoc.getPath();  int  slashIdx  =  splitDocPath.lastIndexOf('/');  int  height  =  Integer.parseInt(splitDocPath.substring(slashIdx  +  1));  splitDocPath.substring(splitDocPath.lastIndexOf('/',  slashIdx  -  1)  +  1,  slashIdx));  LOG.warn( "Split  document  {}  for  path  {}  not  referenced  anymore.  Main  document  is  {} ",  splitId,  splitDocPath,  mainId);  	82	replace-5
174	jackrabbit-oak_ca63fdf3	buggy:  context:  source.getRepositoryConfig().getDefaultWorkspaceName();  SecurityProviderImpl  security  =  new  SecurityProviderImpl(  mapSecurityConfig(config.getSecurityConfig()));  new  InitialContent().initialize(builder);  if  (initializer  !=  null)  {  initializer.initialize(builder);  }  for  (SecurityConfiguration  sc  :  security.getConfigurations())  {  sc.getWorkspaceInitializer().initialize(builder,  workspaceName);  }  HashBiMap<String,  String>  uriToPrefix  =  HashBiMap.create();  Map<Integer,  String>  idxToPrefix  =  newHashMap();  copyNamespaces(builder,  uriToPrefix,  idxToPrefix);  copyNodeTypes(builder,  uriToPrefix.inverse());  	sc.getRepositoryInitializer().initialize(builder);  }  for  (SecurityConfiguration  sc  :  security.getConfigurations())  {  	260	add
175	wicket_e1168a57	buggy:  return  false;  return  true;  context:  {  if  (userAgent.contains(value))  {  return  false;  }  }  }  for  (List<String>  detectionGroup  :  detectionStrings)  {  for  (String  detectionString  :  detectionGroup)  {  if  (!userAgent.contains(detectionString))  {  return  false;  }  }  	boolean  groupPassed  =  true;  groupPassed  =  false;  break;  if  (groupPassed)  {  return  true;  }  	99	replace-3
176	wicket_089303f4	buggy:  context:  lastRenderedPage  =  generateLastRenderedPage(cycle);  MockHttpServletRequest  newHttpRequest  =  new  MockHttpServletRequest(application,  servletSession,  application.getServletContext());  newHttpRequest.setRequestToRedirectString(httpResponse.getRedirectLocation());  wicketRequest  =  application.newWebRequest(newHttpRequest);  cycle  =  createRequestCycle();  cycle.request();  }  	else  {  String  url  =  httpResponse.getHeader( "Ajax-Location ");  if  (url  !=  null)  {  MockHttpServletRequest  newHttpRequest  =  new  MockHttpServletRequest(application,  servletSession,  application.getServletContext());  newHttpRequest.setRequestToRedirectString(url);  wicketRequest  =  application.newWebRequest(newHttpRequest);    cycle  =  createRequestCycle();  cycle.request();  }  }    	547	add
177	jackrabbit-oak_6d82cb64	buggy:  context:  public  static  int  getDepth(String  path)  {  assert  isValid(path);  int  count  =  1,  i  =  0;  if  (isAbsolutePath(path))  {  if  (denotesRootPath(path))  {  return  0;  }  i++;  }  	if  (path.isEmpty())  {  return  0;  }  	188	add
178	jackrabbit-oak_9c2421ed	buggy:  context:  UpdateOp  update  =  new  UpdateOp(Integer.toString(clusterId),  true);  update.set(ClusterNodeInfo.REV_RECOVERY_LOCK,  RecoverLockState.ACQUIRED.name());  store.createOrUpdate(Collection.CLUSTER_NODES,  update);  return  true;  }  public  void  releaseRecoveryLock(int  clusterId){  UpdateOp  update  =  new  UpdateOp(Integer.toString(clusterId),  true);  update.set(ClusterNodeInfo.REV_RECOVERY_LOCK,  null);  store.createOrUpdate(Collection.CLUSTER_NODES,  update);  }  public  NodeDocument  getRoot()  {  return  store.find(Collection.NODES,  Utils.getIdFromPath(ROOT_PATH));  }  public  boolean  isRecoveryNeeded(long  currentTime)  {  for(ClusterNodeInfoDocument  nodeInfo  :  getAllClusters()){  	update.set(ClusterNodeInfo.STATE,  null);  	97	add
179	wicket_ecdfc124	buggy:  ||  (!isAjax(cycle)  &&  ((isOnePassRender()  &&  notForcedRedirect(getRedirectPolicy()))  ||  (targetUrl  isPageStateless()))))  ||  (targetUrl.equals(currentUrl)  &&  isRedirectToRender())  context:  }  protected  boolean  shouldRenderPageAndWriteResponse(RequestCycle  cycle,  Url  currentUrl,  Url  targetUrl)  {  return  neverRedirect(getRedirectPolicy())  ||  (!isAjax(cycle)  &&  ((isOnePassRender()  &&  notForcedRedirect(getRedirectPolicy()))  ||  (targetUrl  .equals(currentUrl)  &&  notNewAndNotStatelessPage(isNewPageInstance(),  isPageStateless()))))  ||  (targetUrl.equals(currentUrl)  &&  isRedirectToRender())  	if  (isAjax(cycle))  {  return  false;  }    ||  ((isOnePassRender()  &&  notForcedRedirect(getRedirectPolicy()))  ||  (targetUrl  isPageStateless())))  ||  (targetUrl.equals(currentUrl)  &&  isRedirectToRender())  	336	replace-2
180	camel_37e0e6bb	buggy:  return  prepend  +   "[Body  is  file  based:   "  +  obj  +   "] ";  context:  return  prepend  +   "[Body  is  instance  of  org.apache.camel.StreamCache] ";  }  else  if  (obj  instanceof  InputStream)  {  return  prepend  +   "[Body  is  instance  of  java.io.InputStream] ";  }  else  if  (obj  instanceof  OutputStream)  {  return  prepend  +   "[Body  is  instance  of  java.io.OutputStream] ";  }  else  if  (obj  instanceof  Reader)  {  return  prepend  +   "[Body  is  instance  of  java.io.Reader] ";  }  else  if  (obj  instanceof  Writer)  {  return  prepend  +   "[Body  is  instance  of  java.io.Writer] ";  }  else  if  (obj  instanceof  WrappedFile  ||  obj  instanceof  File)  {      return  prepend  +   "[Body  is  file  based:   "  +  obj  +   "] ";  }  }  if  (!allowFiles)  {  if  (obj  instanceof  WrappedFile  ||  obj  instanceof  File)  {  return  prepend  +   "[Body  is  file  based:   "  +  obj  +   "] ";  	if  (!allowFiles)  {  return  prepend  +   "[Body  is  file  based:   "  +  obj  +   "] ";  }  	226	replace-1
181	camel_b56d2962	buggy:  doAggregation(key,  exchange);  context:  }  }  if  (closedCorrelationKeys  !=  null  &&  closedCorrelationKeys.containsKey(key))  {  throw  new  ClosedCorrelationKeyException(key,  exchange);  }  lock.lock();  try  {      doAggregation(key,  exchange);  }  finally  {  	Exchange  copy  =  ExchangeHelper.createCorrelatedCopy(exchange,  false);    doAggregation(key,  copy);  	182	replace-1
182	wicket_2737d7c7	buggy:  return  new  WebMarkupContainer(id);  context:  protected  WebMarkupContainer  newBodyContainer(final  String  id)  {  return  new  WebMarkupContainer(id);  	return  new  WebMarkupContainer(id)  {  @Override  protected  void  onConfigure()  {  super.onConfigure();  setVisible(getRowCount()  >  0);  }  };  	207	replace-1
183	wicket_3fc7234e	buggy:  continue;  if  ((i  +  1)  <  segments.size()  &&   ".. ".equals(segments.get(i  +  1)))  continue;  url.segments.add(segment);  context:  Url  url  =  new  Url(this);  url.segments.clear();  for  (int  i  =  0;  i  <  segments.size();  i++)  {  final  String  segment  =  segments.get(i);  if  ( ". ".equals(segment))  {  continue;  }  if  ((i  +  1)  <  segments.size()  &&   ".. ".equals(segments.get(i  +  1)))  	}  else  if  ( ".. ".equals(segment)  &&  url.segments.isEmpty()  ==  false)  {  url.segments.remove(url.segments.size()  -  1);  else  if  ((i  +  1)  <  segments.size()  &&   ".. ".equals(segments.get(i  +  1)))  else  {  url.segments.add(segment);  }  	1222	replace-6
184	wicket_55eb5212	buggy:  context:  final  Response  originalResponse  =  requestCycle.getResponse();  BufferedWebResponse  tempResponse  =  new  BufferedWebResponse(null);  try  {  requestCycle.setResponse(tempResponse);  RenderPage  page  =  new  RenderPage();  page.add(component);  component.render();  }  finally  {  requestCycle.setResponse(originalResponse);  }  return  tempResponse.getText();  	page.internalInitialize();  	103	add
185	jackrabbit-oak_913c2f53	buggy:  context:  private  volatile  List<TarReader>  readers;  private  int  writeNumber;  private  File  writeFile;  private  TarWriter  writer;  	boolean  wasCompacted(SegmentId  id)  {  long  msb  =  id.getMostSignificantBits();  long  lsb  =  id.getLeastSignificantBits();  return  findEntry(msb,  lsb)  !=  -1;  }    	103	add
186	maven_24db0eb9	buggy:  nearest.getArtifact().setScope(  farthest.getArtifact().getScope()  );  farthest.disable();  context:  else  {  nearest  =  node;  farthest  =  previous;  }  if  (  checkScopeUpdate(  farthest,  nearest,  listeners  )  )  {  fireEvent(  ResolutionListener.UPDATE_SCOPE,  listeners,  nearest,  farthest.getArtifact()  );          //  previously  we  cloned  the  artifact,  but  it  is  more  effecient  to  just  update  the  scope          //  if  problems  are  later  discovered  that  the  original  object  needs  its  original  scope  value,  cloning  may          //  again  be  appropriate          nearest.getArtifact().setScope(  farthest.getArtifact().getScope()  );  	nearest.disable();  farthest.getArtifact().setVersion(  nearest.getArtifact().getVersion()  );  }  else  {  farthest.disable();  	204	replace-3
187	jackrabbit-oak_ecc5bdfd	buggy:  context:  StringBuilder  buff  =  new  StringBuilder();  if  (relativePath  ==  null  &&  propertyName  !=  null)  {  PropertyValue  p  =  selector.currentProperty(propertyName);  if  (p  ==  null)  {  return  false;  }  appendString(buff,  p);  }  else  {  String  path  =  selector.currentPath();  if  (relativePath  !=  null)  {  path  =  PathUtils.concat(path,  relativePath);  }  Tree  tree  =  getTree(path);  if  (tree  ==  null  ||  !tree.exists())  {  	if  (!PathUtils.denotesRoot(path))  {  appendString(buff,  PropertyValues.newString(PathUtils.getName(path)));  }  	187	add
188	flink_494212b3	buggy:      return  getClass().getSimpleName()  +  try  (ByteArrayOutputStream  baos  =  new  ByteArrayOutputStream();  int  bytesRead  =  in.read(buffer);  if  (bytesRead  !=  size)  {  throw  new  RuntimeException( "Read  size  does  not  match  expected  size. ");  }  context:  private  TypeSerializer<T>  serializer;  private  transient  T  defaultValue;  private  transient  TypeInformation<T>  typeInfo;    *  	                return  getClass().getSimpleName()  +  try  (ByteArrayOutputStream  baos  =  new  ByteArrayOutputStream();    in.readFully(buffer);  	64	replace-14
189	accumulo_a2c2d38a	buggy:  if  (buffer.hasArray())  {  offset  =  buffer.arrayOffset();  context:  public  static  class  Reader  {  int  offset;  byte  data[];  public  Reader(byte  b[])  {  this.data  =  b;  }  public  Reader(ByteBuffer  buffer)  {    if  (buffer.hasArray())  {      offset  =  buffer.arrayOffset();  data  =  buffer.array();  }  else  {  data  =  new  byte[buffer.remaining()];  buffer.get(data);  }  }  	if  (buffer.hasArray()  &&  buffer.array().length  ==  buffer.arrayOffset()  +  buffer.limit())  {  offset  =  buffer.arrayOffset()  +  buffer.position();  	121	replace-2
190	accumulo_b007b22e	buggy:  if  (combiners.isEmpty()  ||  combiners.contains(workKey))  {  context:    *  in  the  set  of  combiners,  topKey  will  be  the  top  key  of  the  source  and  topValue  will  be  the  result  of  the  reduce  method.  Otherwise,  topKey  and  topValue  will    *  be  null.  private  void  findTop()  throws  IOException  {  if  (super.hasTop())  {  workKey.set(super.getTopKey());    if  (combiners.isEmpty()  ||  combiners.contains(workKey))  {  if  (workKey.isDeleted())  return;  topKey  =  workKey;  Iterator<Value>  viter  =  new  ValueIterator(getSource());  topValue  =  reduce(topKey,  viter);  while  (viter.hasNext())  viter.next();  }  	if  (combiners.contains(workKey))  {  	166	replace-1
191	logging-log4j2_09175c8b	buggy:  return   "text/html ";  context:  public  Map<String,  String>  getContentFormat()  {  return  new  HashMap<String,  String>();  }  public  String  getContentType()  {      return   "text/html ";  }  private  void  appendThrowableAsHTML(final  Throwable  throwable,  final  StringBuilder  sbuf)  {  final  StringWriter  sw  =  new  StringWriter();  final  PrintWriter  pw  =  new  PrintWriter(sw);  try  {  throwable.printStackTrace(pw);  }  catch  (final  RuntimeException  ex)  {  	return   "text/html;  charset= "  +  this.getCharset();  	211	replace-1
192	wicket_a88882f7	buggy:  if  (!relative.getSegments().isEmpty()  &&   ". ".equals(relative.getSegments().get(0)))  {  relative.getSegments().remove(0);  }  while  (!relative.getSegments().isEmpty()  &&   ".. ".equals(relative.getSegments().get(0)))  relative.getSegments().remove(0);  getSegments().remove(getSegments().size()  -  1);  context:  public  void  resolveRelative(final  Url  relative)  {  if  (getSegments().size()  >  0)  {  getSegments().remove(getSegments().size()  -  1);  }  //  remove  all  './'  (current  folder)  from  the  relative  url  if  (!relative.getSegments().isEmpty()  &&   ". ".equals(relative.getSegments().get(0)))  {  relative.getSegments().remove(0);  }  //  process  any  ../  segments  in  the  relative  url  while  (!relative.getSegments().isEmpty()  &&   ".. ".equals(relative.getSegments().get(0)))  	while  (!relative.getSegments().isEmpty())  if  ( ". ".equals(relative.getSegments().get(0)))  {  relative.getSegments().remove(0);  }  else  if  ( " ".equals(relative.getSegments().get(0)))  {  relative.getSegments().remove(0);  }  else  if  ( ".. ".equals(relative.getSegments().get(0)))  {  relative.getSegments().remove(0);  getSegments().remove(getSegments().size()  -  1);  }  else  {  break;  }  	993	replace-7
193	maven_bef7fac6	buggy:  session.setProjects(  projectDependencyGraph.getSortedProjects()  );    context:  validateProjects(  projects  );  ProjectDependencyGraph  projectDependencyGraph  =  createProjectDependencyGraph(  projects,  request,  result,  true  );      session.setProjects(  projectDependencyGraph.getSortedProjects()  );  if  (  result.hasExceptions()  )  {  return  result;  }  try  	session.setProjects(  projectDependencyGraph.getSortedProjects()  );    	270	replace-2
194	wicket_afc7034d	buggy:  value  =  Args.notEmpty(value,   "value ").trim();  context:  public  void  addHeader(String  name,  String  value)  {  value  =  Args.notEmpty(value,   "value ").trim();  internalAdd(name,  value);  }  	value  =  Args.notNull(value,   "value ").trim();  	102	replace-1
195	wicket_8ee095bf	buggy:  package  org.apache.wicket.request.target.component;    public  class  BookmarkableListenerInterfaceRequestTarget  extends  BookmarkablePageRequestTarget  {  private  final  String  componentPath;  private  final  String  interfaceName;  public  BookmarkableListenerInterfaceRequestTarget(String  pageMapName,  Class<?  extends  Page>  pageClass,  PageParameters  pageParameters,  String  componentPath,  String  interfaceName,  int  versionNumber)  {  super(pageMapName,  pageClass,  pageParameters);  this.componentPath  =  componentPath;  this.interfaceName  =  interfaceName;  }  public  BookmarkableListenerInterfaceRequestTarget(String  pageMapName,  Class<?  extends  Page>  pageClass,  PageParameters  pageParameters,  Component  component,  RequestListenerInterface  listenerInterface)  {  this(pageMapName,  pageClass,  pageParameters,  component.getPath(),  listenerInterface.getName(),  component.getPage().getCurrentVersionNumber());  int  version  =  component.getPage().getCurrentVersionNumber();  setPage(component.getPage());  AppendingStringBuffer  param  =  new  AppendingStringBuffer(4  +  componentPath.length()  +  interfaceName.length());  if  (pageMapName  !=  null)  {  param.append(pageMapName);  }  param.append(Component.PATH_SEPARATOR);  param.append(getComponentPath());  param.append(Component.PATH_SEPARATOR);  if  (version  !=  0)  {  param.append(version);  }  param.append(Component.PATH_SEPARATOR);  param.append(getInterfaceName());  param.append(Component.PATH_SEPARATOR);  param.append(Component.PATH_SEPARATOR);  pageParameters.put(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME,  param.toString());  }  @Override  public  void  processEvents(RequestCycle  requestCycle)  {  Page  page  =  getPage();  if  (page  ==  null)  {  page  =  Session.get().getPage(getPageMapName(),  componentPath,  -1);  if  (page  !=  null)  {  setPage(page);  }  else  if  (page  ==  null)  {  page  =  getPage(requestCycle);  }  }  if  (page  ==  null)  {  throw  new  PageExpiredException(   "Request  cannot  be  processed.  The  target  page  does  not  exist  anymore. ");  }  final  String  pageRelativeComponentPath  =  Strings.afterFirstPathComponent(componentPath,  Component.PATH_SEPARATOR);  Component  component  =  page.get(pageRelativeComponentPath);  if  (component  ==  null)  {  page.prepareForRender(false);  component  =  page.get(pageRelativeComponentPath);  if  (component  ==  null)  {  throw  new  WicketRuntimeException(   "unable  to  find  component  with  path   "  +  pageRelativeComponentPath  +   "  on  stateless  page   "  +  page  +   "  it  could  be  that  the  component  is  inside  a  repeater  make  your  component  return  false  in  getStatelessHint() ");  }  }  RequestListenerInterface  listenerInterface  =  RequestListenerInterface.forName(interfaceName);  if  (listenerInterface  ==  null)  {  throw  new  WicketRuntimeException( "unable  to  find  listener  interface   "  +  interfaceName);  }  listenerInterface.invoke(page,  component);  }  @Override  public  void  respond(RequestCycle  requestCycle)  {  Page  page  =  getPage(requestCycle);  if  (requestCycle.isRedirect()  &&  !page.isPageStateless())  {  requestCycle.redirectTo(page);  }  else  {  page.renderPage();  }  }  public  String  getComponentPath()  {  return  componentPath;  }  public  String  getInterfaceName()  {  return  interfaceName;  }  }  context:  *  the  License.  You  may  obtain  a  copy  of  the  License  at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless  required  by  applicable  law  or  agreed  to  in  writing,  software  *  distributed  under  the  License  is  distributed  on  an   "AS  IS "  BASIS,  *  WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either  express  or  implied.  *  See  the  License  for  the  specific  language  governing  permissions  and  *  limitations  under  the  License.  */  package  org.apache.wicket.request.target.component;  import  org.apache.wicket.Component;  import  org.apache.wicket.Page;  import  org.apache.wicket.PageParameters;  import  org.apache.wicket.RequestCycle;  import  org.apache.wicket.RequestListenerInterface;  import  org.apache.wicket.Session;  import  org.apache.wicket.WicketRuntimeException;  import  org.apache.wicket.protocol.http.PageExpiredException;  	package  org.apache.wicket.request.target.component;      public  class  BookmarkableListenerInterfaceRequestTarget  extends  BookmarkablePageRequestTarget  {  private  final  String  componentPath;  private  final  String  interfaceName;    public  BookmarkableListenerInterfaceRequestTarget(String  pageMapName,  Class<?  extends  Page>  pageClass,  PageParameters  pageParameters,  String  componentPath,  String  interfaceName,  int  versionNumber)  {  super(pageMapName,  pageClass,  pageParameters);  this.componentPath  =  componentPath;  this.interfaceName  =  interfaceName;  }    public  BookmarkableListenerInterfaceRequestTarget(String  pageMapName,  Class<?  extends  Page>  pageClass,  PageParameters  pageParameters,  Component  component,  RequestListenerInterface  listenerInterface)  {  this(pageMapName,  pageClass,  pageParameters,  component.getPath(),  listenerInterface.getName(),  component.getPage().getCurrentVersionNumber());    int  version  =  component.getPage().getCurrentVersionNumber();  setPage(component.getPage());    AppendingStringBuffer  param  =  new  AppendingStringBuffer(4  +  componentPath.length()  +  interfaceName.length());  if  (pageMapName  !=  null)  {  param.append(pageMapName);  }  param.append(Component.PATH_SEPARATOR);  param.append(getComponentPath());  param.append(Component.PATH_SEPARATOR);  if  (version  !=  0)  {  param.append(version);  }  param.append(Component.PATH_SEPARATOR);  param.append(getInterfaceName());    param.append(Component.PATH_SEPARATOR);    param.append(Component.PATH_SEPARATOR);    pageParameters.put(WebRequestCodingStrategy.INTERFACE_PARAMETER_NAME,  param.toString());  }    @Override  public  void  processEvents(RequestCycle  requestCycle)  {  Page  page  =  getPage();  if  (page  ==  null)  {  page  =  Session.get().getPage(getPageMapName(),  componentPath,  -1);  if  (page  !=  null  &&  page.getClass()  ==  getPageClass())  {  setPage(page);  }  else  {  page  =  getPage(requestCycle);  }  }    if  (page  ==  null)  {  throw  new  PageExpiredException(   "Request  cannot  be  processed.  The  target  page  does  not  exist  anymore. ");  }    final  String  pageRelativeComponentPath  =  Strings.afterFirstPathComponent(componentPath,  Component.PATH_SEPARATOR);  Component  component  =  page.get(pageRelativeComponentPath);  if  (component  ==  null)  {  page.prepareForRender(false);  component  =  page.get(pageRelativeComponentPath);  if  (component  ==  null)  {  throw  new  WicketRuntimeException(   "unable  to  find  component  with  path   "  +  pageRelativeComponentPath  +   "  on  stateless  page   "  +  page  +   "  it  could  be  that  the  component  is  inside  a  repeater  make  your  component  return  false  in  getStatelessHint() ");  }  }  RequestListenerInterface  listenerInterface  =  RequestListenerInterface.forName(interfaceName);  if  (listenerInterface  ==  null)  {  throw  new  WicketRuntimeException( "unable  to  find  listener  interface   "  +  interfaceName);  }  listenerInterface.invoke(page,  component);  }    @Override  public  void  respond(RequestCycle  requestCycle)  {  Page  page  =  getPage(requestCycle);  if  (requestCycle.isRedirect()  &&  !page.isPageStateless())  {  requestCycle.redirectTo(page);  }  else  {  page.renderPage();  }  }    public  String  getComponentPath()  {  return  componentPath;  }    public  String  getInterfaceName()  {  return  interfaceName;  }  }  	17	replace-122
196	camel_52106681	buggy:  MessageHelper.resetStreamCache(exchange.getIn());    context:  }  else  {  decrementRedeliveryCounter(exchange);  }  if  (processor  !=  null)  {      //  reset  cached  streams  so  they  can  be  read  again      MessageHelper.resetStreamCache(exchange.getIn());  if  (data.useOriginalInMessage)  {  if  (log.isTraceEnabled())  {  log.trace( "Using  the  original  IN  message  instead  of  current ");  }  Message  original  =  exchange.getUnitOfWork().getOriginalInMessage();  exchange.setIn(original);  	if  (exchange.hasOut())  {  if  (log.isTraceEnabled())  {  log.trace( "Removing  the  out  message  to  avoid  some  uncertain  behavior ");  }  exchange.setOut(null);  }    MessageHelper.resetStreamCache(exchange.getIn());  	595	replace-3
197	wicket_5e2c6702	buggy:  public  final  static  String  SCRIPT_OPEN_TAG  =   "<script  type=\ "text/javascript\ "><!--/*--><![CDATA[/*><!--*/\n ";  public  final  static  String  SCRIPT_CLOSE_TAG  =   "\n/*-->]]>*/</script>\n ";  public  final  static  String  SCRIPT_CONTENT_PREFIX  =   "<!--/*--><![CDATA[/*><!--*/\n ";  public  final  static  String  SCRIPT_CONTENT_SUFFIX  =   "\n/*-->]]>*/ ";  context:  public  class  JavaScriptUtils  {  public  final  static  String  SCRIPT_OPEN_TAG  =   "<script  type=\ "text/javascript\ "><!--/*--><![CDATA[/*><!--*/\n ";  public  final  static  String  SCRIPT_CLOSE_TAG  =   "\n/*-->]]>*/</script>\n ";  	public  final  static  String  SCRIPT_OPEN_TAG  =   "<script  type=\ "text/javascript\ ">\n/*<![CDATA[*/\n ";  public  final  static  String  SCRIPT_CLOSE_TAG  =   "\n/*]]>*/\n</script>\n ";  public  final  static  String  SCRIPT_CONTENT_PREFIX  =   "\n/*<![CDATA[*/\n ";  public  final  static  String  SCRIPT_CONTENT_SUFFIX  =   "\n/*]]>*/\n ";  	30	replace-4
198	wicket_a7ce7f91	buggy:  this.fileNameModel  =  fileNameModel;  context:  public  DownloadLink(String  id,  IModel<File>  fileModel,  IModel<String>  fileNameModel)  {  super(id,  fileModel);  this.fileNameModel  =  fileNameModel;  	this.fileNameModel  =  wrap(fileNameModel);  }    @Override  public  void  detachModels()  {  super.detachModels();    if  (fileNameModel  !=  null)  {  fileNameModel.detach();  }  	138	replace-1
199	wicket_8e6a6ec5	buggy:  +   "  is  not  a  fragment  tag ");  context:  throw  new  MarkupNotFoundException( "No  Markup  found  for  Fragment   "  +  markupId  +   "  in  providing  markup  container   "  +  getMarkupProvider(container));  }  else  {  MarkupElement  fragmentTag  =  childMarkup.get(0);  if  ((fragmentTag  instanceof  WicketTag  &&  ((WicketTag)fragmentTag).isFragementTag())  ==  false)  {  throw  new  MarkupNotFoundException( "Markup  found  for  Fragment  ' "  +  markupId  +   "  is  not  a  fragment  tag ");  }  }  if  (child  ==  null)  {  return  childMarkup;  }  	+   "  is  not  a  <wicket:fragment>  tag ");  	155	replace-1
200	camel_91228815	buggy:  return  String.format( "Endpoint[%s] ",  URISupport.sanitizeUri(getEndpointUri()));  context:  public  boolean  equals(Object  object)  {  if  (object  instanceof  DefaultEndpoint)  {  DefaultEndpoint  that  =  (DefaultEndpoint)object;  return  ObjectHelper.equal(this.getEndpointUri(),  that.getEndpointUri());  }  return  false;  }  public  String  toString()  {      return  String.format( "Endpoint[%s] ",  URISupport.sanitizeUri(getEndpointUri()));  }  	String  value  =  null;  try  {  value  =  getEndpointUri();  }  catch  (RuntimeException  e)  {  }  return  String.format( "Endpoint[%s] ",  URISupport.sanitizeUri(value));  	139	replace-1
201	wicket_556a2236	buggy:  page  =  getPageSource().newPageInstance(pageClass,  pageParameters);  context:  if  (pageId  !=  null)  {  page  =  getStoredPage(pageId);  }  if  (page  ==  null)  {  if  (pageClass  !=  null)  {  page  =  getPageSource().newPageInstance(pageClass,  pageParameters);  	PageParameters  parameters;  if  (pageId  !=  null)  {  parameters  =  new  PageParameters();  }  else  {  parameters  =  pageParameters;  }  page  =  getPageSource().newPageInstance(pageClass,  parameters);  	268	replace-1
202	commons-math_ce126bdb	buggy:  return  wrapped.nextInt();  context:  public  synchronized  int  nextInt()  {  return  wrapped.nextInt();  }  public  synchronized  int  nextInt(int  n)  {      return  wrapped.nextInt();  }  public  synchronized  long  nextLong()  {  return  wrapped.nextLong();  }  	return  wrapped.nextInt(n);  	85	replace-1
203	wicket_b772ff87	buggy:  return  appendValue  !=  null  ?  appendValue  :   " ";  return  currentValue  !=  null  ?  currentValue  :   " ";  context:  {  this.separator  =  separator;  return  this;  }  protected  String  newValue(String  currentValue,  String  appendValue)  {  if  (Strings.isEmpty(currentValue))  return  appendValue  !=  null  ?  appendValue  :   " ";  else  if  (Strings.isEmpty(appendValue))  return  currentValue  !=  null  ?  currentValue  :   " ";  StringBuilder  sb  =  new  StringBuilder(currentValue);  sb.append((getSeparator()  ==  null  ?   " "  :  getSeparator()));  sb.append(appendValue);  return  sb.toString();  	return  appendValue  !=  null  ?  appendValue  :  null;  return  currentValue  !=  null  ?  currentValue  :  null;  	155	replace-2
204	camel_3f70d612	buggy:  done.set(false);  context:  if  (current.get()  ==  index)  {  id  =  exchange.getExchangeId();  }  current.incrementAndGet();  return  true;  }  public  boolean  onExchangeCompleted(Exchange  exchange)  {  if  (exchange.getExchangeId().equals(id))  {          done.set(false);  }  return  true;  }  public  boolean  onExchangeFailed(Exchange  exchange)  {  if  (exchange.getExchangeId().equals(id))  {  done.set(true);  	done.set(true);  	447	replace-1
205	wicket_6470c3f7	buggy:  final  int  relativeAt  =  afterProto.indexOf('/');    context:  final  int  idxOfFirstSlash  =  absoluteUrl.indexOf('/');  final  int  protocolAt  =  absoluteUrl.indexOf( ":// ");  if  (protocolAt  >  -1  &&  (protocolAt  <  idxOfFirstSlash))  {  result.protocol  =  absoluteUrl.substring(0,  protocolAt).toLowerCase(Locale.US);  final  String  afterProto  =  absoluteUrl.substring(protocolAt  +  3);  final  String  hostAndPort;  final  int  relativeAt  =  afterProto.indexOf('/');  if  (relativeAt  ==  -1)  {  relativeUrl  =   " ";  	int  relativeAt  =  afterProto.indexOf('/');  if  (relativeAt  ==  -1)  {  relativeAt  =  afterProto.indexOf(';');  }  	235	replace-2
206	jackrabbit-oak_705ce1d1	buggy:  return  template.getPrimaryType();  return  template.getMixinTypes();  context:  return  template.getMixinTypes()  !=  null;  }  else  {  return  template.getPropertyTemplate(name)  !=  null;  }  }  public  PropertyState  getProperty(String  name)  {  checkNotNull(name);  Template  template  =  getTemplate();  if  (JCR_PRIMARYTYPE.equals(name))  {      return  template.getPrimaryType();  }  else  if  (JCR_MIXINTYPES.equals(name))  {      return  template.getMixinTypes();  	PropertyState  property  =  null;  property  =  template.getPrimaryType();  property  =  template.getMixinTypes();  }  if  (property  !=  null)  {  return  property;  	119	replace-2
207	logging-log4j2_3cee912e	buggy:  includeLocation(includeLocation));  context:  }  catch  (final  Exception  ex)  {  LOGGER.error(   "Invalid  Log  level  specified:  {}.  Defaulting  to  Error ",  levelName);  level  =  Level.ERROR;  }  final  boolean  additive  =  Booleans.parseBoolean(additivity,  true);  return  new  AsyncLoggerConfig(LogManager.ROOT_LOGGER_NAME,  appenderRefs,  filter,  level,  additive,  properties,  config,          includeLocation(includeLocation));  }  }  }  	AsyncLoggerConfig.includeLocation(includeLocation));  	239	replace-1
208	camel_35bde2b2	buggy:  if  (result  ==  null)  {  context:  public  void  setTimePeriodMillis(long  timePeriodMillis)  {  this.timePeriodMillis.set(timePeriodMillis);  }  protected  long  calculateDelay(Exchange  exchange)  {  Object  result  =  maxRequestsPerPeriodExpression.evaluate(exchange,  Object.class);      if  (result  ==  null)  {  throw  new  RuntimeExchangeException( "The  max  requests  per  period  expression  was  evaluated  as  null:   "  +  maxRequestsPerPeriodExpression,  exchange);  }  Long  longValue  =  exchange.getContext().getTypeConverter().convertTo(Long.class,  result);  if  (longValue  !=  null)  {  if  (maximumRequestsPerPeriod  >  0  &&  longValue.longValue()  !=  maximumRequestsPerPeriod)  {  	if  (maximumRequestsPerPeriod  ==  0  &&  result  ==  null)  {  	111	replace-1
209	wicket_b76f9c44	buggy:  return  CreditCard.SWITCH;  context:  private  CreditCard  isVisa(String  creditCardNumber)  {  if  (creditCardNumber.length()  ==  13  ||  creditCardNumber.length()  ==  16)  {  if  (creditCardNumber.startsWith( "4 "))  {  return  CreditCard.SWITCH;  }  }  return  CreditCard.INVALID;  }  	return  CreditCard.VISA;  	542	replace-1
210	camel_57ba1bde	buggy:  if  (i  <  uri.length()  -  2)  {  context:  boolean  isRaw  =  false;  StringBuilder  key  =  new  StringBuilder();  StringBuilder  value  =  new  StringBuilder();  for  (int  i  =  0;  i  <  uri.length();  i++)  {  char  ch  =  uri.charAt(i);  char  next;      if  (i  <  uri.length()  -  2)  {  next  =  uri.charAt(i  +  1);  }  else  {  next  =  '\u0000';  }  isRaw  =  value.toString().startsWith(RAW_TOKEN_START);  	if  (i  <=  uri.length()  -  2)  {  	158	replace-1
211	accumulo_ff8c2383	buggy:  Text  startText  =  new  Text(start);  Text  endText  =  new  Text(end);  context:  if  (!exists(tableName))  throw  new  TableNotFoundException(tableName,  tableName,   " ");  acu.merge(tableName,  start,  end);  }  public  void  deleteRows(String  tableName,  Text  start,  Text  end)  throws  AccumuloException,  AccumuloSecurityException,  TableNotFoundException  {  if  (!exists(tableName))  throw  new  TableNotFoundException(tableName,  tableName,   " ");  MockTable  t  =  acu.tables.get(tableName);  Text  startText  =  new  Text(start);  Text  endText  =  new  Text(end);  startText.append(ZERO,  0,  1);  endText.append(ZERO,  0,  1);  Set<Key>  keep  =  new  TreeSet<Key>(t.table.subMap(new  Key(startText),  new  Key(endText)).keySet());  t.table.keySet().removeAll(keep);  }  	Text  startText  =  start  !=  null  ?  new  Text(start)  :  new  Text();  Text  endText  =  end  !=  null  ?  new  Text(end)  :  new  Text(t.table.lastKey().getRow().getBytes());  	317	replace-2
212	camel_f39bc60d	buggy:  String  msg  =  expression.evaluate(exchange,  String.class);  context:  this.expression  =  expression;  this.logger  =  logger;  }  public  void  process(Exchange  exchange)  throws  Exception  {  AsyncProcessorHelper.process(this,  exchange);  }  public  boolean  process(Exchange  exchange,  AsyncCallback  callback)  {      String  msg  =  expression.evaluate(exchange,  String.class);      logger.log(msg);  	try  {  String  msg  =  expression.evaluate(exchange,  String.class);  }  catch  (Exception  e)  {  exchange.setException(e);  }  finally  {  callback.done(true);  }  	46	replace-1
213	wicket_d78132be	buggy:  context:  for  (;  segNo  <  encryptedNumberOfSegments;  segNo++)  {  url.getSegments().add(encryptedUrl.getSegments().get(segNo));  }  url.getQueryParameters().addAll(originalUrl.getQueryParameters());  }  catch  (Exception  e)  {  log.error( "Error  decrypting  URL ",  e);  url  =  null;  }  return  url;  }  	url.getQueryParameters().addAll(encryptedUrl.getQueryParameters());  	238	add
214	commons-math_4aa4c6d3	buggy:  if  (bStats.getN()  ==  1)  {  context:  protected  RealDistribution  getKernel(SummaryStatistics  bStats)  {      if  (bStats.getN()  ==  1)  {  return  new  ConstantRealDistribution(bStats.getMean());  }  else  {  return  new  NormalDistribution(randomData.getRandomGenerator(),  bStats.getMean(),  bStats.getStandardDeviation(),  NormalDistribution.DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  }  }  }  	if  (bStats.getN()  ==  1  ||  bStats.getVariance()  ==  0)  {  	802	replace-1
215	jackrabbit-oak_2e20589f	buggy:  ListenableFuture<V>  future  =  loader.reload(key,  old);  value  =  future.get();  context:  return  null;  }  return  old;  }  synchronized  void  refresh(K  key,  int  hash,  CacheLoader<K,  V>  loader)  throws  ExecutionException  {  V  value;  V  old  =  get(key,  hash);  long  start  =  System.nanoTime();  try  {      ListenableFuture<V>  future  =  loader.reload(key,  old);      value  =  future.get();  loadSuccessCount++;  }  catch  (Exception  e)  {  	if  (old  ==  null)  {  value  =  loader.load(key);  }  else  {  ListenableFuture<V>  future  =  loader.reload(key,  old);  value  =  future.get();  }  	925	replace-2
216	wicket_2fc6a395	buggy:  if  (lhsClosed  &&  rhsClosed)  context:  {  buff.append(fragments[0]);  }  for  (int  i  =  1;  i  <  fragments.length;  i++)  {  String  fragment  =  fragments[i];  if  ((fragments[i  -  1]  !=  null)  ||  (fragment  !=  null))  {  boolean  lhsClosed  =  fragments[i  -  1].endsWith(separator);  boolean  rhsClosed  =  fragment.startsWith(separator);  if  (lhsClosed  &&  rhsClosed)  {  buff.append(fragment.substring(1));  }  else  if  (!lhsClosed  &&  !rhsClosed)  {  if  (!Strings.isEmpty(fragment))  {  buff.append(separator);  	if  (!Strings.isEmpty(separator)  &&  lhsClosed  &&  rhsClosed)  	680	replace-1
217	commons-math_c979a6f0	buggy:  double  largestEigenvalueNorm  =  eigenvalueNorm(0);  context:  }  public  boolean  isNonSingular()  {      //  The  eigenvalues  are  sorted  by  size,  descending      double  largestEigenvalueNorm  =  eigenvalueNorm(0);  if  (largestEigenvalueNorm  ==  0.0)  {  return  false;  	double  largestEigenvalueNorm  =  0.0;  for  (int  i  =  0;  i  <  realEigenvalues.length;  ++i)  {  largestEigenvalueNorm  =  FastMath.max(largestEigenvalueNorm,  eigenvalueNorm(i));  }  	517	replace-1
218	accumulo_2d97b875	buggy:  context:  this(new  Text(row.toString()));  }  public  Mutation()  {}  public  Mutation(TMutation  tmutation)  {  this.row  =  ByteBufferUtil.toBytes(tmutation.row);  this.data  =  ByteBufferUtil.toBytes(tmutation.data);  this.entries  =  tmutation.entries;  this.values  =  ByteBufferUtil.toBytesList(tmutation.values);  }  public  Mutation(Mutation  m)  {  	  if  (this.row  ==  null)  {  throw  new  IllegalArgumentException( "null  row ");  }  if  (this.data  ==  null)  {  throw  new  IllegalArgumentException( "null  serialized  data ");  }  	226	add
219	commons-math_5fe9b36c	buggy:  try  {  return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /  (standardDeviation  *  FastMath.sqrt(2.0))));  }  catch  (MaxIterationsExceededException  ex)  {  if  (x  <  (mean  -  20  *  standardDeviation))  {  //  JDK  1.5  blows  at  38  return  0;  }  else  if  (x  >  (mean  +  20  *  standardDeviation))  {  return  1;  }  else  {  throw  ex;  }  context:  *  @throws  MathException  if  the  algorithm  fails  to  converge;  unless  *  {@code  x}  is  more  than  20  standard  deviations  from  the  mean,  in  which  *  case  the  convergence  exception  is  caught  and  0  or  1  is  returned.  public  double  cumulativeProbability(double  x)  throws  MathException  {      try  {      return  0.5  *  (1.0  +  Erf.erf((x  -  mean)  /          (standardDeviation  *  FastMath.sqrt(2.0))));      }  catch  (MaxIterationsExceededException  ex)  {      if  (x  <  (mean  -  20  *  standardDeviation))  {  //  JDK  1.5  blows  at  38      return  0;      }  else  if  (x  >  (mean  +  20  *  standardDeviation))  {      return  1;      }  else  {      throw  ex;  	final  double  dev  =  x  -  mean;  if  (FastMath.abs(dev)  >  40  *  standardDeviation)  {  return  dev  <  0  ?  0.0d  :  1.0d;  return  0.5  *  (1.0  +  Erf.erf((dev)  /  (standardDeviation  *  FastMath.sqrt(2.0))));  	128	replace-11
220	commons-math_cedf0d27	buggy:  return  FastMath.pow(2  *  FastMath.PI,  -dim  /  2)  *  context:  return  covarianceMatrix.copy();  }  public  double  density(final  double[]  vals)  throws  DimensionMismatchException  {  final  int  dim  =  getDimension();  if  (vals.length  !=  dim)  {  throw  new  DimensionMismatchException(vals.length,  dim);  }      return  FastMath.pow(2  *  FastMath.PI,  -dim  /  2)  *  FastMath.pow(covarianceMatrixDeterminant,  -0.5)  *  getExponentTerm(vals);  }  	return  FastMath.pow(2  *  FastMath.PI,  -0.5  *  dim)  *  	183	replace-1
221	wicket_c250db9c	buggy:  if  (topLevel.length()  <  2  ||  topLevel.length()  >  4)  context:  hostIP  =  (segmentLength  >=  hostIP.length())  ?   " "  :  hostIP.substring(segmentLength);  segmentCount++;  }  }  if  (segmentCount  >  1)  {  String  topLevel  =  domainSegment[segmentCount  -  1];  if  (topLevel.length()  <  2  ||  topLevel.length()  >  4)  {  return  false;  }  Matcher  alphaMatcher  =  Pattern.compile(ALPHA_PATTERN).matcher(  topLevel.substring(0,  1));  if  (!alphaMatcher.matches())  	if  (topLevel.length()  <  2)  	430	replace-1
222	maven_c6529932	buggy:  return  false;  context:  if  (   "basedir ".equals(  expression  )  )  {  return  basedir.getAbsolutePath();  }  return  null;  }  }  );  }  else  if  (  path.contains(   "${basedir} "  )  )  {      return  false;  }  interpolator.addValueSource(  new  MapBasedValueSource(  context.getProjectProperties()  )  );  interpolator.addValueSource(  new  MapBasedValueSource(  context.getUserProperties()  )  );  interpolator.addValueSource(  new  MapBasedValueSource(  context.getSystemProperties()  )  );  	return  isActive;  	124	replace-1
223	logging-log4j2_411dad65	buggy:  }  catch  (final  Exception  ignore)  {  context:  private  Class<?>  loadClass(final  ClassLoader  lastLoader,  final  String  className)  {  Class<?>  clazz;  if  (lastLoader  !=  null)  {  try  {  clazz  =  Loader.initializeClass(className,  lastLoader);  if  (clazz  !=  null)  {  return  clazz;  }      }  catch  (final  Exception  ignore)  {  }  }  try  {  clazz  =  Loader.loadClass(className);  }  catch  (final  ClassNotFoundException  ignored)  {  try  {  clazz  =  Loader.initializeClass(className,  this.getClass().getClassLoader());  	}  catch  (final  Throwable  ignore)  {  	503	replace-1
224	jackrabbit-oak_a28098fd	buggy:  if  (parent.hasProperty(name))  {  return  new  PropertyDelegate(this,  parent,  name);  }  context:  public  ItemDelegate  getItem(String  path)  {  String  name  =  PathUtils.getName(path);  if  (name.isEmpty())  {  return  getRootNode();  }  else  {  Tree  parent  =  root.getTree(PathUtils.getParentPath(path));      if  (parent.hasProperty(name))  {      return  new  PropertyDelegate(this,  parent,  name);      }  Tree  child  =  parent.getChild(name);  if  (child.exists())  {  return  new  NodeDelegate(this,  child);  }  else  {  	  }  else  if  (parent.hasProperty(name))  {  return  new  PropertyDelegate(this,  parent,  name);  	429	replace-3
225	commons-math_09fe956a	buggy:  if  (data  !=  null  &&  data.length  >  1)  {  context:  checkContractExpand(contractionCriterion,  expansionFactor);  MathUtils.checkNotNull(expansionMode);  this.expansionFactor  =  expansionFactor;  this.contractionCriterion  =  contractionCriterion;  this.expansionMode  =  expansionMode;  internalArray  =  new  double[initialCapacity];  numElements  =  0;  startIndex  =  0;      if  (data  !=  null  &&  data.length  >  1)  {  addElements(data);  }  }  	if  (data  !=  null  &&  data.length  >  0)  {  	290	replace-1
226	jackrabbit-oak_f51ea2a2	buggy:  context:  }  else  {  c  =  new  Expression.Condition(left,   "is  not  null ",  null,  Expression.PRECEDENCE_CONDITION);  }  return  c;  }  private  Expression  parseExpression()  throws  ParseException  {  if  (readIf( "@ "))  {  return  readProperty();  }  else  if  (readIf( "true "))  {  return  Expression.Literal.newBoolean(true);  }  else  if  (readIf( "false "))  {  return  Expression.Literal.newBoolean(false);  }  else  if  (currentTokenType  ==  VALUE_NUMBER)  {  	if  (readIf( "( "))  {  read( ") ");  }  if  (readIf( "( "))  {  read( ") ");  }  	500	add
227	accumulo_15476a0d	buggy:  return  -1;  if  (count  >  other.count)  context:  }  public  int  compareTo(Key  o)  {  int  compare  =  super.compareTo(o);  if  (compare  !=  0)  return  compare;  if  (o  instanceof  MockMemKey)  {  MockMemKey  other  =  (MockMemKey)  o;  if  (count  <  other.count)    return  -1;      if  (count  >  other.count)  return  1;  }  else  {  return  1;  }  return  0;  }  	if  (count  >  other.count)  return  -1;  	72	replace-2
228	jackrabbit-oak_0c3e3d70	buggy:  boolean  includes(Revision  r)  {  return  high.compareRevisionTime(r)  >=  0  context:   "High  Revision  must  be  later  than  low  Revision,  high= "  +  high  +   "  low= "  +  low);  }  boolean  includes(Revision  r)  {      return  high.compareRevisionTime(r)  >=  0  &&  low.compareRevisionTime(r)  <=  0;  }  public  String  toString()  {  	boolean  includes(@Nonnull  Revision  r)  {  return  high.getClusterId()  ==  r.getClusterId()  &&  high.compareRevisionTime(r)  >=  0  	54	replace-2
229	jackrabbit-oak_e403e003	buggy:  throw  new  RepositoryException( "Invalid  name  or  path:   "  +  jcrPath);  context:  public  String  getOakPathOrThrow(String  jcrPath)  throws  RepositoryException  {  String  oakPath  =  getOakPath(jcrPath);  if  (oakPath  !=  null)  {  return  oakPath;  }  else  {      throw  new  RepositoryException( "Invalid  name  or  path:   "  +  jcrPath);  }  }  	if  (getOakPathKeepIndex(jcrPath)  !=  null)  {  throw  new  PathNotFoundException(jcrPath);  }  else  {  throw  new  RepositoryException( "Invalid  name  or  path:   "  +  jcrPath);  }    	331	replace-1
230	camel_c408c3ed	buggy:  answer  =  new  BeanExpression(ref,  getMethod());  context:  answer  =  new  BeanExpression(beanType,  getMethod());  }  }  else  if  (instance  !=  null)  {  answer  =  new  BeanExpression(instance,  getMethod());  }  else  {  String  ref  =  beanName();  BeanHolder  holder  =  new  RegistryBean(camelContext,  ref);  instance  =  holder.getBean();      answer  =  new  BeanExpression(ref,  getMethod());  }  validateHasMethod(camelContext,  instance,  beanType,  getMethod());  return  answer;  }  public  Predicate  createPredicate(CamelContext  camelContext)  {  	answer  =  new  BeanExpression(instance,  getMethod());  	173	replace-1
231	wicket_f45ce896	buggy:  if  (mapper.mapRequest(request)  !=  null)  context:  }  public  void  unmount(String  path)  {  final  Url  url  =  Url.parse(path);  final  Request  request  =  createRequest(url);  for  (IRequestMapper  mapper  :  this)  {  if  (mapper.mapRequest(request)  !=  null)  {  remove(mapper);  }  	if  (mapper  instanceof  ICompoundRequestMapper)  {  ICompoundRequestMapper  inner  =  (ICompoundRequestMapper)  mapper;  inner.unmount(path);  }  else  if  (mapper.mapRequest(request)  !=  null)  	254	replace-1
232	wicket_8e518d88	buggy:  if  (componentClass.isMemberClass()  &&  Modifier.isStatic(componentClass.getModifiers())  ==  false)  context:  public  ComponentInjector(CdiContainer  container)  {  super(container);  }  public  void  onInstantiation(Component  component)  {  Class<?  extends  Component>  componentClass  =  component.getClass();  if  (componentClass.isMemberClass()  &&  Modifier.isStatic(componentClass.getModifiers())  ==  false)  {  LOG.debug( "Skipping  non-static  inner  class  '{}'   ",  componentClass);  }  else  {  inject(component);  }  	if  (componentClass.isAnonymousClass()  ||  (componentClass.isMemberClass()  &&  Modifier.isStatic(componentClass.getModifiers())  ==  false))  	51	replace-1
233	camel_44cad623	buggy:  context:  answer.add(finallyProcessor);  }  return  answer;  }  public  boolean  hasNext()  {  return  tryProcessor  !=  null  ||  catchClauses  !=  null  &&  !catchClauses.isEmpty()  ||  finallyProcessor  !=  null;  }  }  	String  TRY_ROUTE_BLOCK              =   "TryRouteBlock ";  	186	add
234	jackrabbit-oak_06812d25	buggy:  &&  pd.boost  !=  PropertyDefinition.DEFAULT_BOOST  context:  if  (pd.nullCheckEnabled){  nonExistentProperties.add(pd);  }  if  (pd.notNullCheckEnabled){  existentProperties.add(pd);  }  if  (pd.nodeScopeIndex          &&  pd.boost  !=  PropertyDefinition.DEFAULT_BOOST  &&  pd.analyzed  &&  !pd.isRegexp){  boostedProps.add(pd);  }  }  }  return  ImmutableMap.copyOf(propDefns);  }  		868	remove-1
235	wicket_e1953357	buggy:  handler.getPageParameters());  context:  {  renderCount  =  page.getRenderCount();  }  PageInfo  pageInfo  =  new  PageInfo(page.getPageId());  ComponentInfo  componentInfo  =  new  ComponentInfo(renderCount,  requestListenerInterfaceToString(listenerInterface),  componentPath,  handler.getBehaviorIndex());  PageComponentInfo  pageComponentInfo  =  new  PageComponentInfo(pageInfo,  componentInfo);  UrlInfo  urlInfo  =  new  UrlInfo(pageComponentInfo,  page.getClass(),  handler.getPageParameters());  url  =  buildUrl(urlInfo);  }  }  return  url;  }  	page.getPageParameters());  	388	replace-1
236	wicket_84c3baac	buggy:  if  (behavior  instanceof  IValidator)  context:  final  IValidatable<T>  validatable  =  newValidatable();  boolean  isNull  =  getConvertedInput()  ==  null;  IValidator<T>  validator  =  null;  try  {  for  (Behavior  behavior  :  getBehaviors())  {  if  (behavior  instanceof  IValidator)  {  validator  =  (IValidator<T>)behavior;  	validator  =  null;  if  (behavior  instanceof  ValidatorAdapter)  {  validator  =  ((ValidatorAdapter<T>)behavior).getValidator();  }  else  if  (behavior  instanceof  IValidator)  }  if  (validator  !=  null)  {  	1408	replace-1
237	commons-math_bda25b40	buggy:  if  (!Precision.equals(shift.x,  0.0,  epsilon))  {  p  =  p  /  shift.x;  q  =  q  /  shift.x;  r  =  r  /  shift.x;  }  if  (shift.x  ==  0.0)  {  break;  context:  double  q  =  hVec[1];  double  r  =  hVec[2];  for  (int  k  =  im;  k  <=  iu  -  1;  k++)  {  boolean  notlast  =  k  !=  (iu  -  1);  if  (k  !=  im)  {  p  =  matrixT[k][k  -  1];  q  =  matrixT[k  +  1][k  -  1];  r  =  notlast  ?  matrixT[k  +  2][k  -  1]  :  0.0;  shift.x  =  FastMath.abs(p)  +  FastMath.abs(q)  +  FastMath.abs(r);      if  (!Precision.equals(shift.x,  0.0,  epsilon))  {          p  =  p  /  shift.x;          q  =  q  /  shift.x;          r  =  r  /  shift.x;  }      }      if  (shift.x  ==  0.0)  {      break;  	if  (Precision.equals(shift.x,  0.0,  epsilon))  {  continue;  p  =  p  /  shift.x;  q  =  q  /  shift.x;  r  =  r  /  shift.x;  	367	replace-7
238	flink_68912126	buggy:  for  (;  num  >  0;  num--)  {  context:  if  (num  >=  recordsPerSegment  &&  offset  ==  0)  {  for  (int  numInMemSeg  =  0;  numInMemSeg  <  recordsPerSegment;  numInMemSeg++)  {  record  =  comparator.readWithKeyDenormalization(record,  inView);  serializer.serialize(record,  output);  }  num  -=  recordsPerSegment;  }  else  {  for  (;  num  >  0;  num--)  {  record  =  comparator.readWithKeyDenormalization(record,  inView);  serializer.serialize(record,  output);  }  }  }  }  	for  (;  num  >  0  &&  offset  <=  this.lastEntryOffset;  num--,  offset  +=  this.recordSize)  {    offset  =  0;  	450	replace-1
239	accumulo_15e83709	buggy:  log.warn( "Saw  (possibly)  transient  exception  communicating  with  ZooKeeper,  wil  retry ",  e);  context:  try  {  op.run(zooKeeper);  return;  }  catch  (KeeperException  e)  {  final  Code  code  =  e.code();  if  (code  ==  Code.NONODE)  {  log.error( "Looked  up  non-existent  node  in  cache   "  +  e.getPath(),  e);  }  else  if  (code  ==  Code.CONNECTIONLOSS  ||  code  ==  Code.OPERATIONTIMEOUT  ||  code  ==  Code.SESSIONEXPIRED)  {    log.warn( "Saw  (possibly)  transient  exception  communicating  with  ZooKeeper,  wil  retry ",  e);  continue;  }  log.warn( "Zookeeper  error,  will  retry ",  e);  }  catch  (InterruptedException  e)  {  }  catch  (ConcurrentModificationException  e)  {  log.debug( "Zookeeper  was  modified,  will  retry ");  }  	log.warn( "Saw  (possibly)  transient  exception  communicating  with  ZooKeeper,  will  retry ",  e);  	165	replace-1
240	jackrabbit-oak_d0f6715d	buggy:  if  (!value.revision.equals(newest))  {  context:  if  (!Utils.isPropertyName(key))  {  continue;  }  Value  value  =  getLatestValue(nodeStore,  getLocalMap(key),  min,  readRevision,  validRevisions,  lastRevs);  if  (value  !=  null  &&  !getPreviousRanges().isEmpty())  {  Revision  newest  =  getLocalMap(key).firstKey();      if  (!value.revision.equals(newest))  {  Revision  newestPrev  =  getPreviousRanges().firstKey();  if  (isRevisionNewer(nodeStore,  newestPrev,  value.revision))  {  value  =  null;  }  	if  (isRevisionNewer(nodeStore,  newest,  value.revision))  {  	778	replace-1
241	accumulo_2f0643a9	buggy:  colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  2);  context:  int  zeroIndex  =  currentDocID.find( "\0 ");  if  (zeroIndex  <  0)  throw  new  IllegalArgumentException( "bad  current  docID ");  Text  colf  =  new  Text(docColf);  colf.append(nullByte,  0,  1);  colf.append(currentDocID.getBytes(),  0,  zeroIndex);  docColfSet  =  Collections.singleton((ByteSequence)  new  ArrayByteSequence(colf.getBytes(),  0,  colf.getLength()));  if  (log.isTraceEnabled())  log.trace(zeroIndex  +   "   "  +  currentDocID.getLength());  Text  colq  =  new  Text();  colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  2);  Key  k  =  new  Key(currentPartition,  colf,  colq);  if  (log.isTraceEnabled())  log.trace( "built  doc  key  for  seek:   "  +  k.toString());  return  k;  }  }  	colq.set(currentDocID.getBytes(),  zeroIndex  +  1,  currentDocID.getLength()  -  zeroIndex  -  1);  	154	replace-1
242	wicket_8f7805f8	buggy:  if  (pageParameters  !=  null)  {  storedPageInstance.getPageParameters().overwriteWith(pageParameters);  }    context:  private  IRequestablePage  getStoredPage(final  int  pageId)  {  IRequestablePage  storedPageInstance  =  getPageSource().getPageInstance(pageId);  if  (storedPageInstance  !=  null  &&  (pageClass  ==  null  ||  pageClass.equals(storedPageInstance.getClass())))  {  pageInstance  =  storedPageInstance;  if  (pageParameters  !=  null)  {  storedPageInstance.getPageParameters().overwriteWith(pageParameters);  }  }  return  storedPageInstance;  }  		295	remove-6
243	wicket_9ced53a5	buggy:  context:  public  MergedMarkup(final  Markup  markup,  final  Markup  baseMarkup,  int  extendIndex)  {  super(markup.getMarkupResourceStream());  getMarkupResourceStream().setBaseMarkup(baseMarkup);  if  (log.isDebugEnabled())  {  String  derivedResource  =  Strings.afterLast(markup.getMarkupResourceStream()  .getResource()  .toString(),  '/');  	MarkupResourceStream  baseResourceStream  =  baseMarkup.getMarkupResourceStream();  getMarkupResourceStream().setXmlDeclaration(baseResourceStream.getXmlDeclaration());  getMarkupResourceStream().setEncoding(baseResourceStream.getEncoding());  getMarkupResourceStream().setWicketNamespace(baseResourceStream.getWicketNamespace());    	67	add
244	jackrabbit-oak_45b110e1	buggy:  writeState  =  new  MutableNodeState(baseState);  context:  if  (writeState  ==  null  ||  revision  !=  root.revision)  {  assert(!isRoot());  //  root  never  gets  here  since  revision  ==  root.revision  baseState  =  parent.getBaseState(name);  writeState  =  parent.getWriteState(name);  if  (writeState  ==  null)  {  if  (exists())  {          writeState  =  new  MutableNodeState(baseState);  }  else  {  writeState  =  new  MutableNodeState(null);  }  assert  parent.writeState  !=  null;  //  guaranteed  by  called  parent.write()  parent.writeState.nodes.put(name,  writeState);  	NodeState  writeBase  =  parent.writeState.base.getChildNode(name);  writeState  =  new  MutableNodeState(writeBase);  	257	replace-1
245	wicket_71499e17	buggy:  if  (!Strings.isEmpty(attributes.getStyle()))  res.append( "- ");  res.append( "- ");  context:  {  return  null;  }  else  {  StringBuilder  res  =  new  StringBuilder();  if  (attributes.getLocale()  !=  null)  {  res.append(attributes.getLocale().toString());  }  if  (!Strings.isEmpty(attributes.getStyle()))  {  res.append( "- ");  res.append(attributes.getStyle());  }  if  (!Strings.isEmpty(attributes.getVariation()))  {  	boolean  styleEmpty  =  Strings.isEmpty(attributes.getStyle());  if  (!styleEmpty)  res.append('-');  if  (styleEmpty)  {  res.append( "-- ");  }  else  {  res.append('-');  }  	50	replace-3
246	wicket_2f1ece4b	buggy:  context:  }  result.append(c);  continue;  }  if  (state  ==  LINE_COMMENT)  {  if  (c  ==  '\n'  ||  c  ==  '\r')  {  state  =  REGULAR_TEXT;  continue;  }  }  if  (state  ==  MULTILINE_COMMENT)  {  if  (c  ==  '*'  &&  next  ==  '/')  {  state  =  REGULAR_TEXT;  	result.append(c);  	176	add
247	flink_4dbf030a	buggy:  return  null;  context:  }  private  Buffer  requestBuffer(boolean  isBlocking)  throws  InterruptedException,  IOException  {  synchronized  (availableMemorySegments)  {  returnExcessMemorySegments();  boolean  askToRecycle  =  owner  !=  null;  while  (availableMemorySegments.isEmpty())  {  if  (isDestroyed)  {  return  null;  }  if  (numberOfRequestedMemorySegments  <  currentPoolSize)  {  final  MemorySegment  segment  =  networkBufferPool.requestMemorySegment();  if  (segment  !=  null)  {  numberOfRequestedMemorySegments++;  availableMemorySegments.add(segment);  	throw  new  IllegalStateException( "Buffer  pool  is  destroyed. ");  	144	replace-1
248	accumulo_699b8bf0	buggy:  context:  if  (force)  {  return  0;  }  if  (!requestedShutdown)  {  master.shutdownTServer(server);  }  if  (master.onlineTabletServers().contains(server))  {  TServerConnection  connection  =  master.getConnection(server);  if  (connection  !=  null)  {  try  {  TabletServerStatus  status  =  connection.getTableMap(false);  if  (status.tableMap  !=  null  &&  status.tableMap.isEmpty())  {  	requestedShutdown  =  true;  	61	add
249	commons-math_a7363a2a	buggy:  hull.add(point);  context:  return;  }  final  double  distanceToLast  =  p1.distance(p2);  if  (isIncludeCollinearPoints())  {  final  int  index  =  distanceToCurrent  <  distanceToLast  ?  size  -  1  :  size;  hull.add(index,  point);  }  else  {  if  (distanceToCurrent  >  distanceToLast)  {  hull.remove(size  -  1);  }          hull.add(point);  }  return;  }  else  if  (offset  >  0)  {  hull.remove(size  -  1);  }  else  {  break;  }  	hull.add(point);  	163	replace-1
250	flink_39d526e6	buggy:  context:  while  (i  <  limit)  {  if  (i  <  delimLimit  &&  delimiterNext(bytes,  i,  delimiter))  {  break;  }  i++;  }  String  str  =  new  String(bytes,  startPos,  i-startPos);  try  {  this.result  =  Double.parseDouble(str);  return  (i  ==  limit)  ?  limit  :  i  +  delimiter.length;  }  catch  (NumberFormatException  e)  {  setErrorState(ParseErrorState.NUMERIC_VALUE_FORMAT_ERROR);  return  -1;  }  	if  (i  ==  startPos)  {  setErrorState(ParseErrorState.EMPTY_STRING);  return  -1;  }  	47	add
251	logging-log4j2_238ce8aa	buggy:  final  String  text  =  message.getFormat();  context:  buffer.append(type);  }  else  if  (messageId  !=  null)  {  buffer.append(messageId);  }  else  {  buffer.append( "- ");  }  }  private  void  appendMessage(final  StringBuilder  buffer,  final  LogEvent  event)  {  final  Message  message  =  event.getMessage();      final  String  text  =  message.getFormat();  if  (text  !=  null  &&  text.length()  >  0)  {  buffer.append( "   ").append(escapeNewlines(text,  escapeNewLine));  }  if  (exceptionFormatters  !=  null  &&  event.getThrown()  !=  null)  {  final  StringBuilder  exception  =  new  StringBuilder(LF);  	final  String  text  =  (message  instanceof  StructuredDataMessage)  ?  message.getFormat()  :  message.getFormattedMessage();  	327	replace-1
252	accumulo_cfbf5999	buggy:  context:  if  (opts.ranges  ==  null)  {  ranges.add(new  Range());  }  else  {  for  (org.apache.accumulo.proxy.thrift.Range  range  :  opts.ranges)  {  Range  aRange  =  new  Range(range.getStart()  ==  null  ?  null  :  Util.fromThrift(range.getStart()),  true,  range.getStop()  ==  null  ?  null  :  Util.fromThrift(range.getStop()),  false);  ranges.add(aRange);  }  }  scanner.setRanges(ranges);  }  	  if  (opts.columns  !=  null)  {  for  (ScanColumn  col  :  opts.columns)  {  if  (col.isSetColQualifier())  scanner.fetchColumn(ByteBufferUtil.toText(col.colFamily),  ByteBufferUtil.toText(col.colQualifier));  else  scanner.fetchColumnFamily(ByteBufferUtil.toText(col.colFamily));  }  }    	822	add
253	jackrabbit-oak_c05cec12	buggy:  case  '{':  //  possibly  an  expanded  name  case  '[':  //  starts  with  an  identifier  case  '.':  //  possibly   ". "  or   ".. "  case  ':':  //  colon  as  the  first  character  return  true;  case  '/':  if  (length  ==  1)  {  return  false;  //  the  root  path  }  slash  =  0;  break;  }  for  (int  i  =  1;  i  <  length;  i++)  {  switch  (path.charAt(i))  {  case  '[':  //  possibly  an  index  case  '.':  if  (i  ==  slash  +  1)  {  return  true;  //  possibly   ". "  or   ".. "  }  break;  case  ':':  if  (i  ==  slash  +  1      //   "x/:y "  ||  i  ==  colon  +  i    //   "x::y "  ||  colon  >  slash    //   "x:y:z "  ||  i  +  1  ==  length)  {    //   "x: "  return  true;  }  colon  =  i;  break;  if  (i  ==  slash  +  1      //   "x//y "  ||  i  ==  colon  +  i    //   "x:/y "  ||  i  +  1  ==  length)  {    //   "x/ "  return  true;  slash  =  i;  context:  private  boolean  needsFullMapping(String  path)  {  int  length  =  path.length();  if  (length  ==  0)  {  return  true;  }  int  slash  =  -1;  //  index  of  the  last  slash  in  the  path  int  colon  =  -1;  //  index  of  the  last  colon  in  the  path  switch  (path.charAt(0))  {      case  '{':  //  possibly  an  expanded  name      case  '[':  //  starts  with  an  identifier      case  '.':  //  possibly   ". "  or   ".. "      case  ':':  //  colon  as  the  first  character      return  true;      case  '/':      if  (length  ==  1)  {      return  false;  //  the  root  path      }      slash  =  0;  	case  '[':  //  starts  with  an  identifier  case  '.':  //  possibly   ". "  or   ".. "  case  ':':  //  colon  as  the  first  character  if  (length  ==  1)  {  return  false;  //  the  root  path  slash  =  0;  }    for  (int  i  =  1;  i  <  length;  i++)  {  switch  (path.charAt(i))  {  case  '{':  //  possibly  an  expanded  name  case  '[':  //  possibly  an  index  case  ']':  //  illegal  character  if  not  part  of  index  case  '|':  //  illegal  character  case  '*':  //  illegal  character  return  true;  case  '.':  if  (i  ==  slash  +  1)  {  return  true;  //  possibly   ". "  or   ".. "  }  break;  case  ':':  if  (i  ==  slash  +  1                            //   "x/:y "  ||  i  ==  colon  +  i              //   "x::y "  ||  colon  >  slash                //   "x:y:z "  ||  i  +  1  ==  length)  {      //   "x: "  return  true;  }  colon  =  i;  break;  case  '/':  if  (i  ==  slash  +  1                            //   "x//y "  ||  i  ==  colon  +  i              //   "x:/y "  ||  i  +  1  ==  length)  {      //   "x/ "  return  true;  }  slash  =  i;  break;  	242	replace-35
254	wicket_294b0b2f	buggy:  context:  log.warn(   "Multiple  url  patterns  defined  for  Wicket  filter/servlet,  using  the  first:  {} ",  pattern);  }  if  ( "/* ".equals(pattern))  {  pattern  =   " ";  }  return  pattern;  }  return  null;  }  	if  (pattern.endsWith( "* "))  {  pattern  =  pattern.substring(0,  pattern.length()  -  1);  }  	522	add
255	wicket_71674df5	buggy:  PageParameters  constructionPageParameters  =  provider.getPageInstance().getPageParameters();  context:  PageProvider  provider  =  new  PageProvider(pageInfo.getPageId(),  pageClass,  pageParameters,  renderCount);  provider.setPageSource(getContext());  if  (provider.isNewPageInstance()  &&  !getRecreateMountedPagesAfterExpiry())  {  throw  new  PageExpiredException(String.format( "Bookmarkable  page  id  '%d'  has  expired. ",  pageInfo.getPageId()));  }  else  {  PageParameters  constructionPageParameters  =  provider.getPageInstance().getPageParameters();  if  (PageParameters.equals(constructionPageParameters,  pageParameters)  ==  false)  {  	PageParameters  constructionPageParameters  =  provider.hasPageInstance()  ?  provider.getPageInstance().getPageParameters()  :  new  PageParameters();    	268	replace-1
256	accumulo_0cf2ff72	buggy:  Process  initProcess  =  exec(Initialize.class,   "--instance-name ",  config.getInstanceName(),   "--password ",  config.getRootPassword(),   "--username ",   "root ");  context:  });  }  if  (zooKeeperProcess  ==  null)  {  zooKeeperProcess  =  exec(Main.class,  ServerType.ZOOKEEPER,  ZooKeeperServerMain.class.getName(),  zooCfgFile.getAbsolutePath());  }  if  (!initialized)  {  UtilWaitThread.sleep(250);    Process  initProcess  =  exec(Initialize.class,   "--instance-name ",  config.getInstanceName(),   "--password ",  config.getRootPassword(),   "--username ",   "root ");  int  ret  =  initProcess.waitFor();  if  (ret  !=  0)  {  throw  new  RuntimeException( "Initialize  process  returned   "  +  ret);  }  initialized  =  true;  }  for  (int  i  =  tabletServerProcesses.size();  i  <  config.getNumTservers();  i++)  {  	Process  initProcess  =  exec(Initialize.class,   "--instance-name ",  config.getInstanceName(),   "--password ",  config.getRootPassword());  	340	replace-1
257	commons-math_0596e314	buggy:  if  (mean  <  0.0)  {  context:  *  @param  mean  *    the  mean  of  the  distribution  public  double  nextExponential(double  mean)  {      if  (mean  <  0.0)  {  throw  MathRuntimeException.createIllegalArgumentException(   "mean  must  be  positive  ({0}) ",  mean);  }  final  RandomGenerator  generator  =  getRan();  double  unif  =  generator.nextDouble();  while  (unif  ==  0.0d)  {  unif  =  generator.nextDouble();  }  	if  (mean  <=  0.0)  {  	466	replace-1
258	flink_6ecd0f82	buggy:  context:  protected  abstract  List<OperatorDescriptorSingle>  getPossibleProperties();  public  void  computeInterestingPropertiesForInputs(CostEstimator  estimator)  {  final  InterestingProperties  props  =  getInterestingProperties().filterByCodeAnnotations(this,  0);  for  (OperatorDescriptorSingle  dps  :  getPossibleProperties())  {  for  (RequestedGlobalProperties  gp  :  dps.getPossibleGlobalProperties())  {  	  if  (gp.getPartitioning().isPartitionedOnKey())  {    for  (RequestedGlobalProperties  contained  :  props.getGlobalProperties())  {  if  (contained.getPartitioning()  ==  gp.getPartitioning()  &&  gp.getPartitionedFields().isValidSubset(contained.getPartitionedFields()))  {  props.getGlobalProperties().remove(contained);  break;  }  }  }      	223	add
259	wicket_aadaa4e9	buggy:  set(name,  value,  -1);  context:  }  return  this;  }  public  PageParameters  set(final  String  name,  final  Object  value)  {  set(name,  value,  -1);  return  this;  }  public  PageParameters  clearIndexed()  	int  position  =  getPosition(name);  set(name,  value,  position);  	486	replace-1
260	jackrabbit-oak_c65b07c3	buggy:  if  (filter.getPathRestriction()  ==  Filter.PathRestriction.NO_RESTRICTION){  context:  return  definition.indexesAllTypes();  }  else  {  result.setParentPath( " ");  }  return  true;  }  private  boolean  canEvalPathRestrictions(IndexingRule  rule)  {      if  (filter.getPathRestriction()  ==  Filter.PathRestriction.NO_RESTRICTION){  return  false;  }  	if  (filter.getPathRestriction()  ==  Filter.PathRestriction.NO_RESTRICTION  ||  (filter.getPathRestriction()  ==  Filter.PathRestriction.ALL_CHILDREN  &&  PathUtils.denotesRoot(filter.getPath()))  ){  	318	replace-1
261	camel_7c9326f4	buggy:  private  boolean  allowStAX;  context:  private  static  final  Logger  LOG  =  LoggerFactory.getLogger(XsltBuilder.class);  private  Map<String,  Object>  parameters  =  new  HashMap<String,  Object>();  private  XmlConverter  converter  =  new  XmlConverter();  private  Templates  template;  private  volatile  BlockingQueue<Transformer>  transformers;  private  ResultHandlerFactory  resultHandlerFactory  =  new  StringResultHandlerFactory();  private  boolean  failOnNullBody  =  true;  private  URIResolver  uriResolver;  private  boolean  deleteOutputFile;  private  ErrorListener  errorListener  =  new  XsltErrorListener();  private  boolean  allowStAX;  public  XsltBuilder()  {  }  public  XsltBuilder(Templates  templates)  {  this.template  =  templates;  }  	private  boolean  allowStAX  =  true;  	82	replace-1
262	wicket_a4a3a9a6	buggy:  value  =  ((String)value).replace('  ',  '\u00A0');  context:  if  (value  ==  null)  {  return  null;  }  else  if  (value  instanceof  String)  {  //  Convert  spaces  to  no-break  space  (U+00A0)  to  fix  problems  with  //  browser  conversions.  //  Space  is  not  valid  thousands-separator,  but  no-br  space  is.  value  =  ((String)value).replace('  ',  '\u00A0');  }  final  NumberFormat  numberFormat  =  getNumberFormat(locale);  final  N  number  =  parse(numberFormat,  value,  locale);  if  (number  ==  null)  	value  =  ((String)value).replaceAll( "(\\d+)\\s(?=\\d) ",   "$1\u00A0 ");  	71	replace-1
263	wicket_2293764f	buggy:  if  (forwardAttributes  !=  null  ||  errorAttributes  !=  null)  {  if  (LOG.isDebugEnabled())  {  LOG.debug( "Setting  filterPrefix('{}')  to  ''  because  there  is  either  an  error  or  a  forward.  {},  {} ",  new  Object[]  {filterPrefix,  forwardAttributes,  errorAttributes});  }  this.filterPrefix  =   " ";  }  else  {  this.filterPrefix  =  filterPrefix;  }  context:  {  Args.notNull(httpServletRequest,   "httpServletRequest ");  Args.notNull(filterPrefix,   "filterPrefix ");  this.httpServletRequest  =  httpServletRequest;  errorAttributes  =  ErrorAttributes.of(httpServletRequest,  filterPrefix);  forwardAttributes  =  ForwardAttributes.of(httpServletRequest,  filterPrefix);  if  (forwardAttributes  !=  null  ||  errorAttributes  !=  null)  {  if  (LOG.isDebugEnabled())  {  LOG.debug( "Setting  filterPrefix('{}')  to  ''  because  there  is  either  an  error  or  a  forward.  {},  {} ",  new  Object[]  {filterPrefix,  forwardAttributes,  errorAttributes});  }  //  the  filter  prefix  is  not  needed  when  the  current  request  is  internal  //  see  WICKET-4387  this.filterPrefix  =   " ";  	this.filterPrefix  =  filterPrefix;  	105	replace-12
264	wicket_03663750	buggy:  protected  void  onDetach()  {  super.onDetach();  context:  if  (componentScope.contains(id))  {  return  false;  }  componentScope.add(id);  return  true;  }  protected  void  onDetach()  {  super.onDetach();  renderedComponentsPerScope  =  null;  headerResponse  =  null;  }  	protected  void  onAfterRender()  {  super.onAfterRender();  	317	replace-3
265	maven_f0fcef7e	buggy:  private  final  static  String[]  QUALIFIERS  =  {   "snapshot ",   "alpha ",   "beta ",   "milestone ",   "rc ",   " ",   "sp "  };  context:  return  value.toString();  }  }  private  static  class  StringItem  implements  Item  {      private  final  static  String[]  QUALIFIERS  =  {   "snapshot ",   "alpha ",   "beta ",   "milestone ",   "rc ",   " ",   "sp "  };  private  final  static  List<String>  _QUALIFIERS  =  Arrays.asList(  QUALIFIERS  );  private  final  static  Properties  ALIASES  =  new  Properties();  static  {  ALIASES.put(   "ga ",   " "  );  ALIASES.put(   "final ",   " "  );  ALIASES.put(   "cr ",   "rc "  );  	private  final  static  String[]  QUALIFIERS  =  {   "alpha ",   "beta ",   "milestone ",   "rc ",   "snapshot ",   " ",   "sp "  };  	148	replace-1
266	wicket_3feb0e3a	buggy:  child.detachModel();  context:  {  Object  childObject  =  children_get(i,  false);  if  (childObject  instanceof  Component)  {  final  Component  child  =  (Component)childObject;  child.internalOnRemove();  child.detachModel();  child.setParent(null);  }  }  children  =  null;  }  return  this;  	child.detach();  	647	replace-1
267	jackrabbit-oak_ce0b0955	buggy:  context:  }  else  if  (readIf( "element "))  {  read( "( ");  if  (readIf( ") "))  {  pathPattern  +=   "% ";  }  else  {  if  (readIf( "* "))  {  pathPattern  +=   "% ";  }  else  {  String  name  =  readPathSegment();  pathPattern  +=  name;  appendNodeName(name);  }  if  (readIf( ", "))  {  	if  (left  !=  null  &&  left  instanceof  Property  &&  ((Property)  left).implicitAsterisk)  {  throw  new  IllegalArgumentException(   "Missing  @  in  front  of  the  property  name:   "  +  left);  }  	183	add
268	commons-math_69273dca	buggy:  stepSize  =  forward  ?  step  :  -step;  context:  final  double[]  yDotTmp  =  new  double[y0.length];  final  RungeKuttaStepInterpolator  interpolator  =  (RungeKuttaStepInterpolator)  prototype.copy();  interpolator.reinitialize(this,  yTmp,  yDotK,  forward,  equations.getPrimaryMapper(),  equations.getSecondaryMappers());  interpolator.storeTime(equations.getTime());  stepStart  =  equations.getTime();  stepSize  =  forward  ?  step  :  -step;  	if  (forward)  {  if  (stepStart  +  step  >=  t)  {  stepSize  =  t  -  stepStart;  }  else  {  stepSize  =  step;  }  }  else  {  if  (stepStart  -  step  <=  t)  {  stepSize  =  t  -  stepStart;  }  else  {  stepSize  =  -step;  }  }  	122	replace-1
269	wicket_35843c19	buggy:  context:  public  void  postProcess(final  Markup  markup)  {  while  (stack.size()  >  0)  {  final  ComponentTag  top  =  stack.peek();  if  (!requiresCloseTag(top.getName()))  {  stack.pop();  }  else  {  throw  new  MarkupException(markup,   "Tag  does  not  have  a  close  tag ",  null);  }  }  }  	top.setHasNoCloseTag(true);  	81	add
270	commons-math_e91d0f05	buggy:  return  (new  BigDecimal  (Double.toString(x))  context:  public  static  double  round(double  x,  int  scale,  int  roundingMethod)  {  try  {      return  (new  BigDecimal        (Double.toString(x))  .setScale(scale,  roundingMethod))  .doubleValue();  }  catch  (NumberFormatException  ex)  {  if  (Double.isInfinite(x))  {  return  x;  	final  double  rounded  =  (new  BigDecimal(Double.toString(x))  return  rounded  ==  0.0  ?  rounded  *  FastMath.copySign(1d,  x)  :  rounded;  	395	replace-2
271	logging-log4j2_3eb44094	buggy:  Level  level  =  valueOf(sArg);  return  (level  ==  null)  ?  defaultLevel  :  level;  context:  public  static  Level  toLevel(String  sArg,  Level  defaultLevel)  {  if  (sArg  ==  null)  {  return  defaultLevel;  }      Level  level  =  valueOf(sArg);      return  (level  ==  null)  ?  defaultLevel  :  level;  }  	for  (Level  level  :  values())  {  if  (level.name().equals(sArg))  {  return  level;  }  }  return  defaultLevel;  	99	replace-3
272	jackrabbit-oak_a8c925e0	buggy:  context:  x.list.retainAll(list);  }  }  public  void  restrictProperty(String  propertyName,  Operator  op,  PropertyValue  v)  {  PropertyRestriction  x  =  addRestricition(propertyName);  PropertyValue  oldFirst  =  x.first;  PropertyValue  oldLast  =  x.last;  switch  (op)  {  case  EQUAL:  x.first  =  maxValue(oldFirst,  v);  x.firstIncluding  =  x.first  ==  oldFirst  ?  x.firstIncluding  :  true;  x.last  =  minValue(oldLast,  v);  	if  (x.first  !=  null  &&  x.last  ==  x.first  &&  x.firstIncluding  &&  x.lastIncluding)  {  return;  }  	254	add
273	wicket_debca73b	buggy:  if  (wasLeaf)  invalidateNodeWithChildren(grandparentNode);  context:  List<?>  eventChildren  =  Arrays.asList(e.getChildren());  boolean  wasLeaf  =  true;  int  nodeChildCount  =  getChildCount(parentNode);  for  (int  i  =  0;  wasLeaf  &&  i  <  nodeChildCount;  i++)  {  wasLeaf  =  eventChildren.contains(getChildAt(parentNode,  i));  }  if  (wasLeaf)  {  //  parentNode  now  has  children  for  the  first  time,  so  we  need  to  invalidate  Object  grandparentNode  =  getParentNode(parentNode);  invalidateNodeWithChildren(grandparentNode);  	if  (wasLeaf  &&  !(parentItem.getParentItem()  ==  null  &&  isRootLess()))  if  (!(getParentNode(grandparentNode)  ==  null  &&  isRootLess()))  {  invalidateNodeWithChildren(grandparentNode);  }  	835	replace-3
274	accumulo_6c565dfb	buggy:  throw  new  IllegalArgumentException(e.getMessage());  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,   "Unable  to  load   "  +  className  +   "  as  type   "  +  OptionDescriber.class.getName()  +   ";  configure  with  'config'  instead ");  context:  private  static  String  setUpOptions(ClassLoader  classloader,  final  ConsoleReader  reader,  final  String  className,  final  Map<String,String>  options)  throws  IOException,  ShellCommandException  {  String  input;  OptionDescriber  skvi;  Class<?  extends  OptionDescriber>  clazz;  try  {  clazz  =  classloader.loadClass(className).asSubclass(OptionDescriber.class);  skvi  =  clazz.newInstance();  }  catch  (ClassNotFoundException  e)  {    throw  new  IllegalArgumentException(e.getMessage());  }  catch  (InstantiationException  e)  {  throw  new  IllegalArgumentException(e.getMessage());  	StringBuilder  msg  =  new  StringBuilder( "Unable  to  load   ").append(className);  if  (className.indexOf('.')  <  0)  {  msg.append( ";  did  you  use  a  fully  qualified  package  name? ");  }  else  {  msg.append( ";  class  not  found. ");  }  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,  msg.toString());  StringBuilder  msg  =  new  StringBuilder( "Loaded   ");  msg.append(className).append( "  but  it  does  not  implement   ");  msg.append(OptionDescriber.class.getSimpleName());  msg.append( ";  use  'config  -s'  instead. ");  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,  msg.toString());  	178	replace-3
275	logging-log4j2_4cf831b6	buggy:  context:  public  Log4jMarker(final  org.apache.logging.log4j.Marker  marker)  {  this.marker  =  marker;  }  public  org.apache.logging.log4j.Marker  getLog4jMarker()  {  return  marker;  }  public  void  add(final  Marker  marker)  {  final  Marker  m  =  factory.getMarker(marker.getName());  this.marker.addParents(((Log4jMarker)m).getLog4jMarker());  }  public  boolean  remove(final  Marker  marker)  {  return  marker  !=  null  ?  this.marker.remove(MarkerManager.getMarker(marker.getName()))  :  false;  	if  (marker  ==  null)  {  throw  new  IllegalArgumentException();  }  	53	add
276	jackrabbit-oak_ffa818f3	buggy:  return  raw[i]  -  other[i];  context:  return  StringUtils.convertBytesToHex(raw);  }  public  int  compareTo(Id  o)  {  byte[]  other  =  o.getBytes();  int  len  =  Math.min(raw.length,  other.length);  for  (int  i  =  0;  i  <  len;  i++)  {  if  (raw[i]  !=  other[i])  {      return  raw[i]  -  other[i];  }  }  return  raw.length  -  other.length;  }  	final  int  rawValue  =  raw[i]  &  0xFF;  //  unsigned  value  final  int  otherValue  =  other[i]  &  0xFF;  //  unsigned  value  return  rawValue  -  otherValue;  	116	replace-1
277	commons-math_b6bf8f41	buggy:  int  sum  =  0;  context:  final  List<Cluster<T>>  resultSet  =  new  ArrayList<Cluster<T>>();  final  T  firstPoint  =  pointSet.remove(random.nextInt(pointSet.size()));  resultSet.add(new  Cluster<T>(firstPoint));  final  double[]  dx2  =  new  double[pointSet.size()];  while  (resultSet.size()  <  k)  {      int  sum  =  0;  for  (int  i  =  0;  i  <  pointSet.size();  i++)  {  final  T  p  =  pointSet.get(i);  final  Cluster<T>  nearest  =  getNearestCluster(resultSet,  p);  final  double  d  =  p.distanceFrom(nearest.getCenter());  sum  +=  d  *  d;  dx2[i]  =  sum;  }  	double  sum  =  0;  	175	replace-1
278	accumulo_fb25913c	buggy:          case  FOLDER:              context:  public  class  AccumuloVFSClassLoader  {  public  static  class  AccumuloVFSClassLoaderShutdownThread  implements  Runnable  {  public  void  run()  {  try  {  AccumuloVFSClassLoader.close();  }  catch  (Exception  e)  {  	                                                  case  FOLDER:  pathsToMonitor.add(fo);  for  (FileObject  child  :  fo.getChildren())  {  classpath.add(child);  }  break;                                                                	61	replace-57
279	jackrabbit-oak_1d08cbd3	buggy:  for  (List<RevisionRange>  list  :  map.values())  {  context:  public  long  getMinimumTimestamp(@Nonnull  Revision  revision,  long  timestamp  =  checkNotNull(revision).getTimestamp();  Revision  seenAt  =  getRevisionSeen(revision);  if  (seenAt  ==  null)  {  return  timestamp;  }      for  (List<RevisionRange>  list  :  map.values())  {  RevisionRange  range;  	for  (Map.Entry<Integer,  List<RevisionRange>>  e  :  map.entrySet())  {  if  (revision.getClusterId()  ==  currentClusterNodeId  &&  e.getKey()  ==  currentClusterNodeId)  {  continue;  }  List<RevisionRange>  list  =  e.getValue();  	557	replace-1
280	logging-log4j2_a523dcd5	buggy:  if  (usedParams  <  argCount  &&  this.throwable  ==  null  &&  params[argCount  -  1]  instanceof  Throwable)  {  context:  private  static  int  count(final  String  messagePattern,  final  int[]  indices)  {  try  {  return  ParameterFormatter.countArgumentPlaceholders2(messagePattern,  indices);  }  catch  (final  Exception  ex)  {  //  fallback  if  more  than  int[]  length  (256)  parameter  placeholders  return  ParameterFormatter.countArgumentPlaceholders(messagePattern);  }  }  private  void  initThrowable(final  Object[]  params,  final  int  argCount,  final  int  usedParams)  {      if  (usedParams  <  argCount  &&  this.throwable  ==  null  &&  params[argCount  -  1]  instanceof  Throwable)  {  this.throwable  =  (Throwable)  params[argCount  -  1];  }  }  ReusableParameterizedMessage  set(String  messagePattern,  Object...  arguments)  {  init(messagePattern,  arguments  ==  null  ?  0  :  arguments.length,  arguments);  	if  (usedParams  <  argCount  &&  params[argCount  -  1]  instanceof  Throwable)  {  }  else  {  this.throwable  =  null;  	124	replace-1
281	camel_69b00a31	buggy:  context:  try  {  Method  method  =  ObjectHelper.class.getMethod( "arrayLength ",  Object[].class);  ParameterInfo  pi  =  new  ParameterInfo(0,  Object[].class,  null,  ExpressionBuilder.mandatoryBodyExpression(Object[].class,  true));  List<ParameterInfo>  lpi  =  new  ArrayList<ParameterInfo>(1);  lpi.add(pi);  methodInfo  =  new  MethodInfo(exchange.getContext(),  pojo.getClass(),  method,  lpi,  lpi,  false,  false);  }  catch  (NoSuchMethodException  e)  {  throw  new  MethodNotFoundException(exchange,  pojo,   "getClass ");  }  }  else  {  List<MethodInfo>  methods  =  getOperations(name);  if  (methods  !=  null  &&  methods.size()  ==  1)  {  methodInfo  =  methods.get(0);  	exchange.getIn().setBody(pojo);  	232	add
282	logging-log4j2_d8af1c93	buggy:  var  =  var.substring(prefixPos);  context:  String  name  =  var.substring(prefixPos  +  1);  StrLookup  lookup  =  lookups.get(prefix);  String  value  =  null;  if  (lookup  !=  null)  {  value  =  event  ==  null  ?  lookup.lookup(name)  :  lookup.lookup(event,  name);  }  if  (value  !=  null)  {  return  value;  }      var  =  var.substring(prefixPos);  }  if  (defaultLookup  !=  null)  {  return  event  ==  null  ?  defaultLookup.lookup(var)  :  defaultLookup.lookup(event,  var);  }  return  null;  }  	var  =  var.substring(prefixPos  +  1);  	110	replace-1
283	logging-log4j2_9d817953	buggy:  return   "text/xml ";  context:  result.put( "dtd ",   "log4j.dtd ");  result.put( "version ",   "1.2 ");  return  result;  }  public  String  getContentType()  {      return   "text/xml ";  }  List<String>  getThrowableString(final  Throwable  throwable)  {  final  StringWriter  sw  =  new  StringWriter();  final  PrintWriter  pw  =  new  PrintWriter(sw);  try  {  throwable.printStackTrace(pw);  }  catch  (final  RuntimeException  ex)  {  	return   "text/xml;  charset= "  +  this.getCharset();  	242	replace-1
284	wicket_56169634	buggy:  return  mountSegments.length;  context:  }  public  int  getCompatibilityScore(Request  request)  {  if  (urlStartsWith(request.getUrl(),  mountSegments))  {  return  mountSegments.length;  	int  countOptional  =  0;  int  fixedSegments  =  0;  for  (MountPathSegment  pathSegment  :  pathSegments)  {  fixedSegments  +=  pathSegment.getFixedPartSize();  countOptional  +=  pathSegment.getOptionalParameters();  }  return  mountSegments.length  -  countOptional  +  fixedSegments;  	498	replace-1
285	jackrabbit-oak_8159fc21	buggy:  if  (x  instanceof  BooleanQuery)  {  BooleanQuery  bq  =  (BooleanQuery)  x;  for  (BooleanClause  c  :  bq.clauses())  {  q.add(c);  }  }  else  {  q.add(x,  MUST);  }  context:  result.set(q);  return  true;  }  public  boolean  visit(FullTextAnd  and)  {  BooleanQuery  q  =  new  BooleanQuery();  for  (FullTextExpression  e  :  and.list)  {  Query  x  =  getFullTextQuery(e,  analyzer,  reader);          //  Lucene  can't  deal  with   "must(must_not(x)) "          if  (x  instanceof  BooleanQuery)  {          BooleanQuery  bq  =  (BooleanQuery)  x;          for  (BooleanClause  c  :  bq.clauses())  {          q.add(c);          }          }  else  {          q.add(x,  MUST);          }  }  	q.add(x,  MUST);  	728	replace-8
286	camel_1e54865c	buggy:  lifecycleStrategies.clear();  context:  EventHelper.notifyCamelContextStopped(this);  for  (EventNotifier  notifier  :  getManagementStrategy().getEventNotifiers())  {  shutdownServices(notifier);  }  shutdownServices(managementStrategy);  shutdownServices(lifecycleStrategies);      lifecycleStrategies.clear();  forceStopLazyInitialization();  stopWatch.stop();  if  (log.isInfoEnabled())  {  		1563	remove-1
287	accumulo_742960f1	buggy:  context:  if  (opts.ranges  ==  null)  {  ranges.add(new  Range());  }  else  {  for  (org.apache.accumulo.proxy.thrift.Range  range  :  opts.ranges)  {  Range  aRange  =  new  Range(range.getStart()  ==  null  ?  null  :  Util.fromThrift(range.getStart()),  true,  range.getStop()  ==  null  ?  null  :  Util.fromThrift(range.getStop()),  false);  ranges.add(aRange);  }  }  scanner.setRanges(ranges);  }  	  if  (opts.columns  !=  null)  {  for  (ScanColumn  col  :  opts.columns)  {  if  (col.isSetColQualifier())  scanner.fetchColumn(ByteBufferUtil.toText(col.colFamily),  ByteBufferUtil.toText(col.colQualifier));  else  scanner.fetchColumnFamily(ByteBufferUtil.toText(col.colFamily));  }  }    	822	add
288	wicket_7ae109a6	buggy:  else  if  (getRedirectPolicy()  ==  RedirectPolicy.NEVER_REDIRECT  ||  isOnePassRender()  //  context:  boolean  isAjax  =  isAjax(requestCycle);  boolean  shouldPreserveClientUrl  =  ((WebRequest)requestCycle.getRequest()).shouldPreserveClientUrl();  if  (bufferedResponse  !=  null)  {  bufferedResponse.writeTo((WebResponse)requestCycle.getResponse());  }  else  if  (getRedirectPolicy()  ==  RedirectPolicy.NEVER_REDIRECT  ||  isOnePassRender()  //  ||  (!isAjax  //  &&  (targetUrl.equals(currentUrl)  &&  !getPageProvider().isNewPageInstance()  &&  !getPage().isPageStateless())  //  ||  (targetUrl.equals(currentUrl)  &&  isRedirectToRender())  //  )  //  ||  shouldPreserveClientUrl)  //  	else  if  (getRedirectPolicy()  ==  RedirectPolicy.NEVER_REDIRECT  ||  (isOnePassRender()  &&  isAjax  ==  false)  //  	166	replace-1
289	jackrabbit-oak_5138a1e2	buggy:  recent.clear();  context:  }  RecordId  previousBaseId  =  entries  ==  null  ?  null  :  entries.getRecordId();  entries  =  writer.writeMap(entries,  segmentIdMap);  entries.getSegment().getSegmentId().pin();  String  mapInfo  =  PERSISTED_COMPACTION_MAP  +  '{'  +   "id= "  +  entries.getRecordId()  +   ",  baseId= "  +  previousBaseId  +  '}';  writer.writeString(mapInfo);  writer.flush();      recent.clear();  }  if  (recordCount  ==  0)  {  entries  =  null;  }  }  	recent.clear();  	232	replace-1
290	accumulo_a3267d3e	buggy:  private  ULongLexicoder  longEncoder  =  new  ULongLexicoder();  context:  package  org.apache.accumulo.core.client.lexicoder;  public  class  DateLexicoder  implements  Lexicoder<Date>  {    private  ULongLexicoder  longEncoder  =  new  ULongLexicoder();  public  byte[]  encode(Date  data)  {  return  longEncoder.encode(data.getTime());  }  	  private  LongLexicoder  longEncoder  =  new  LongLexicoder();        	27	replace-5
291	wicket_a4caaa57	buggy:  return  super.put(key,  unescapeHtml(value));  context:  public  TagAttributes(final  IValueMap  map)  {  super();  putAll(map);  }  public  final  Object  put(String  key,  Object  value)  {  return  super.put(key,  unescapeHtml(value));  }  public  final  void  putAll(Map<?  extends  String,  ?>  map)  {  for  (Map.Entry<?  extends  String,  ?>  entry  :  map.entrySet())  {  String  key  =  entry.getKey();  	return  super.put(key,  value);  	57	replace-1
292	maven_2169c4a3	buggy:  validateEnum(   "dependencies.dependency.scope ",  problems,  warnOnBadDependencyScope,  d.getScope(),  context:  {  addViolation(  problems,  false,   "For  dependency   "  +  d  +   ":  only  dependency  with  system  scope  can  specify  systemPath. "  );  }  if  (  request.getValidationLevel()  >=  ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0  )  {  validateBoolean(   "dependencies.dependency.optional ",  problems,  warnOnBadBoolean,  d.getOptional(),  d.getManagementKey()  );      validateEnum(   "dependencies.dependency.scope ",  problems,  warnOnBadDependencyScope,  d.getScope(),  d.getManagementKey(),   "provided ",   "compile ",   "runtime ",   "test ",   "system "  );  }  }  	validateEnum(   "dependencies.dependency.scope ",  problems,  true,  d.getScope(),  	184	replace-1
293	jackrabbit-oak_78c37386	buggy:  data  =  ByteBuffer.wrap(buffer);  context:  log.debug( "Writing  data  segment  {}  ({}  bytes) ",  id,  length);  store.writeSegment(id,  buffer,  buffer.length  -  length,  length);  ByteBuffer  data;  if  (buffer.length  -  length  >  4096)  {  data  =  ByteBuffer.allocate(length);  data.put(buffer,  buffer.length  -  length,  length);  data.rewind();  }  else  {      data  =  ByteBuffer.wrap(buffer);  }  tracker.setSegment(id,  new  Segment(tracker,  id,  data));  buffer  =  createNewBuffer();  roots.clear();  blobrefs.clear();  length  =  0;  position  =  buffer.length;  	data  =  ByteBuffer.wrap(buffer,  buffer.length  -  length,  length);  	222	replace-1
294	wicket_518c933b	buggy:  if  (path.contains( ".. "))  context:  result.append( "// ");  }  result.append(host);  if  (port  !=  null  &&  port.equals(getDefaultPortForProtocol(protocol))  ==  false)  {  result.append(':');  result.append(port);  }  if  (path.contains( ".. "))  {  throw  new  IllegalStateException( "Cannot  render  this  url  in   "  +  StringMode.FULL.name()  +   "  mode  because  it  has  a  `..`  segment:   "  +  toString());  }  if  (!path.startsWith( "/ "))  {  result.append('/');  	if  (segments.contains( ".. "))  	677	replace-1
295	commons-math_185e3033	buggy:    public  abstract  class  BitsStreamGenerator  implements  RandomGenerator  {    context:  package  org.apache.commons.math3.random;    	  public  abstract  class  BitsStreamGenerator  implements  RandomGenerator,  Serializable  {  private  static  final  long  serialVersionUID  =  20130104L;  	20	replace-4
296	wicket_24ac1a35	buggy:  visitChildren(FormComponent.class,  new  IVisitor<Component>()  return  visitor.component(component);  context:  {  error[0]  =  true;  return  Component.IVisitor.STOP_TRAVERSAL;  }  return  Component.IVisitor.CONTINUE_TRAVERSAL;  }  };  visitChildren(FormComponent.class,  new  IVisitor<Component>()  {  public  Object  component(final  Component  component)  {  return  visitor.component(component);  	visitChildren(Component.class,  new  IVisitor<Component>()  if  ((component  instanceof  Form)  ||  (component  instanceof  FormComponent))  {  return  visitor.component(component);  }  return  Component.IVisitor.CONTINUE_TRAVERSAL;  	1241	replace-2
297	logging-log4j2_4786a739	buggy:  private  void  formatCause(final  StringBuilder  sb,  final  ThrowableProxy  cause,  final  List<String>  ignorePackages)  {  if  (cause  ==  null)  {  return;  }  sb.append( "Caused  by:   ").append(cause).append(EOL);  this.formatElements(sb,  cause.commonElementCount,  cause.getThrowable().getStackTrace(),  cause.extendedStackTrace,  ignorePackages);  this.formatCause(sb,  cause.causeProxy,  ignorePackages);  }  context:  if  (!Arrays.equals(this.extendedStackTrace,  other.extendedStackTrace))  {  return  false;  }  if  (!Arrays.equals(this.suppressedProxies,  other.suppressedProxies))  {  return  false;  }  return  true;  }  private  void  formatCause(final  StringBuilder  sb,  final  ThrowableProxy  cause,  final  List<String>  ignorePackages)  {      if  (cause  ==  null)  {      return;      }      sb.append( "Caused  by:   ").append(cause).append(EOL);      this.formatElements(sb,  cause.commonElementCount,  cause.getThrowable().getStackTrace(),      cause.extendedStackTrace,  ignorePackages);      this.formatCause(sb,  cause.causeProxy,  ignorePackages);  }  	private  void  formatCause(final  StringBuilder  sb,  final  ThrowableProxy  cause,  final  List<String>  ignorePackages)  {  if  (cause  ==  null)  {  return;  }  sb.append( "Caused  by:   ").append(cause).append(EOL);  this.formatElements(sb,  cause.commonElementCount,  cause.getStackTrace(),  cause.extendedStackTrace,  ignorePackages);  this.formatCause(sb,  cause.causeProxy,  ignorePackages);  }  	205	replace-9
298	wicket_d450acb0	buggy:  context:  beforeUpdateFormComponentModels();  updateFormComponentModels();  onValidateModelObjects();  if  (hasError())  {  callOnError(submittingComponent);  }  delegateSubmit(submittingComponent);  }  final  PageParameters  parameters  =  page.getPageParameters();  	return;  	800	add
299	logging-log4j2_3f1e0fdc	buggy:  if  (priorEvents  ==  null  ||  priorEvents.length  ==  0)  {  return;  //  nothing  to  do,  another  thread  already  took  all  events  }  context:  public  void  sendEvents(final  Layout<?>  layout,  final  LogEvent  appendEvent)  {  if  (message  ==  null)  {  connect();  }  try  {  final  LogEvent[]  priorEvents  =  buffer.removeAll();      if  (priorEvents  ==  null  ||  priorEvents.length  ==  0)  {      return;  //  nothing  to  do,  another  thread  already  took  all  events      }  final  byte[]  rawBytes  =  formatContentToBytes(priorEvents,  appendEvent,  layout);  final  String  contentType  =  layout.getContentType();  final  String  encoding  =  getEncoding(rawBytes,  contentType);  final  byte[]  encodedBytes  =  encodeContentToBytes(rawBytes,  encoding);  	  	139	replace-3
300	jackrabbit-oak_531aca78	buggy:  if(values[i].isArray()){  }else{  context:  throw  new  RepositoryException(e);  }  }  public  Value[]  getValues()  throws  RepositoryException  {  PropertyValue[]  values  =  row.getValues();  int  len  =  values.length;  Value[]  v2  =  new  Value[values.length];  for  (int  i  =  0;  i  <  len;  i++)  {      if(values[i].isArray()){  v2[i]  =  result.createValue(mvpToString(values[i]));      }else{  v2[i]  =  result.createValue(values[i]);  }  }  return  v2;  }  	if  (values[i]  !=  null  &&  values[i].isArray())  {  }  else  {  	103	replace-2
301	commons-math_5b9302d5	buggy:  context:  }  /**  Multiply  this  by  a  single  digit  0&lt;=x&lt;radix.  *  There  are  speed  advantages  in  this  special  case  public  Dfp  multiply(final  int  x)  {  	if  (x  >=  0  &&  x  <  RADIX)  {  return  multiplyFast(x);  }  else  {  return  multiply(newInstance(x));  }  }    private  Dfp  multiplyFast(final  int  x)  {  	1605	add
302	wicket_e6582c52	buggy:  if  (storedPageInstance  !=  null  &&  (pageClass  ==  null  ||  pageClass.equals(storedPageInstance.getClass())))  pageInstance  =  storedPageInstance;  pageInstanceIsFresh  =  false;  if  (pageInstance  !=  null)  context:  private  IRequestablePage  getStoredPage(final  int  pageId)  {  IRequestablePage  storedPageInstance  =  getPageSource().getPageInstance(pageId);  if  (storedPageInstance  !=  null  &&  (pageClass  ==  null  ||  pageClass.equals(storedPageInstance.getClass())))  {  pageInstance  =  storedPageInstance;  pageInstanceIsFresh  =  false;  if  (pageInstance  !=  null)  {  	if  (storedPageInstance  !=  null)  if  (pageClass  ==  null  ||  pageClass.equals(storedPageInstance.getClass()))  pageInstance  =  storedPageInstance;  pageInstanceIsFresh  =  false;  else  {  storedPageInstance  =  null;  }  	297	replace-5
303	accumulo_6ff92b12	buggy:  while  (scanner.hasNextLine())  context:  reader.setHistory(history);  }  catch  (IOException  e)  {  log.warn( "Unable  to  load  history  file  at   "  +  historyPath);  }  ShellCompletor  userCompletor  =  null;  if  (execFile  !=  null)  {  java.util.Scanner  scanner  =  new  java.util.Scanner(new  File(execFile));  try  {      while  (scanner.hasNextLine())  execCommand(scanner.nextLine(),  true,  isVerbose());  }  finally  {  scanner.close();  	try  {  while  (scanner.hasNextLine()  &&  !hasExited())  {  }  }  finally  {  scanner.close();  }  	450	replace-1
304	logging-log4j2_300bc575	buggy:  context:  public  boolean  isEmpty()  {  final  Map<String,  String>  map  =  localMap.get();  return  map  ==  null  ||  map.size()  ==  0;  }  }  	  @Override  public  String  toString()  {  Map<String,  String>  map  =  localMap.get();  return  map  ==  null  ?   "{} "  :  map.toString();  }  	142	add
305	jackrabbit-oak_6d8146f8	buggy:  if  ( "/:[]|* ".indexOf(ch)  !=  -1)  {  //  TODO:  XMLChar  check  return  false;  context:  return  prefix.indexOf(':')  ==  -1;  }  public  static  boolean  isValidLocalName(String  local)  {  if  (local.isEmpty()  ||   ". ".equals(local)  ||   ".. ".equals(local))  {  return  false;  }  for  (int  i  =  0;  i  <  local.length();  i++)  {  char  ch  =  local.charAt(i);      if  ( "/:[]|* ".indexOf(ch)  !=  -1)  {  //  TODO:  XMLChar  check      return  false;  }  }  	if  (i  ==  0  &&  Character.isWhitespace(ch))  {  return  false;  //  leading  whitespace  }  else  if  (i  ==  local.length()  -  1  &&  Character.isWhitespace(ch))  {  return  false;  //  trailing  whitespace  }  else  if  ( "/:[]|* ".indexOf(ch)  !=  -1)  {  //  TODO:  XMLChar  check  return  false;  //  invalid  name  character  	247	replace-2
306	commons-math_8f35fcb8	buggy:  super(LocalizedFormats.UNKNOWN_PARAMETER);  context:  private  final  String  name;  public  UnknownParameterException(final  String  name)  {      super(LocalizedFormats.UNKNOWN_PARAMETER);  this.name  =  name;  }  public  String  getName()  {  return  name;  	super(LocalizedFormats.UNKNOWN_PARAMETER,  name);  	41	replace-1
307	jackrabbit-oak_2b5d3afb	buggy:  }  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:& ".indexOf(c)  >=  0)  {  context:  char  c  =  text.charAt(i);  if  (c  ==  '*')  {  buff.append('%');  pattern  =  true;  }  else  if  (c  ==  '?')  {  buff.append('_');  pattern  =  true;  }  else  if  (c  ==  '_')  {  buff.append( "\\_ ");  pattern  =  true;      }  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:& ".indexOf(c)  >=  0)  {  buff.append(c);  }  }  this.filteredText  =  buff.toString().toLowerCase();  }  if  (pattern)  {  like  =  new  LikePattern( "% "  +  filteredText  +   "% ");  }  else  {  	}  else  if  (Character.isLetterOrDigit(c)  ||   "  +-:&/ ".indexOf(c)  >=  0)  {  	70	replace-1
308	accumulo_47c64d9a	buggy:  Map<String,String>  propMap  =  new  HashMap<String,String>();  Iterator<?>  iter  =  this.getKeys(property.getKey());  context:  public  Map<String,String>  getAllPropertiesWithPrefix(ClientProperty  property)  {  checkType(property,  PropertyType.PREFIX);  Map<String,String>  propMap  =  new  HashMap<String,String>();  Iterator<?>  iter  =  this.getKeys(property.getKey());  while  (iter.hasNext())  {  String  p  =  (String)  iter.next();  	Map<String,String>  propMap  =  new  HashMap<>();  String  prefix  =  property.getKey();  if  (prefix.endsWith( ". "))  {  prefix  =  prefix.substring(0,  prefix.length()  -  1);  }  Iterator<?>  iter  =  this.getKeys(prefix);  	305	replace-2
309	wicket_a3a5a40f	buggy:  if  (setRenderingFlag)  {  setFlag(FLAG_PREPARED_FOR_RENDER,  false);  setFlag(FLAG_RENDERING,  true);  }  else  {  setFlag(FLAG_RENDERING,  false);  }  context:  exceptionMessage( "Component  is  not  a  container  and  so  does  not  contain  the  path   "  +  path));  }  void  internalMarkRendering(boolean  setRenderingFlag)  {  if  (setRenderingFlag)  {  setFlag(FLAG_PREPARED_FOR_RENDER,  false);  setFlag(FLAG_RENDERING,  true);  }  else  {  setFlag(FLAG_RENDERING,  false);  }  	setFlag(FLAG_PREPARED_FOR_RENDER,  false);    setFlag(FLAG_RENDERING,  setRenderingFlag);  	4203	replace-9
310	flink_6bc6dbec	buggy:  context:  toRemove  =  0;  }  }  protected  boolean  currentEligible(T  next)  {  return  windowStartTime  ==  timestampWrapper.getStartTime()  ||  timestampWrapper.getTimestamp(next)  -  windowStartTime  >=  slideSize;  }  }  	elementsSinceLastPreAggregate  =  0;  	102	add
311	flink_a5b05566	buggy:  CommandLine  line  =  parser.parse(INFO_OPTIONS,  args,  false);  context:  return  new  SavepointOptions(line);  }  catch  (ParseException  e)  {  throw  new  CliArgsException(e.getMessage());  }  }  public  static  InfoOptions  parseInfoCommand(String[]  args)  throws  CliArgsException  {  try  {  PosixParser  parser  =  new  PosixParser();  CommandLine  line  =  parser.parse(INFO_OPTIONS,  args,  false);  return  new  InfoOptions(line);  }  catch  (ParseException  e)  {  throw  new  CliArgsException(e.getMessage());  }  }  public  static  FlinkYarnSessionCli  getFlinkYarnSessionCli()  {  	CommandLine  line  =  parser.parse(INFO_OPTIONS,  args,  true);  	342	replace-1
312	maven_8cdb461f	buggy:  dependency.setScope(  Artifact.SCOPE_RUNTIME  );  context:  throws  PluginResolutionException  {  if  (  pluginArtifact  ==  null  )  {  pluginArtifact  =  repositorySystem.createPluginArtifact(  plugin  );  }  Set<Artifact>  overrideArtifacts  =  new  LinkedHashSet<Artifact>();  for  (  Dependency  dependency  :  plugin.getDependencies()  )  {      dependency.setScope(  Artifact.SCOPE_RUNTIME  );  overrideArtifacts.add(  repositorySystem.createDependencyArtifact(  dependency  )  );  }  ArtifactFilter  collectionFilter  =  new  ScopeArtifactFilter(  Artifact.SCOPE_RUNTIME_PLUS_SYSTEM  );  	if  (  !Artifact.SCOPE_SYSTEM.equals(  dependency.getScope()  )  )  {  dependency.setScope(  Artifact.SCOPE_RUNTIME  );  }  	101	replace-1
313	wicket_71b6e905	buggy:  return  PropertyResolver.getPropertyClass(expression,  ((IObjectClassAwareModel<?>)this.target).getObjectClass());  context:  }  catch  (Exception  e)  {  }  }  else  if  (this.target  instanceof  IObjectClassAwareModel)  {  try  {  return  PropertyResolver.getPropertyClass(expression,  ((IObjectClassAwareModel<?>)this.target).getObjectClass());  }  catch  (WicketRuntimeException  e)  {  	Class<?>  targetClass  =  ((IObjectClassAwareModel<?>)this.target).getObjectClass();  if  (targetClass  !=  null)  {  return  PropertyResolver.getPropertyClass(expression,  targetClass);  }  	250	replace-2
314	flink_1f726e48	buggy:  BlockingQueueBroker.instance().get(iterationId.toString()+ "- "  context:  }  public  void  setInputsOutputs()  {  try  {  inputHandler  =  new  InputHandler<IN>(this);  iterationId  =  configuration.getIterationId();  iterationWaitTime  =  configuration.getIterationWaitTime();  shouldWait  =  iterationWaitTime  >  0;  BlockingQueueBroker.instance().get(iterationId.toString()+ "- "  }  catch  (Exception  e)  {  throw  new  StreamVertexException(String.format(   "Cannot  register  inputs  of  StreamIterationSink  %s ",  iterationId),  e);  }  }  	dataChannel  =  BlockingQueueBroker.instance().get(iterationId.toString()+ "- "  	52	replace-1
315	jackrabbit-oak_7e250001	buggy:  revision  !=  null  ?  revision.equals(other.revision)  :  other.revision  ==  null;  context:  hash  ^=  revision.hashCode();  }  return  hash;  }  public  boolean  equals(Object  obj)  {  if  (obj  instanceof  Key)  {  Key  other  =  (Key)  obj;  return  name.equals(other.name)  &&          revision  !=  null  ?  revision.equals(other.revision)  :  other.revision  ==  null;  }  return  false;  }  }  }  	(revision  !=  null  ?  revision.equals(other.revision)  :  other.revision  ==  null);  	371	replace-1
316	accumulo_9d8cc45d	buggy:  context:  }  else  {  orFields  =  false;  }  if  (options.containsKey(ENCODING))  {  encoding  =  options.get(ENCODING);  }  }  	public  SortedKeyValueIterator<Key,Value>  deepCopy(IteratorEnvironment  env)  {  Combiner  newInstance;  try  {  newInstance  =  this.getClass().newInstance();  }  catch  (Exception  e)  {  throw  new  RuntimeException(e);  }  newInstance.setSource(getSource().deepCopy(env));  newInstance.combiners  =  combiners;  newInstance.combineAllColumns  =  combineAllColumns;  return  newInstance;  }    @Override  	146	add
317	maven_806eaeb0	buggy:  context:  }  return  success;  }  public  String  toString()  {  return  artifact.toString()  +   "  ( "  +  depth  +   ") ";  }  }  	if  (  updateScope  )  {  fireEvent(  ResolutionListener.UPDATE_SCOPE,  listeners,  nearest,  farthestArtifact  );    nearestArtifact.setScope(  farthestArtifact.getScope()  );  }    	226	add
318	jackrabbit-oak_35a7f014	buggy:  context:  }  return  inputDocument;  }  private  void  deleteSubtreeWriter(SolrServer  solrServer,  String  path)  throws  IOException,  SolrServerException  {  if  (!path.startsWith( "/ "))  {  path  =   "/ "  +  path;  }  solrServer.deleteByQuery(new  StringBuilder(configuration.getPathField())  .append(':').append(path).append( "* ").toString());  }  private  void  addSubtreeWriter(SolrServer  solrServer,  String  path,  NodeState  state)  throws  IOException,  SolrServerException  {  if  (!path.startsWith( "/ "))  {  path  =   "/ "  +  path;  }  	path  =  path.replace( "/ ",   "\\/ ");  	155	add
319	commons-math_724795b5	buggy:  return  NaN;  context:  imaginary  /  divisor);  }  public  Complex  reciprocal()  {  if  (isNaN)  {  return  NaN;  }  if  (real  ==  0.0  &&  imaginary  ==  0.0)  {      return  NaN;  }  if  (isInfinite)  {  return  ZERO;  }  if  (FastMath.abs(real)  <  FastMath.abs(imaginary))  {  double  q  =  real  /  imaginary;  	return  INF;  	305	replace-1
320	commons-math_a94ff90a	buggy:  context:  tempB  will  have  52  bits  of  precision.  double  tempA  =  intPartA  *  fracPartA;  double  tempB  =  intPartA  *  fracPartB  +  intPartB  *  fracPartA  +  intPartB  *  fracPartB;  much  larger  than  the  others.  If  there  are  extra  bits  specified  from  the  pow()  function,  use  them.  */  final  double  tempC  =  tempB  +  tempA;  final  double  result;  if  (extra  !=  0.0)  {  result  =  tempC*extra*z  +  tempC*extra  +  tempC*z  +  tempB  +  tempA;  	  if  (tempC  ==  Double.POSITIVE_INFINITY)  {  return  Double.POSITIVE_INFINITY;  }    	971	add
321	camel_18c23fa8	buggy:  return  IOConverter.toString(buffer.array(),  exchange);  context:  public  static  byte[]  toByteArray(ByteBuffer  buffer)  {  byte[]  bArray  =  new  byte[buffer.limit()];  buffer.get(bArray);  return  bArray;  }  public  static  String  toString(ByteBuffer  buffer,  Exchange  exchange)  throws  IOException  {      return  IOConverter.toString(buffer.array(),  exchange);  }  public  static  ByteBuffer  toByteBuffer(byte[]  data)  {  return  ByteBuffer.wrap(data);  }  	return  IOConverter.toString(toByteArray(buffer),  exchange);  	57	replace-1
322	commons-math_86545dab	buggy:  context:  }  return  ret;  }  public  int  compareTo(Fraction  object)  {  long  nOd  =  ((long)  numerator)  *  object.denominator;  long  dOn  =  ((long)  denominator)  *  object.numerator;  return  (nOd  <  dOn)  ?  -1  :  ((nOd  >  dOn)  ?  +1  :  0);  }  	if  (epsilon  ==  0.0  &&  FastMath.abs(q1)  <  maxDenominator)  {  break;  }  	306	add
323	wicket_44a4132f	buggy:  context:  PageParameters  copy  =  new  PageParameters(info.getPageParameters());  int  dropped  =  0;  for  (int  i  =  0;  i  <  mountSegments.length;  ++i)  {  String  placeholder  =  getPlaceholder(mountSegments[i]);  String  optionalPlaceholder  =  getOptionalPlaceholder(mountSegments[i]);  if  (placeholder  !=  null)  {  url.getSegments().set(i  -  dropped,  copy.get(placeholder).toString( " "));  copy.remove(placeholder);  }  else  if  (optionalPlaceholder  !=  null)  {  	if  (!copy.getNamedKeys().contains(placeholder))  {  return  null;  }  	427	add
324	accumulo_df4b1985	buggy:  if  (sp.length  !=  2)  {  String  extension  =  sp[1];  context:  class  DispatchingFileFactory  extends  FileOperations  {  private  FileOperations  findFileFactory(String  file)  {  Path  p  =  new  Path(file);  String  name  =  p.getName();  if  (name.startsWith(Constants.MAPFILE_EXTENSION  +   "_ "))  {  return  new  MapFileOperations();  }  String[]  sp  =  name.split( "\\. ");  if  (sp.length  !=  2)  {  throw  new  IllegalArgumentException( "File  name   "  +  name  +   "  has  no  extension ");  }  String  extension  =  sp[1];  	if  (sp.length  <  2)  {  String  extension  =  sp[sp.length  -  1];  	47	replace-3
325	jackrabbit-oak_b4a93c81	buggy:  if  (conflicting  !=  null  &&  conflicting.exists())  {  context:  }  }else{  conflicting  =  currentStateIdManager.getTree(id);  }      if  (conflicting  !=  null  &&  conflicting.exists())  {  tree  =  resolveUUIDConflict(parent,  conflicting,  id,  nodeInfo);  if  (tree  ==  null)  {  	if  ((conflicting  !=  null  &&  conflicting.exists())  ||  uuidBehavior  ==  ImportUUIDBehavior.IMPORT_UUID_CREATE_NEW)  {  	407	replace-1
326	maven_4e955c05	buggy:  boolean  hasNonNull  =  ensureAtLeastOneNonNull(  os  );  boolean  isFamily  =  determineFamilyMatch(  os.getFamily()  );  boolean  isName  =  determineNameMatch(  os.getName()  );  boolean  isArch  =  determineArchMatch(  os.getArch()  );  boolean  isVersion  =  determineVersionMatch(  os.getVersion()  );  return  hasNonNull  &&  isFamily  &&  isName  &&  isArch  &&  isVersion;  context:  public  boolean  canDetermineActivation(  Profile  profile  )  {  Activation  activation  =  profile.getActivation();  return  activation  !=  null  &&  activation.getOs()  !=  null;  }  public  boolean  isActive(  Profile  profile  )  {  Activation  activation  =  profile.getActivation();  ActivationOS  os  =  activation.getOs();      boolean  hasNonNull  =  ensureAtLeastOneNonNull(  os  );      boolean  isFamily  =  determineFamilyMatch(  os.getFamily()  );      boolean  isName  =  determineNameMatch(  os.getName()  );      boolean  isArch  =  determineArchMatch(  os.getArch()  );      boolean  isVersion  =  determineVersionMatch(  os.getVersion()  );      return  hasNonNull  &&  isFamily  &&  isName  &&  isArch  &&  isVersion;  	  boolean  result  =  ensureAtLeastOneNonNull(  os  );    if  (  result  &&  os.getFamily()  !=  null  )  {  result  =  determineFamilyMatch(  os.getFamily()  );  }  if  (  result  &&  os.getName()  !=  null  )  {  result  =  determineNameMatch(  os.getName()  );  }  if  (  result  &&  os.getArch()  !=  null  )  {  result  =  determineArchMatch(  os.getArch()  );  }  if  (  result  &&  os.getVersion()  !=  null  )  {  result  =  determineVersionMatch(  os.getVersion()  );  }  return  result;        	38	replace-12
327	commons-math_f4a4464b	buggy:  return  solve(min,  max);  context:  public  double  solve(double  min,  double  max)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  return  solve(f,  min,  max);  }  public  double  solve(final  UnivariateRealFunction  f,  double  min,  double  max,  double  initial)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {      return  solve(min,  max);  }  public  double  solve(final  UnivariateRealFunction  f,  double  min,  double  max)  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  clearResult();  verifyInterval(min,max);  	return  solve(f,  min,  max);  	72	replace-1
328	camel_dd0f74c0	buggy:  failures.set(0);  context:  callback.done(true);  return  true;  }  private  boolean  rejectExchange(final  Exchange  exchange,  final  AsyncCallback  callback)  {  exchange.setException(new  RejectedExecutionException( "CircuitBreaker  Open:  failures:   "  +  failures  +   ",  lastFailure:   "  +  lastFailure));      /*      *  If  the  circuit  opens,  we  have  to  prevent  the  execution  of  any      *  processor.  The  failures  count  can  be  set  to  0.      */      failures.set(0);  callback.done(true);  return  true;  }  public  String  toString()  {  return   "CircuitBreakerLoadBalancer[ "  +  getProcessors()  +   "] ";  }  public  String  getTraceLabel()  {  		207	remove-1
329	jackrabbit-oak_ba38c380	buggy:  if  (maxMemory  <=  0)  {  throw  new  IllegalArgumentException( "Max  memory  must  be  larger  than  0 ");  context:  }  public  void  setMaxMemory(long  maxMemory)  {      if  (maxMemory  <=  0)  {      throw  new  IllegalArgumentException( "Max  memory  must  be  larger  than  0 ");  }  this.maxMemory  =  maxMemory;  if  (segments  !=  null)  {  long  max  =  1  +  maxMemory  /  segments.length;  for  (Segment<K,  V>  s  :  segments)  {  s.setMaxMemory(max);  	if  (maxMemory  <  0)  {  throw  new  IllegalArgumentException( "Max  memory  must  not  be  negative ");  	412	replace-2
330	wicket_f30bd1cb	buggy:  context:  for  (int  i  =  0;  i  <  size;  i++)  {  Object  childObject  =  children_get(i,  false);  if  (childObject  instanceof  Component)  {  final  Component  child  =  (Component)childObject;  child.detachModel();  child.setParent(null);  }  }  children  =  null;  }  }  	child.internalOnRemove();  	634	add
331	accumulo_0dc92ca1	buggy:  long  max  =  Long.MIN_VALUE;  long  min  =  Long.MAX_VALUE;  long  sum  =  0;  int  count  =  0;  double  partialStdDev  =  0;  if  (stat  >  max)  max  =  stat;  if  (stat  <  min)  min  =  stat;  sum  +=  stat;  partialStdDev  +=  stat  *  stat;  count++;  return  min;  return  max;  return  ((double)  sum)  /  count;  return  Math.sqrt(partialStdDev  /  count  -  getAverage()  *  getAverage());  return  String.format( "%,d  %,d  %,.2f  %,d ",  getMin(),  getMax(),  getAverage(),  count);  sum  =  0;  count  =  0;  partialStdDev  =  0;  }  public  long  getSum()  {  return  sum;  context:  package  org.apache.accumulo.core.util;  public  class  Stat  {    long  max  =  Long.MIN_VALUE;    long  min  =  Long.MAX_VALUE;    long  sum  =  0;    int  count  =  0;    double  partialStdDev  =  0;  	  Min  min;  Max  max;  Sum  sum;  Mean  mean;  StandardDeviation  sd;    StorelessUnivariateStatistic[]  stats;    public  Stat()  {  min  =  new  Min();  max  =  new  Max();  sum  =  new  Sum();  mean  =  new  Mean();  sd  =  new  StandardDeviation();    stats  =  new  StorelessUnivariateStatistic[]  {min,  max,  sum,  mean,  sd};  }    for  (StorelessUnivariateStatistic  statistic  :  stats)  {  statistic.increment(stat);  }    return  (long)  min.getResult();    return  (long)  max.getResult();  }    public  long  getSum()  {  return  (long)  sum.getResult();    return  mean.getResult();    return  sd.getResult();    return  String.format( "%,d  %,d  %,.2f  %,d ",  getMin(),  getMax(),  getAverage(),  mean.getN());    for  (StorelessUnivariateStatistic  statistic  :  stats)  {  statistic.clear();  }    	25	replace-35
332	commons-math_3f645310	buggy:  for  (int  i  =  0;  i  <  weights.length;  i++)  {  context:  double  accum  =  0.0;  double  dev  =  0.0;  double  accum2  =  0.0;  for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  dev  =  values[i]  -  mean;  accum  +=  weights[i]  *  (dev  *  dev);  accum2  +=  weights[i]  *  dev;  }  double  sumWts  =  0;      for  (int  i  =  0;  i  <  weights.length;  i++)  {  sumWts  +=  weights[i];  }  if  (isBiasCorrected)  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  (sumWts  -  1.0);  }  else  {  var  =  (accum  -  (accum2  *  accum2  /  sumWts))  /  sumWts;  }  	for  (int  i  =  begin;  i  <  begin  +  length;  i++)  {  	520	replace-1
333	logging-log4j2_484c865f	buggy:  context:  }  else  {  LOGGER.debug( "Processing   "  +  pluginType  +   "   "  +  entry.getKey()  +   "[ "  +  i  +   "] ");  }  final  Iterator<Map.Entry<String,  JsonNode>>  itemIter  =  n.get(i).fields();  final  List<Node>  itemChildren  =  item.getChildren();  while  (itemIter.hasNext())  {  final  Map.Entry<String,  JsonNode>  itemEntry  =  itemIter.next();  if  (itemEntry.getValue().isObject())  {  LOGGER.debug( "Processing  node  for  object   "  +  itemEntry.getKey());  itemChildren.add(constructNode(itemEntry.getKey(),  item,  itemEntry.getValue()));  }  	}  else  if  (itemEntry.getValue().isArray())  {  JsonNode  array  =  itemEntry.getValue();  String  entryName  =  itemEntry.getKey();  LOGGER.debug( "Processing  array  for  object   "  +  entryName);  final  PluginType<?>  itemEntryType  =  pluginManager.getPluginType(entryName);  for  (int  j  =  0;  j  <  array.size();  ++j)  {  itemChildren.add(constructNode(entryName,  item,  array.get(j)));  }    }  else  {  LOGGER.debug( "Node  {}  is  of  type  {} ",  entry.getKey(),  n.getNodeType());  	235	add
334	wicket_beb9086d	buggy:  url  =  getAbsoluteURL(url);  context:  {  return  httpServletResponse.encodeRedirectURL(url.toString());  }  public  void  sendRedirect(String  url)  {  try  {  redirect  =  true;  url  =  getAbsoluteURL(url);  url  =  encodeRedirectURL(url);  disableCaching();  if  (webRequest.isAjax())  {  httpServletResponse.addHeader( "Ajax-Location ",  url);  		244	remove-1
335	commons-math_cc4ab51e	buggy:  context:  public  double  probability(int  x)  {  final  double  logProbability  =  logProbability(x);  return  logProbability  ==  Double.NEGATIVE_INFINITY  ?  0  :  FastMath.exp(logProbability);  }  public  double  logProbability(int  x)  {  double  ret;  if  (x  <  0  ||  x  >  numberOfTrials)  {  ret  =  Double.NEGATIVE_INFINITY;  }  else  {  ret  =  SaddlePointExpansion.logBinomialProbability(x,  numberOfTrials,  probabilityOfSuccess,  1.0  -  probabilityOfSuccess);  	if  (numberOfTrials  ==  0)  {  return  (x  ==  0)  ?  0.  :  Double.NEGATIVE_INFINITY;  }  	109	add
336	accumulo_a5e3ed3b	buggy:  context:  set(other);  }  public  Key(TKey  tkey)  {  this.row  =  toBytes(tkey.row);  this.colFamily  =  toBytes(tkey.colFamily);  this.colQualifier  =  toBytes(tkey.colQualifier);  this.colVisibility  =  toBytes(tkey.colVisibility);  this.timestamp  =  tkey.timestamp;  this.deleted  =  false;  	  if  (row  ==  null)  {  throw  new  IllegalArgumentException( "null  row ");  }  if  (colFamily  ==  null)  {  throw  new  IllegalArgumentException( "null  column  family ");  }  if  (colQualifier  ==  null)  {  throw  new  IllegalArgumentException( "null  column  qualifier ");  }  if  (colVisibility  ==  null)  {  throw  new  IllegalArgumentException( "null  column  visibility ");  }  	294	add
337	logging-log4j2_7f391872	buggy:  return  facility.getCode()  <<  3  +  Severity.getSeverity(level).getCode();  context:  this.severity  =  severity;  }  public  static  int  getPriority(Facility  facility,  Level  level)  {      return  facility.getCode()  <<  3  +  Severity.getSeverity(level).getCode();  }  public  Facility  getFacility()  {  return  facility;  	return  (facility.getCode()  <<  3)  +  Severity.getSeverity(level).getCode();  	46	replace-1
338	logging-log4j2_afcf92eb	buggy:  if  (value.length()  >  MAX_LENGTH)  {  throw  new  IllegalArgumentException( "Structured  data  values  are  limited  to  32  characters.  key:   "  +  key  +  context:  return  message;  }  protected  void  setMessageFormat(String  msg)  {  this.message  =  msg;  }  protected  void  validate(String  key,  String  value)  {      if  (value.length()  >  MAX_LENGTH)  {      throw  new  IllegalArgumentException( "Structured  data  values  are  limited  to  32  characters.  key:   "  +  key  +   "  value:   "  +  value);  }  }  	if  (key.length()  >  MAX_LENGTH)  {  throw  new  IllegalArgumentException( "Structured  data  keys  are  limited  to  32  characters.  key:   "  +  key  +  	191	replace-2
339	commons-math_6d6649ef	buggy:  return  (a  <=  b)  ?  b  :  (Float.isNaN(a  +  b)  ?  Float.NaN  :  b);  context:  public  static  long  max(final  long  a,  final  long  b)  {  return  (a  <=  b)  ?  b  :  a;  }  public  static  float  max(final  float  a,  final  float  b)  {      return  (a  <=  b)  ?  b  :  (Float.isNaN(a  +  b)  ?  Float.NaN  :  b);  }  public  static  double  max(final  double  a,  final  double  b)  {  	return  (a  <=  b)  ?  b  :  (Float.isNaN(a  +  b)  ?  Float.NaN  :  a);  	3482	replace-1
340	logging-log4j2_24a3bed4	buggy:  context:  sb.append('\\');  needsQuotes  =  true;  //  ...  and  can  only  appear  in  quoted  value  break;  case  ',':  case  '=':  case  ':':  needsQuotes  =  true;  break;  }  sb.append(c);  	case  '\r':  sb.append( "\\r ");  continue;  case  '\n':  sb.append( "\\n ");  continue;  	90	add
341	jackrabbit-oak_2a489d05	buggy:  if  (propertyName  !=  null)  {  if  (f.getSelector().equals(selector))  {  String  p  =  propertyName;  if  (relativePath  !=  null)  {  p  =  PathUtils.concat(relativePath,  p);  }  p  =  normalizePropertyName(p);  restrictPropertyOnFilter(p,  f);  }  }  context:  }  }  }  public  void  bindSelector(SourceImpl  source)  {  selector  =  source.getExistingSelector(selectorName);  }  public  void  restrict(FilterImpl  f)  {      if  (propertyName  !=  null)  {      if  (f.getSelector().equals(selector))  {      String  p  =  propertyName;      if  (relativePath  !=  null)  {          p  =  PathUtils.concat(relativePath,  p);      }      p  =  normalizePropertyName(p);      restrictPropertyOnFilter(p,  f);      }      }  		276	remove-10
342	jackrabbit-oak_ea7a6199	buggy:  Value  value  =  getLatestValue(nodeStore,  getLocalMap(key),  context:  return  null;  }  String  path  =  getPath();  DocumentNodeState  n  =  new  DocumentNodeState(nodeStore,  path,  readRevision,  hasChildren());  Revision  lastRevision  =  min;  for  (String  key  :  keySet())  {  if  (!Utils.isPropertyName(key))  {  continue;  }      Value  value  =  getLatestValue(nodeStore,  getLocalMap(key),  min,  readRevision,  validRevisions,  lastRevs);  	SortedMap<Revision,  String>  local  =  getLocalMap(key);  if  (local.isEmpty())  {  continue;  }  Value  value  =  getLatestValue(nodeStore,  local,  	806	replace-1
343	wicket_081cdeb2	buggy:  final  ResourceUrl  resourceUrl  =  new  ResourceUrl(segments.get(lastSegmentAt),  parameters);  context:  }  protected  void  removeCachingDecoration(Url  url,  PageParameters  parameters)  {  final  List<String>  segments  =  url.getSegments();  if  (segments.isEmpty()  ==  false)  {  final  int  lastSegmentAt  =  segments.size()  -  1;  final  ResourceUrl  resourceUrl  =  new  ResourceUrl(segments.get(lastSegmentAt),  parameters);  	String  filename  =  segments.get(lastSegmentAt);    if(Strings.isEmpty(filename))  {  return;  }    final  ResourceUrl  resourceUrl  =  new  ResourceUrl(filename,  parameters);  	242	replace-1
344	jackrabbit-oak_1bf5c550	buggy:  context:  void  writeCommit(Id  id,  Commit  commit)  throws  Exception;  }  	stmt.execute( "create  table  if  not  exists  NODES(ID  binary  primary  key,  DATA  binary,  TIME  timestamp) ");  private  Id  readLastCommitId()  throws  Exception  {  Connection  con  =  cp.getConnection();  try  {  PreparedStatement  stmt  =  con.prepareStatement( "select  MAX(ID)  from  REVS ");  ResultSet  rs  =  stmt.executeQuery();  byte[]  rawId  =  null;  if  (rs.next())  {  rawId  =  rs.getBytes(1);  }  stmt.close();  return  rawId  ==  null  ?  null  :  new  Id(rawId);  }  finally  {  con.close();  }  }    	69	add
345	flink_d033fa8f	buggy:  private  static  void  validateInputType(Class<?>  baseClass,  Class<?>  clazz,  int  inputParamPos,  TypeInformation<?>  inType)  {  validateInfo(typeHierarchy,  getParameterType(baseClass,  typeHierarchy,  clazz,  inputParamPos),  inType);  context:  private  static  void  validateInputType(Type  t,  TypeInformation<?>  inType)  {  ArrayList<Type>  typeHierarchy  =  new  ArrayList<Type>();  try  {  validateInfo(typeHierarchy,  t,  inType);  }  catch(InvalidTypesException  e)  {  throw  new  InvalidTypesException( "Input  mismatch:   "  +  e.getMessage());  }  }  private  static  void  validateInputType(Class<?>  baseClass,  Class<?>  clazz,  int  inputParamPos,  TypeInformation<?>  inType)  {  ArrayList<Type>  typeHierarchy  =  new  ArrayList<Type>();  	private  static  void  validateInputType(Class<?>  baseClass,  Class<?>  clazz,  int  inputParamPos,  TypeInformation<?>  inTypeInfo)  {    Type  inType;  try  {  inType  =  getParameterType(baseClass,  typeHierarchy,  clazz,  inputParamPos);  }  catch  (IllegalArgumentException  e)  {  return;  //  skip  input  validation  e.g.  for  raw  types  }    validateInfo(typeHierarchy,  inType,  inTypeInfo);  	683	replace-2
346	jackrabbit-oak_b896c926	buggy:  checkArgument(!oakName.startsWith( ": "));  //  hidden  name  checkArgument(isExpandedName(oakName));  //  expanded  name  context:  int  brace  =  name.indexOf('}',  1);  return  brace  !=  -1  &&  name.substring(1,  brace).indexOf(':')  !=  -1;  }  else  {  return  false;  }  }  public  String  getJcrName(String  oakName)  {  checkNotNull(oakName);      checkArgument(!oakName.startsWith( ": "));  //  hidden  name      checkArgument(isExpandedName(oakName));  //  expanded  name  if  (hasSessionLocalMappings())  {  int  colon  =  oakName.indexOf(':');  if  (colon  >  0)  {  String  oakPrefix  =  oakName.substring(0,  colon);  String  uri  =  getNamespaceMap().get(oakPrefix);  	checkArgument(!oakName.startsWith( ": "),  oakName);  //  hidden  name  checkArgument(!isExpandedName(oakName),  oakName);  //  expanded  name  	43	replace-2
347	wicket_3431e60d	buggy:  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClass.getName());  context:  if  (!application.getHomePage().equals(pageClass)  ||  ! " ".equals(pageMapName)  ||  requestTarget  instanceof  BookmarkableListenerInterfaceRequestTarget)  {  firstParameter  =  false;  url.append('?');  url.append(WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME);  url.append('=');  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClass.getName());  	String  pageClassName  =  pageClass.getName();    try  {  pageClassName  =  URLEncoder.encode(pageClassName,   "UTF-8 ");  }  catch  (UnsupportedEncodingException  e)  {  throw  new  RuntimeException(e);  }  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClassName);  	336	replace-1
348	flink_32a003d5	buggy:    List<Channel>  inputs  =  new  ArrayList<Channel>();  collect(in1,  inputs);  collect(in2,  inputs);  newUnionNode  =  new  NAryUnionPlanNode(unionNode.getOptimizerNode(),  inputs,  unionNode.getGlobalProperties());  for  (Channel  c  :  inputs)  {  c.setTarget(newUnionNode);  }  unionNode.getOutgoingChannels().get(0).swapUnionNodes(newUnionNode);  context:  private  static  final  class  BinaryUnionReplacer  implements  Visitor<PlanNode>  {  private  final  Set<PlanNode>  seenBefore  =  new  HashSet<PlanNode>();  public  boolean  preVisit(PlanNode  visitable)  {  if  (this.seenBefore.add(visitable))  {  if  (visitable  instanceof  IterationPlanNode)  {  ((IterationPlanNode)  visitable).acceptForStepFunction(this);  }  return  true;  }  else  {  	    List<Channel>  inputs  =  new  ArrayList<Channel>();  collect(in1,  inputs);  collect(in2,  inputs);    newUnionNode  =  new  NAryUnionPlanNode(unionNode.getOptimizerNode(),  inputs,  unionNode.getGlobalProperties());    for  (Channel  c  :  inputs)  {  c.setTarget(newUnionNode);  }    for(Channel  channel  :  unionNode.getOutgoingChannels()){  channel.swapUnionNodes(newUnionNode);  }  	1198	replace-13
349	jackrabbit-oak_c2f5ca6c	buggy:  String  name  =  PathUtils.getName(c.children.get((int)  i));  context:  }  else  {  long  m  =  ((long)  maxChildNodes)  +  offset;  max  =  (int)  Math.min(m,  Integer.MAX_VALUE);  }  Children  c  =  nodeStore.getChildren(n,  null,  max);  for  (long  i  =  offset;  i  <  c.children.size();  i++)  {  if  (maxChildNodes--  <=  0)  {  break;  }      String  name  =  PathUtils.getName(c.children.get((int)  i));  json.key(name).object().endObject();  }  if  (c.hasMore)  {  json.key( ":childNodeCount ").value(Long.MAX_VALUE);  }  else  {  json.key( ":childNodeCount ").value(c.children.size());  }  	String  name  =  c.children.get((int)  i);  	217	replace-1
350	commons-math_ef9b639a	buggy:  int  sum  =  0;  final  int  dp  =  p1[i]  -  p2[i];  context:  }  public  static  double  distance(int[]  p1,  int[]  p2)  {    int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {    final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  	double  sum  =  0;  final  double  dp  =  p1[i]  -  p2[i];  	1624	replace-2
351	logging-log4j2_86d8944f	buggy:  public  boolean  remove(final  Marker  marker)  {  return  this.marker.remove(MarkerManager.getMarker(marker.getName()));  }  context:  return  marker;  }  public  void  add(final  Marker  marker)  {  final  Marker  m  =  factory.getMarker(marker.getName());  this.marker.addParents(((Log4jMarker)m).getLog4jMarker());  }  public  boolean  remove(final  Marker  marker)  {      return  this.marker.remove(MarkerManager.getMarker(marker.getName()));  }  public  String  getName()  {  return  marker.getName();  	public  boolean  remove(final  Marker  marker)  {  return  marker  !=  null  ?  this.marker.remove(MarkerManager.getMarker(marker.getName()))  :  false;  }  	58	replace-3
352	accumulo_13eb19c2	buggy:  return  deserializeFetchedColumns(conf.getStringCollection(enumToConfKey(implementingClass,  ScanOpts.COLUMNS)));  context:  public  static  Set<Pair<Text,Text>>  getFetchedColumns(Class<?>  implementingClass,  Configuration  conf)  {  ArgumentChecker.notNull(conf);  return  deserializeFetchedColumns(conf.getStringCollection(enumToConfKey(implementingClass,  ScanOpts.COLUMNS)));  	String  confValue  =  conf.get(enumToConfKey(implementingClass,  ScanOpts.COLUMNS));  List<String>  serialized  =  new  ArrayList<String>();  if  (confValue  !=  null)  {  for  (String  val  :  confValue.split( ", ",  -1))  {  serialized.add(val);  }  }  return  deserializeFetchedColumns(serialized);  	241	replace-2
353	logging-log4j2_16ad8763	buggy:  stringArgs[i]  =  obj.toString();  context:  private  void  writeObject(final  ObjectOutputStream  out)  throws  IOException  {  out.defaultWriteObject();  getFormattedMessage();  out.writeUTF(formattedMessage);  out.writeUTF(messagePattern);  out.writeInt(argArray.length);  stringArgs  =  new  String[argArray.length];  int  i  =  0;  for  (final  Object  obj  :  argArray)  {      stringArgs[i]  =  obj.toString();  }  }  private  void  readObject(final  ObjectInputStream  in)  throws  IOException,  ClassNotFoundException  {  in.defaultReadObject();  	final  String  string  =  obj.toString();  stringArgs[i]  =  string;  out.writeUTF(string);  	136	replace-1
354	maven_ce6f0bfd	buggy:  context:  public  Artifact  createProjectArtifact(  String  groupId,  String  artifactId,  String  metaVersionId  )  {  return  XcreateProjectArtifact(  groupId,  artifactId,  metaVersionId  );  }  public  Artifact  createDependencyArtifact(  Dependency  d  )  {  VersionRange  versionRange;  try  {  versionRange  =  VersionRange.createFromVersionSpec(  d.getVersion()  );  }  	if  (  d.getVersion()  ==  null  )  {  return  null;  }    	110	add
355	flink_3e233a38	buggy:  state.setDefaultState(defaultState);  context:  }  public  <S,  C  extends  Serializable>  OperatorState<S>  getOperatorState(String  name,  S  defaultState,  boolean  partitioned,  StateCheckpointer<S,  C>  checkpointer)  throws  IOException  {  if  (defaultState  ==  null)  {  throw  new  RuntimeException( "Cannot  set  default  state  to  null. ");  }  StreamOperatorState<S,  C>  state  =  (StreamOperatorState<S,  C>)  getState(name,  partitioned);  state.setDefaultState(defaultState);  state.setCheckpointer(checkpointer);  return  (OperatorState<S>)  state;  }  public  <S  extends  Serializable>  OperatorState<S>  getOperatorState(String  name,  S  defaultState,  	state.setDefaultState(defaultState);  	107	replace-1
356	jackrabbit-oak_3270e761	buggy:  ItemDefinition  definition  =  (isNode())  ?  ((Node)  this).getDefinition()  :  ((Property)  this).getDefinition();  context:  if  (!sessionDelegate.isAlive())  {  throw  new  RepositoryException( "This  session  has  been  closed. ");  }  }  void  checkProtected()  throws  RepositoryException  {      ItemDefinition  definition  =  (isNode())  ?  ((Node)  this).getDefinition()  :  ((Property)  this).getDefinition();  checkProtected(definition);  	ItemDefinition  definition;  try  {  definition  =  (isNode())  ?  ((Node)  this).getDefinition()  :  ((Property)  this).getDefinition();  }  catch  (RepositoryException  ignore)  {  return;  }  	172	replace-1
357	maven_c53d95ce	buggy:  context:  clone.setName(  original.getName()  );  clone.setDescription(  original.getDescription()  );  clone.setRequiredMavenVersion(  original.getRequiredMavenVersion()  );  clone.setPluginArtifact(  ArtifactUtils.copyArtifactSafe(  original.getPluginArtifact()  )  );  clone.setComponents(  clone(  original.getMojos(),  clone  )  );  clone.setId(  original.getId()  );  clone.setIsolatedRealm(  original.isIsolatedRealm()  );  clone.setSource(  original.getSource()  );  }  return  clone;  }  private  static  List<ComponentDescriptor<?>>  clone(  List<MojoDescriptor>  mojos,  PluginDescriptor  pluginDescriptor  )  {  List<ComponentDescriptor<?>>  clones  =  null;  	  clone.setDependencies(  original.getDependencies()  );  	99	add
358	flink_02c08456	buggy:  if(tupleElements[i]  instanceof  TypeVariable)  {  inType  =  materializeTypeVariable(returnTypeHierarchy,  (TypeVariable<?>)  tupleElements[i]);  info  =  findCorrespondingInfo(returnTypeVar,  inType,  ((TupleTypeInfo<?>)  inTypeInfo).getTypeAt(i));  if(info  !=  null)  {  break;  }  context:  if  (inType  instanceof  TypeVariable)  {  inType  =  materializeTypeVariable(returnTypeHierarchy,  (TypeVariable<?>)  inType);  info  =  findCorrespondingInfo(returnTypeVar,  inType,  inTypeInfo);  }  else  if  (inType  instanceof  ParameterizedType  &&  Tuple.class.isAssignableFrom(((Class<?>)((ParameterizedType)  inType).getRawType())))  {  Type[]  tupleElements  =  ((ParameterizedType)  inType).getActualTypeArguments();  for(int  i  =  0;  i  <  tupleElements.length;  i++)  {  if(tupleElements[i]  instanceof  TypeVariable)  {  inType  =  materializeTypeVariable(returnTypeHierarchy,  (TypeVariable<?>)  tupleElements[i]);  info  =  findCorrespondingInfo(returnTypeVar,  inType,  ((TupleTypeInfo<?>)  inTypeInfo).getTypeAt(i));  if(info  !=  null)  {  break;  }  }  	info  =  createTypeInfoFromInput(returnTypeVar,  returnTypeHierarchy,  tupleElements[i],  ((TupleTypeInfo<?>)  inTypeInfo).getTypeAt(i));  if(info  !=  null)  {  break;  	424	replace-6
359	wicket_b6259e5f	buggy:  int  oldestPos  =  indexInWindow  +  1;  if  (oldestPos  <  requestWindow.length)  arraycopy(requestWindow,  oldestPos,  copy,  0,  requestWindow.length  -  oldestPos);  arraycopy(requestWindow,  0,  copy,  requestWindow.length  -  oldestPos,  indexInWindow);  }  else  {  arraycopy(requestWindow,  0,  copy,  0,  indexInWindow);  context:  private  void  copyRequestsInOrder(RequestData[]  copy)  {  if  (hasBufferRolledOver())  {  int  oldestPos  =  indexInWindow  +  1;  if  (oldestPos  <  requestWindow.length)  arraycopy(requestWindow,  oldestPos,  copy,  0,  requestWindow.length  -  oldestPos);  	int  destPos  =  0;    destPos  =  requestWindow.length  -  indexInWindow;    arraycopy(requestWindow,  indexInWindow,  copy,  0,  destPos);    arraycopy(requestWindow,  0,  copy,  destPos,  indexInWindow);  	163	replace-9
360	jackrabbit-oak_52ca008c	buggy:  if  (mostRecent)  {  }  else  {  context:  boolean  mostRecent  =  true;  for  (Map.Entry<Revision,  String>  entry  :  doc.getLocalCommitRoot().entrySet())  {  Revision  r  =  entry.getKey();  if  (splitRevs.contains(r))  {  commitRoot.put(r,  entry.getValue());  numValues++;  }  else  if  (r.getClusterId()  ==  context.getClusterId()  &&  !changes.contains(r))  {      //  consider  all  but  most  recent  as  garbage  (OAK-3333)      if  (mostRecent)  {  mostRecent  =  false;      }  else  {  addGarbage(r,  COMMIT_ROOT);  }  }  }  	if  (mostRecent  &&  doc.isCommitted(r))  {  }  else  if  (isGarbage(r))  {  	244	replace-2
361	logging-log4j2_e7bbeceb	buggy:  if  (throwable  !=  null  &&  options.anyLines())  {  context:  public  void  format(final  LogEvent  event,  final  StringBuilder  toAppendTo)  {  ThrowableProxy  proxy  =  null;  if  (event  instanceof  Log4jLogEvent)  {  proxy  =  ((Log4jLogEvent)  event).getThrownProxy();  }  final  Throwable  throwable  =  event.getThrown();      if  (throwable  !=  null  &&  options.anyLines())  {  if  (proxy  ==  null)  {  super.format(event,  toAppendTo);  return;  }  final  String  extStackTrace  =  proxy.getExtendedStackTraceAsString(options.getPackages());  final  int  len  =  toAppendTo.length();  if  (len  >  0  &&  !Character.isWhitespace(toAppendTo.charAt(len  -  1)))  {  toAppendTo.append('  ');  	if  ((throwable  !=  null  ||  proxy  !=  null)  &&  options.anyLines())  {  	67	replace-1
362	wicket_a79ed51e	buggy:  ||  shouldPreserveClientUrl(cycle);  context:  if  (isAjax(cycle))  {  return  false;  }  return  neverRedirect(getRedirectPolicy())  ||  ((isOnePassRender()  &&  notForcedRedirect(getRedirectPolicy()))  ||  (targetUrl  .equals(currentUrl)  &&  notNewAndNotStatelessPage(isNewPageInstance(),  isPageStateless())))  ||  (targetUrl.equals(currentUrl)  &&  isRedirectToRender())  ||  shouldPreserveClientUrl(cycle);  }  private  static  boolean  notNewAndNotStatelessPage(boolean  newPageInstance,  boolean  pageStateless)  {  return  !newPageInstance  &&  !pageStateless;  }  private  static  boolean  neverRedirect(RedirectPolicy  redirectPolicy)  	||  (shouldPreserveClientUrl(cycle)  &&  notForcedRedirect(getRedirectPolicy()));  	345	replace-1
363	logging-log4j2_3b4b370e	buggy:  if  (config.rootElement  ==  null)  {  return  null;  }  context:  rootElement  =  null;  }  public  Configuration  reconfigure()  {  if  (configFile  !=  null)  {  try  {  final  ConfigurationFactory.ConfigurationSource  source  =  new  ConfigurationFactory.ConfigurationSource(new  FileInputStream(configFile),  configFile);  final  XmlConfiguration  config  =  new  XmlConfiguration(source);      if  (config.rootElement  ==  null)  {          return  null;      }  }  catch  (final  FileNotFoundException  ex)  {  LOGGER.error( "Cannot  locate  file   "  +  configFile,  ex);  }  }  return  null;  }  	return  (config.rootElement  ==  null)  ?  null  :  config;  	245	replace-3
364	wicket_1485a856	buggy:  final  Page  page  =  getPage();  String  hiddenFieldId  =  getHiddenFieldId();    context:  public  void  process(IFormSubmitter  submittingComponent)  {  //  save  the  page  in  case  the  component  is  removed  during  submit  final  Page  page  =  getPage();  String  hiddenFieldId  =  getHiddenFieldId();  if  (!isEnabledInHierarchy()  ||  !isVisibleInHierarchy())  {  return;  		800	remove-3
365	wicket_614e3b50	buggy:  context:  PageParameters  cleanParameters  =  null;  if  (originalParameters  !=  null)  {  cleanParameters  =  new  PageParameters(originalParameters);  cleanParameters.remove(WebRequest.PARAM_AJAX);  cleanParameters.remove(WebRequest.PARAM_AJAX_BASE_URL);  cleanParameters.remove(WebRequest.PARAM_AJAX_REQUEST_ANTI_CACHE);  }  return  cleanParameters;  }  	  if  (cleanParameters.isEmpty())  {  cleanParameters  =  null;  }  	101	add
366	camel_e30f1c53	buggy:  context:  return  true;  }  if  (o  ==  null  ||  getClass()  !=  o.getClass())  {  return  false;  }  KeyValueHolder<K,  V>  that  =  (KeyValueHolder<K,  V>)  o;  if  (key  !=  null  ?  !key.equals(that.key)  :  that.key  !=  null)  {  return  false;  }  return  true;  }  public  int  hashCode()  {  int  result  =  key  !=  null  ?  key.hashCode()  :  0;  	}  else  if  (value  !=  null  ?  !value.equals(that.value)  :  that.value  !=  null)  {  return  false;  	56	add
367	wicket_b293b75c	buggy:  context:  if  (url.getQueryParameters().size()  >  0)  {  PageParameters  pageParameters  =  extractPageParameters(request,  0,  pageParametersEncoder);  pageProvider  =  new  PageProvider(homePageClass,  pageParameters);  }  else  {  pageProvider  =  new  PageProvider(homePageClass);  }  return  new  RenderPageRequestHandler(pageProvider);  }  else  {  return  null;  }  }  }  	pageProvider.setPageSource(getContext());  	90	add
368	jackrabbit-oak_bc7b7e8c	buggy:  return  (ace  !=  null)  &&  ace.getPrincipal().equals(principal);  context:  throw  new  AccessControlException( "Invalid  access  control  entry. ");  }  return  (ACE)  entry;  }  private  boolean  internalAddEntry(@Nonnull  ACE  entry)  throws  RepositoryException  {  final  Principal  principal  =  entry.getPrincipal();  List<ACE>  subList  =  Lists.newArrayList(Iterables.filter(entries,  new  Predicate<ACE>()  {  public  boolean  apply(@Nullable  ACE  ace)  {      return  (ace  !=  null)  &&  ace.getPrincipal().equals(principal);  }  }));  for  (ACE  existing  :  subList)  {  PrivilegeBits  existingBits  =  PrivilegeBits.getInstance(existing.getPrivilegeBits());  PrivilegeBits  entryBits  =  entry.getPrivilegeBits();  if  (entry.getRestrictions().equals(existing.getRestrictions()))  {  if  (entry.isAllow()  ==  existing.isAllow())  {  	return  (ace  !=  null)  &&  ace.getPrincipal().getName().equals(principal.getName());  	193	replace-1
369	wicket_a382917f	buggy:  return  get(calendar,  Calendar.HOUR);  context:  public  int  getHour(final  Calendar  calendar)  {  return  get(calendar,  Calendar.HOUR);  }  public  int  getMinute()  	return  get(calendar,  Calendar.HOUR_OF_DAY);  	352	replace-1
370	jackrabbit-oak_f2740ce1	buggy:  depth  =  PathUtils.getDepth(propertyName);  context:  Filter  filter  =  plan.getFilter();  List<OrderEntry>  sortOrder  =  plan.getSortOrder();  String  pathPrefix  =  plan.getPathPrefix();  Iterable<String>  paths  =  null;  OrderedContentMirrorStoreStrategy  strategy  =  OrderedPropertyIndexLookup.getStrategy(plan.getDefinition());  int  depth  =  1;  PropertyRestriction  pr  =  plan.getPropertyRestriction();  if  (pr  !=  null)  {  String  propertyName  =  PathUtils.getName(pr.propertyName);      depth  =  PathUtils.getDepth(propertyName);  paths  =  strategy.query(plan.getFilter(),  propertyName,  plan.getDefinition(),  pr,  pathPrefix);  }  if  (paths  ==  null  &&  sortOrder  !=  null  &&  !sortOrder.isEmpty())  {  for  (OrderEntry  oe  :  sortOrder)  {  String  propertyName  =  PathUtils.getName(oe.getPropertyName());  depth  =  PathUtils.getDepth(oe.getPropertyName());  	depth  =  PathUtils.getDepth(pr.propertyName);  	194	replace-1
371	wicket_499a9c6b	buggy:  context:  void  setModelImpl(IModel<?>  model)  {  if  (getFlag(FLAG_MODEL_SET))  {  if  (model  !=  null)  {  data_set(0,  model);  }  else  {  data_remove(0);  setFlag(FLAG_MODEL_SET,  false);  }  	if  (getFlag(FLAG_INHERITABLE_MODEL)  &&  !(model  instanceof  IComponentInheritedModel))  {  setFlag(FLAG_INHERITABLE_MODEL,  false);  }  	2961	add
372	wicket_2fcb3417	buggy:  result.append(getQueryString(charset));  context:  if  (!path.startsWith( "/ "))  {  result.append('/');  }  }  result.append(path);  result.append(getQueryString(charset));  return  result.toString();  }  	  final  String  queryString  =  getQueryString(charset);  if  (queryString  !=  null)  {  result.append('?').append(queryString);  }  	717	replace-1
373	logging-log4j2_aeb6fc9d	buggy:  sb.append( "  <Entry  key= ").append(entry.getKey()).append( "> ").append(entry.getValue()).append( "</Entry>\n ");  context:  appendMap(sb);  }  }  }  return  sb.toString();  }  public  void  asXML(final  StringBuilder  sb)  {  sb.append( "<Map>\n ");  for  (final  Map.Entry<String,  String>  entry  :  data.entrySet())  {      sb.append( "  <Entry  key= ").append(entry.getKey()).append( "> ").append(entry.getValue()).append( "</Entry>\n ");  }  sb.append( "</Map> ");  }  	sb.append( "    <Entry  key=\ " ").append(entry.getKey()).append( "\ "> ").append(entry.getValue()).append( "</Entry>\n ");  	196	replace-1
374	camel_cc192f87	buggy:  if  (body  instanceof  InputStream)  {  return  new  StreamSource((InputStream)body);  }  context:  protected  Source  getSource(Exchange  exchange,  Object  body)  {  if  (body  instanceof  Source)  {  return  (Source)  body;  }  Source  source  =  null;      if  (body  instanceof  InputStream)  {      return  new  StreamSource((InputStream)body);      }  if  (body  !=  null)  {  if  (isAllowStAX())  {  source  =  exchange.getContext().getTypeConverter().tryConvertTo(StAXSource.class,  exchange,  body);  }  if  (source  ==  null)  {  source  =  exchange.getContext().getTypeConverter().tryConvertTo(SAXSource.class,  exchange,  body);  		455	remove-3
375	jackrabbit-oak_daf9a4ef	buggy:  if  (hasPendingChanges())  {  branch.setRoot(rootTree.getNodeState());  }  context:  }  }  private  void  purgePendingChanges()  {      if  (hasPendingChanges())  {      branch.setRoot(rootTree.getNodeState());      }  notifyListeners();  }  private  void  notifyListeners()  {  List<PurgeListener>  purgeListeners  =  this.purgePurgeListeners;  this.purgePurgeListeners  =  new  ArrayList<PurgeListener>();  	branch.setRoot(rootTree.getNodeState());  	228	replace-3
376	jackrabbit-oak_0598498e	buggy:  context:  private  AtomicInteger  simpleRevisionCounter;  private  final  Cache<PathRev,  DocumentNodeState>  nodeCache;  	@Nonnull  NodeState  getChildNode(@Nonnull  String  name,  @Nonnull  Revision  revision)  {  if  (!hasChildren)  {  checkValidName(name);  return  EmptyNodeState.MISSING_NODE;  }  String  p  =  PathUtils.concat(getPath(),  name);  DocumentNodeState  child  =  store.getNode(p,  checkNotNull(revision));  if  (child  ==  null)  {  checkValidName(name);  return  EmptyNodeState.MISSING_NODE;  }  else  {  return  child;  }  }    	285	add
377	logging-log4j2_17296089	buggy:  match  =  key.equals(ThreadContext.get(key));  context:  if  (toMatch  !=  null)  {  match  =  entry.getValue().contains(toMatch);  }  else  {  match  =  false;  }  if  ((!isAnd()  &&  match)  ||  (isAnd()  &&  !match))  {  break;  }  }  }  else  {      match  =  key.equals(ThreadContext.get(key));  }  return  match  ?  onMatch  :  onMismatch;  }  public  Result  filter(final  LogEvent  event)  {  return  super.filter(event.getContextMap())  ?  onMatch  :  onMismatch;  }  	match  =  value.equals(ThreadContext.get(key));  	99	replace-1
378	commons-math_aff82362	buggy:  a  <=  0.0  ||  b  <=  0.0)  {  }  else  if  (x  >  (a  +  1.0)  /  (a  +  b  +  2.0))  {  ret  =  1.0  -  regularizedBeta(1.0  -  x,  b,  a,  epsilon,  maxIterations);  context:  public  static  double  regularizedBeta(double  x,  final  double  a,  final  double  b,  double  epsilon,  int  maxIterations)  {  double  ret;  if  (Double.isNaN(x)  ||  Double.isNaN(a)  ||  Double.isNaN(b)  ||  x  <  0  ||  x  >  1  ||      a  <=  0.0  ||      b  <=  0.0)  {  ret  =  Double.NaN;      }  else  if  (x  >  (a  +  1.0)  /  (a  +  b  +  2.0))  {      ret  =  1.0  -  regularizedBeta(1.0  -  x,  b,  a,  epsilon,  maxIterations);  	a  <=  0  ||  b  <=  0)  {  }  else  if  (x  >  (a  +  1)  /  (2  +  b  +  a)  &&  1  -  x  <=  (b  +  1)  /  (2  +  b  +  a))  {  ret  =  1  -  regularizedBeta(1  -  x,  b,  a,  epsilon,  maxIterations);  	192	replace-4
379	wicket_5e1bf8d8	buggy:  pageClass,  null,  renderCount,  componentInfo.getComponentPath());  context:  if  (componentInfo  !=  null)  {  renderCount  =  componentInfo.getRenderCount();  listenerInterface  =  requestListenerInterfaceFromString(componentInfo.getListenerInterface());  }  if  (listenerInterface  !=  null)  {  //  WICKET-4594  -  ignore  the  parsed  parameters  as  they  have  nothing  to  do  with  the  page  PageAndComponentProvider  provider  =  new  PageAndComponentProvider(pageInfo.getPageId(),  pageClass,  null,  renderCount,  componentInfo.getComponentPath());  	if  (pageInfo.getPageId()  !=  null)  {  pageParameters  =  null;  }    pageClass,  pageParameters,  renderCount,  componentInfo.getComponentPath());  	250	replace-1
380	commons-math_ebc61de9	buggy:  if  (x  ==  x1)  {  final  double  delta  =  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  x0  =  0.5  *  (x0  +  x1  -  delta);  f0  =  computeObjectiveValue(x0);  }  context:  inverted  =  !inverted;  }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:          if  (x  ==  x1)  {          final  double  delta  =  FastMath.max(rtol  *  FastMath.abs(x1),                    atol);          //  Update  formula  cannot  make  any  progress:  Update  the          //  search  interval.          x0  =  0.5  *  (x0  +  x1  -  delta);          f0  =  computeObjectiveValue(x0);          }  break;  		186	remove-6
381	jackrabbit-oak_557eec4f	buggy:  if  (filter.getPropertyRestrictions().isEmpty()  &&  filter.getSelector().getSelectorConstraints().isEmpty())  {  context:  public  double  getCost(Filter  filter,  NodeState  root)  {  if  (filter.getFullTextConstraint()  !=  null)  {  return  Double.POSITIVE_INFINITY;  }  if  (filter.containsNativeConstraint())  {  return  Double.POSITIVE_INFINITY;  }      if  (filter.getPropertyRestrictions().isEmpty()  &&  filter.getSelector().getSelectorConstraints().isEmpty())  {  return  Double.POSITIVE_INFINITY;  }  PropertyIndexPlan  plan  =  getPlan(root,  filter);  if  (plan  !=  null)  {  return  plan.getCost();  }  else  {  	if  (filter.getPropertyRestrictions().isEmpty())  {  	195	replace-1
382	accumulo_4aeaeb2a	buggy:  topKey  =  source.getTopKey();  context:  boolean  hasNext;  public  ValueIterator(SortedKeyValueIterator<Key,Value>  source)  {  this.source  =  source;    topKey  =  source.getTopKey();  hasNext  =  _hasNext();  }  private  boolean  _hasNext()  {  return  source.hasTop()  &&  !source.getTopKey().isDeleted()  &&  topKey.equals(source.getTopKey(),  PartialKey.ROW_COLFAM_COLQUAL_COLVIS);  }  	topKey  =  new  Key(source.getTopKey());  	66	replace-1
383	commons-math_38983e82	buggy:  double  rhs  =  tableau.getEntry(i,  tableau.getWidth()  -  1);  if  (MathUtils.compareTo(tableau.getEntry(i,  col),  0,  epsilon)  >=  0)  {  double  ratio  =  rhs  /  tableau.getEntry(i,  col);  context:  private  Integer  getPivotRow(final  int  col,  final  SimplexTableau  tableau)  {  double  minRatio  =  Double.MAX_VALUE;  Integer  minRatioPos  =  null;  for  (int  i  =  tableau.getNumObjectiveFunctions();  i  <  tableau.getHeight();  i++)  {      double  rhs  =  tableau.getEntry(i,  tableau.getWidth()  -  1);      if  (MathUtils.compareTo(tableau.getEntry(i,  col),  0,  epsilon)  >=  0)  {      double  ratio  =  rhs  /  tableau.getEntry(i,  col);  if  (ratio  <  minRatio)  {  minRatio  =  ratio;  minRatioPos  =  i;  	final  double  rhs  =  tableau.getEntry(i,  tableau.getWidth()  -  1);  final  double  entry  =  tableau.getEntry(i,  col);  if  (MathUtils.compareTo(entry,  0,  epsilon)  >  0)  {  final  double  ratio  =  rhs  /  entry;  	80	replace-3
384	camel_0919a0f6	buggy:  return  exchange.getOut().getHeaders();  context:  *  @return  an  expression  object  which  will  return  the  headers  public  static  Expression  outHeadersExpression()  {  return  new  ExpressionAdapter()  {  public  Object  evaluate(Exchange  exchange)  {      return  exchange.getOut().getHeaders();  }  	if  (ExchangeHelper.isOutCapable(exchange))  {  return  exchange.getOut().getHeaders();  }  else  {  return  null;  }  	264	replace-1
385	wicket_7da4ad17	buggy:  return  object.getClass().getSimpleName()  +   ". "  +  object.name();  context:  protected  String  resourceKey(T  object)  {  return  object.getClass().getSimpleName()  +   ". "  +  object.name();  }  	return  object.getDeclaringClass().getSimpleName()  +   ". "  +  object.name();  	97	replace-1
386	flink_e3759a5e	buggy:  context:  return  priorityQueue;  }  public  void  processWatermark(Watermark  mark)  throws  Exception  {  while(!priorityQueue.isEmpty()  &&  priorityQueue.peek().getTimestamp()  <=  mark.getTimestamp())  {  StreamRecord<IN>  streamRecord  =  priorityQueue.poll();  processEvent(nfa,  streamRecord.getValue(),  streamRecord.getTimestamp());  }  }  public  StreamTaskState  snapshotOperatorState(long  checkpointId,  long  timestamp)  throws  Exception  {  StreamTaskState  taskState  =  super.snapshotOperatorState(checkpointId,  timestamp);  final  AbstractStateBackend.CheckpointStateOutputStream  os  =  this.getStateBackend().createCheckpointStateOutputStream(  checkpointId,  	  output.emitWatermark(mark);  	90	add
387	commons-math_faf99727	buggy:    context:  package  org.apache.commons.math3.geometry.enclosing;  import  java.util.List;  		21	remove-1
388	accumulo_db4a291f	buggy:  log.warn( "Zookeeper  error,  will  retry ",  e);  context:  try  {  op.run(zooKeeper);  return;  }  catch  (KeeperException  e)  {  if  (e.code()  ==  Code.NONODE)  {  log.error( "Looked  up  non  existant  node  in  cache   "  +  e.getPath(),  e);  }  log.warn( "Zookeeper  error,  will  retry ",  e);  }  catch  (InterruptedException  e)  {      log.warn( "Zookeeper  error,  will  retry ",  e);  }  catch  (ConcurrentModificationException  e)  {  log.debug( "Zookeeper  was  modified,  will  retry ");  }  try  {  wait(sleepTime);  }  catch  (InterruptedException  e)  {  		139	remove-1
389	wicket_44f4782a	buggy:  return  0;  context:  protected  boolean  pageMustHaveBeenCreatedBookmarkable()  {  return  false;  }  public  int  getCompatibilityScore(Request  request)  {  //  always  return  0  here  so  that  the  mounts  have  higher  priority  return  0;  }  	if  (urlStartsWith(request.getUrl(),  mountSegments))  {  return  mountSegments.length;  }  else  {  return  0;  }  	229	replace-1
390	jackrabbit-oak_94c6c575	buggy:  return  nodeStore.reset(branch,  ancestor,  null).toString();  context:  throws  DocumentStoreException  {  RevisionVector  branch  =  RevisionVector.fromString(branchRevisionId);  if  (!branch.isBranch())  {  throw  new  DocumentStoreException( "Not  a  branch  revision:   "  +  branchRevisionId);  }  RevisionVector  ancestor  =  RevisionVector.fromString(ancestorRevisionId);  if  (!ancestor.isBranch())  {  throw  new  DocumentStoreException( "Not  a  branch  revision:   "  +  ancestorRevisionId);  }  try  {      return  nodeStore.reset(branch,  ancestor,  null).toString();  }  catch  (DocumentStoreException  e)  {  throw  new  DocumentStoreException(e);  }  }  public  long  getLength(String  blobId)  throws  DocumentStoreException  {  try  {  return  nodeStore.getBlobStore().getBlobLength(blobId);  	return  nodeStore.reset(branch,  ancestor).toString();  	338	replace-1
391	accumulo_3143b9c5	buggy:  if  (update.isSetDeleteCell())  {  m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());  }  else  {  m.put(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp(),  value);  }  m.put(update.getColFamily(),  update.getColQualifier(),  viz,  value);  context:  vizMap.put(vizText,  viz  =  new  ColumnVisibility(vizText));  }  }  byte[]  value  =  new  byte[0];  if  (update.isSetValue())  value  =  update.getValue();  if  (update.isSetTimestamp())  {  if  (update.isSetDeleteCell())  {  m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());  }  else  {      if  (update.isSetDeleteCell())  {        m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());      }  else  {        m.put(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp(),  value);  }    }  }  else  {    m.put(update.getColFamily(),  update.getColQualifier(),  viz,  value);  	m.put(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz,  update.getTimestamp(),  new  Value(value));  if  (update.isSetDeleteCell())  {  m.putDelete(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz);  }  else  {  m.put(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz,  new  Value(value));  }  	1129	replace-6
392	jackrabbit-oak_f72dd8d1	buggy:  static  final  int  LEVEL_SIZE  =  1  <<  8;  //  256  context:  package  org.apache.jackrabbit.oak.plugins.segment;  class  ListRecord  extends  Record  {  static  final  int  LEVEL_SIZE  =  1  <<  8;  //  256  private  final  int  size;  private  final  int  bucketSize;  ListRecord(Segment  segment,  RecordId  id,  int  size)  {  super(segment,  id);  checkArgument(size  >=  0);  	static  final  int  LEVEL_SIZE  =  Segment.SEGMENT_REFERENCE_LIMIT;  	24	replace-1
393	jackrabbit-oak_591e4d4a	buggy:  NodeBuilder  builder  =  store.getRoot().builder();  context:  return;  }  String  checkpoint  =  store.checkpoint(lifetime);  NodeState  after  =  store.retrieve(checkpoint);  if  (after  ==  null)  {  log.debug( "Unable  to  retrieve  checkpoint  {} ",  checkpoint);  return;  }      NodeBuilder  builder  =  store.getRoot().builder();  NodeBuilder  async  =  builder.child(ASYNC);  NodeState  before  =  null;  final  PropertyState  state  =  async.getProperty(name);  if  (state  !=  null  &&  state.getType()  ==  STRING)  {  before  =  store.retrieve(state.getValue(STRING));  }  if  (before  ==  null)  {  	NodeBuilder  builder  =  after.builder();  	151	replace-1
394	commons-math_fbbb96eb	buggy:  public  static  Vector3D  crossProduct(Vector3D  v1,  Vector3D  v2)  {  return  new  Vector3D(v1.y  *  v2.z  -  v1.z  *  v2.y,  v1.z  *  v2.x  -  v1.x  *  v2.z,  v1.x  *  v2.y  -  v1.y  *  v2.x);  context:  public  static  double  dotProduct(Vector3D  v1,  Vector3D  v2)  {  return  v1.x  *  v2.x  +  v1.y  *  v2.y  +  v1.z  *  v2.z;  }    public  static  Vector3D  crossProduct(Vector3D  v1,  Vector3D  v2)  {  return  new  Vector3D(v1.y  *  v2.z  -  v1.z  *  v2.y,          v1.z  *  v2.x  -  v1.x  *  v2.z,          v1.x  *  v2.y  -  v1.y  *  v2.x);  	public  static  Vector3D  crossProduct(final  Vector3D  v1,  final  Vector3D  v2)  {    final  double  n1  =  v1.getNormSq();  final  double  n2  =  v2.getNormSq();  if  ((n1  *  n2)  <  MathUtils.SAFE_MIN)  {  return  ZERO;  }    final  int  deltaExp  =  (FastMath.getExponent(n1)  -  FastMath.getExponent(n2))  /  4;  final  double  x1        =  FastMath.scalb(v1.x,  -deltaExp);  final  double  y1        =  FastMath.scalb(v1.y,  -deltaExp);  final  double  z1        =  FastMath.scalb(v1.z,  -deltaExp);  final  double  x2        =  FastMath.scalb(v2.x,    deltaExp);  final  double  y2        =  FastMath.scalb(v2.y,    deltaExp);  final  double  z2        =  FastMath.scalb(v2.z,    deltaExp);      final  double  ratio  =  (x1  *  x2  +  y1  *  y2  +  z1  *  z2)  /  FastMath.scalb(n2,  2  *  deltaExp);  final  double  rho      =  FastMath.rint(256  *  ratio)  /  256;    final  double  x3  =  x1  -  rho  *  x2;  final  double  y3  =  y1  -  rho  *  y2;  final  double  z3  =  z1  -  rho  *  z2;    return  new  Vector3D(y3  *  z2  -  z3  *  y2,  z3  *  x2  -  x3  *  z2,  x3  *  y2  -  y3  *  x2);    	457	replace-4
395	camel_2d7051ed	buggy:  private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^/]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!</{0}).)*</{0}\\s*> ";    context:  public  class  TokenXMLExpressionIterator  extends  ExpressionAdapter  {  private  static  final  Pattern  NAMESPACE_PATTERN  =  Pattern.compile( "xmlns(:\\w+|)\\s*=\\s*('[^']+'|\ "[^\ "]+\ ") ");  private  static  final  String  SCAN_TOKEN_NS_PREFIX_REGEX  =   "([^:<>]{1,15}?:|) ";  private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^/]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!</{0}).)*</{0}\\s*> ";  private  static  final  String  SCAN_PARENT_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^>]*\\s*)?> ";  protected  final  String  tagToken;  protected  final  String  inheritNamespaceToken;  public  TokenXMLExpressionIterator(String  tagToken,  String  inheritNamespaceToken)  {  ObjectHelper.notEmpty(tagToken,   "tagToken ");  this.tagToken  =  tagToken;  	private  static  final  String  SCAN_BLOCK_TOKEN_REGEX_TEMPLATE  =   "<{0}(\\s+[^/]*)?/>|<{0}(\\s+[^>]*)?>(?:(?!(</{0}\\s*>)).)*</{0}\\s*> ";    	50	replace-2
396	jackrabbit-oak_311e8b33	buggy:  checkArgument(length  <  8192);  context:  private  synchronized  RecordId  writeValueRecord(String  reference)  {  byte[]  data  =  reference.getBytes(Charsets.UTF_8);  int  length  =  data.length;      checkArgument(length  <  8192);  RecordId  id  =  prepare(RecordType.VALUE,  2  +  length);  int  len  =  length  |  0xE000;  	  checkArgument(length  <  4096);  	598	replace-1
397	camel_57f72cd9	buggy:  if  (isStoreAsBodyOnCompletion())  {  context:  public  boolean  isStoreAsBodyOnCompletion()  {  return  true;  }  public  void  onCompletion(Exchange  exchange)  {      if  (isStoreAsBodyOnCompletion())  {  List<V>  list  =  (List<V>)  exchange.removeProperty(Exchange.GROUPED_EXCHANGE);  if  (list  !=  null)  {  exchange.getIn().setBody(list);  }  }  }  	if  (exchange  !=  null  &&  isStoreAsBodyOnCompletion())  {  	65	replace-1
398	jackrabbit-oak_99996c25	buggy:  this.directoryBuilder  =  builder.child(dataNodeName);  context:  private  final  boolean  activeDeleteEnabled;  private  final  String  indexName;  public  OakDirectory(NodeBuilder  builder,  IndexDefinition  definition,  boolean  readOnly)  {  this(builder,  INDEX_DATA_CHILD_NAME,  definition,  readOnly);  }  public  OakDirectory(NodeBuilder  builder,  String  dataNodeName,  IndexDefinition  definition,  boolean  readOnly)  {  this.lockFactory  =  NoLockFactory.getNoLockFactory();  this.builder  =  builder;      this.directoryBuilder  =  builder.child(dataNodeName);  this.definition  =  definition;  this.readOnly  =  readOnly;  this.fileNames.addAll(getListing());  this.activeDeleteEnabled  =  definition.getActiveDeleteEnabled();  this.indexName  =  definition.getIndexName();  }  	this.directoryBuilder  =  readOnly  ?  builder.getChildNode(dataNodeName)  :  builder.child(dataNodeName);  	94	replace-1
399	camel_4c37e773	buggy:  return  uri;  context:  public  Endpoint  resolveEndpoint(RouteContext  context)  {  if  (endpoint  ==  null)  {  return  context.resolveEndpoint(getUri(),  getRef());  }  else  {  return  endpoint;  }  }  public  String  getUri()  {      return  uri;  	  if  (uri  !=  null)  {  return  uri;  }  else  if  (endpoint  !=  null)  {  return  endpoint.getEndpointUri();  }  else  {  return  null;  }  	80	replace-1
400	accumulo_36225565	buggy:  context:  clientConfig.setProperty(ClientProperty.INSTANCE_RPC_SASL_ENABLED,   "true ");  }  if  (!clientConfig.containsKey(ClientProperty.INSTANCE_ZK_HOST.getKey()))  {  AccumuloConfiguration  siteConf  =  SiteConfiguration.getInstance(ClientContext.convertClientConfig(clientConfig));  clientConfig.withZkHosts(siteConf.get(Property.INSTANCE_ZK_HOST));  }  return  clientConfig;  }  public  boolean  useSasl()  {  return  useSasl;  }  	if  (null  !=  zooKeeperHosts)  {  clientConfig.setProperty(ClientProperty.INSTANCE_ZK_HOST,  zooKeeperHosts);  }    	319	add
401	camel_205420e2	buggy:  context:  if  (result.getPattern().isOutCapable())  {          //  only  set  OUT  if  its  OUT  capable  result.getOut().copyFrom(source.getIn());  }  else  {  result.getIn().copyFrom(source.getIn());  }  }  if  (source.hasProperties())  {  result.getProperties().putAll(source.getProperties());  }  }  	if  (result.hasOut())  {  result.setOut(null);  }  	218	add
402	logging-log4j2_c6318b63	buggy:  return  jndiManager.lookup(jndiName);  context:  public  String  lookup(final  LogEvent  event,  final  String  key)  {  if  (key  ==  null)  {  return  null;  }  final  String  jndiName  =  convertJndiName(key);  final  JndiManager  jndiManager  =  JndiManager.getDefaultManager();  try  {      return  jndiManager.lookup(jndiName);  }  catch  (final  NamingException  e)  {  LOGGER.warn(LOOKUP,   "Error  looking  up  JNDI  resource  [{}]. ",  jndiName,  e);  return  null;  }  finally  {  jndiManager.release();  }  }  	return  String.valueOf(jndiManager.lookup(jndiName));  	55	replace-1
403	logging-log4j2_ef8517e4	buggy:  context:  }  public  Interpolator(Map<String,  String>  properties)  {  this.defaultLookup  =  new  MapLookup(properties  ==  null  ?  new  HashMap<String,  String>()  :  properties);  lookups.put( "sys ",  new  SystemPropertiesLookup());  lookups.put( "env ",  new  EnvironmentLookup());  lookups.put( "jndi ",  new  JndiLookup());  try  {  if  (Class.forName( "javax.servlet.ServletContext ")  !=  null)  {  lookups.put( "web ",  new  WebLookup());  }  }  catch  (ClassNotFoundException  ex)  {  LOGGER.debug( "ServletContext  not  present  -  WebLookup  not  added ");  }  catch  (Exception  ex)  {  LOGGER.error( "Unable  to  locate  ServletContext ",  ex);  	lookups.put( "date ",  new  DateLookup());  lookups.put( "ctx ",  new  ContextMapLookup());  	74	add
404	flink_948b6e05	buggy:  context:  int  i  =  startPos;  final  int  delimLimit  =  limit-delimiter.length+1;  if(quotedStringParsing  ==  true  &&  bytes[i]  ==  quoteCharacter)  {  i++;  while(i  <  limit  &&  bytes[i]  !=  quoteCharacter)  {  i++;  }  if  (i  ==  limit)  {  setErrorState(ParseErrorState.UNTERMINATED_QUOTED_STRING);  return  -1;  }  else  {  i++;  	private  static  final  byte  BACKSLASH  =  92;    	56	add
405	wicket_87ae870f	buggy:  else  throw  new  ConversionException( "Could  not  convert  value:   "  +  value  +   "  to  type:   "  +  theType.getName()  +   ".  Could  not  find  compatible  converter. ").setSourceValue(value);  context:  return  null;  }  try  {  C  converted  =  Objects.convertValue(value,  theType);  if  (converted  !=  null)  {  return  converted;  }  else  {  throw  new  ConversionException( "Could  not  convert  value:   "  +  value  +   "  to  type:   "  +  theType.getName()  +   ".  Could  not  find  compatible  converter. ").setSourceValue(value);  }  }  catch  (Exception  e)  	  if  (theType.isInstance(value))  return  theType.cast(value);    throw  new  ConversionException( "Could  not  convert  value:   "  +  value  +   "  to  type:   "  +  theType.getName()  +   ".  Could  not  find  compatible  converter. ").setSourceValue(value);  	108	replace-3
406	wicket_bb7a6995	buggy:  mimeTypes.put( "js ",   "text/plain ");  context:  File  file  =  new  File( "target/work/ ");  file.mkdirs();  attributes.put( "javax.servlet.context.tempdir ",  file);  mimeTypes.put( "html ",   "text/html ");  mimeTypes.put( "htm ",   "text/html ");  mimeTypes.put( "css ",   "text/css ");  mimeTypes.put( "xml ",   "text/xml ");  mimeTypes.put( "js ",   "text/plain ");  mimeTypes.put( "gif ",   "image/gif ");  mimeTypes.put( "jpg ",   "image/jpeg ");  mimeTypes.put( "png ",   "image/png ");  }  	mimeTypes.put( "js ",   "text/javascript ");  	110	replace-1
407	wicket_3d8c9d75	buggy:  onInitialize();  context:  return  getFlag(FLAG_INITIALIZED);  }  void  initialize()  {  if  (!getFlag(FLAG_INITIALIZED))  {  onInitialize();  setFlag(FLAG_INITIALIZED,  true);  }  }  	onInitialize();  	970	replace-1
408	wicket_b4e9d426	buggy:  l.sessionUnbound(sessionId);  cleanup();  context:  private  void  cleanup()  {  sessionId  =  null;  attributes.clear();  session  =  null;  }  public  void  invalidate(Request  request)  {  for  (UnboundListener  l  :  unboundListeners)  {  l.sessionUnbound(sessionId);  }  cleanup();  }  	String  sessId  =  sessionId;  cleanup();  l.sessionUnbound(sessId);  	89	replace-2
409	logging-log4j2_2c966ad9	buggy:  for  (final  Node  child  :  rootNode.getChildren())  {  createConfiguration(child,  null);  if  (child.getObject()  ==  null)  {  continue;  subst.setVariableResolver((StrLookup)  child.getObject());  }  else  {  }  else  if  (tempLookup  ==  subst.getVariableResolver())  {  final  Map<String,  String>  map  =  (Map<String,  String>)  componentMap.get(CONTEXT_PROPERTIES);  final  StrLookup  lookup  =  map  ==  null  ?  null  :  new  MapLookup(map);  subst.setVariableResolver(new  Interpolator(lookup));  context:  public  void  addComponent(final  String  name,  final  Object  obj)  {  componentMap.putIfAbsent(name,  obj);  }  protected  void  doConfigure()  {  boolean  setRoot  =  false;  boolean  setLoggers  =  false;      for  (final  Node  child  :  rootNode.getChildren())  {      createConfiguration(child,  null);      if  (child.getObject()  ==  null)  {      continue;  }  	if  (rootNode.hasChildren()  &&  rootNode.getChildren().get(0).getName().equalsIgnoreCase( "Properties "))  {  Node  first  =  rootNode.getChildren().get(0);  createConfiguration(first,  null);  if  (first.getObject()  !=  null)  {  subst.setVariableResolver((StrLookup)  first.getObject());  }  else  {  final  Map<String,  String>  map  =  (Map<String,  String>)  componentMap.get(CONTEXT_PROPERTIES);  final  StrLookup  lookup  =  map  ==  null  ?  null  :  new  MapLookup(map);  subst.setVariableResolver(new  Interpolator(lookup));  }    for  (final  Node  child  :  rootNode.getChildren())  {  }  createConfiguration(child,  null);  if  (child.getObject()  ==  null)  {  continue;  	246	replace-10
410	jackrabbit-oak_65aa40dd	buggy:  if  (value  instanceof  java.util.Collection)  {  java.util.Collection<?>  col  =  (java.util.Collection<?>)  value;  if  (!col.contains(kv[1]))  {  if  (col.contains(kv[1]))  {  context:  Operation  op  =  change.getValue();  if  (op.type  ==  Operation.Type.CONTAINS_MAP_ENTRY)  {  String  k  =  change.getKey();  String[]  kv  =  k.split( "\\. ");  Object  value  =  target.get(kv[0]);  if  (value  ==  null)  {  if  (Boolean.TRUE.equals(op.value))  {  return  false;  }  }  else  {          if  (value  instanceof  java.util.Collection)  {          java.util.Collection<?>  col  =  (java.util.Collection<?>)  value;  if  (Boolean.TRUE.equals(op.value))  {          if  (!col.contains(kv[1]))  {  return  false;  }  }  else  {  	if  (value  instanceof  Map)  {  Map  map  =  (Map)  value;  if  (!map.containsKey(kv[1]))  {  if  (map.containsKey(kv[1]))  {  	181	replace-4
411	wicket_6c5083b4	buggy:  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClass.getName());  context:  boolean  firstParameter  =  true;  if  (!application.getHomePage().equals(pageClass)  ||  ! " ".equals(pageMapName))  {  firstParameter  =  false;  url.append('?');  url.append(WebRequestCodingStrategy.BOOKMARKABLE_PAGE_PARAMETER_NAME);  url.append('=');  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClass.getName());  	String  pageClassName  =  pageClass.getName();  try  {  pageClassName  =  URLEncoder.encode(pageClassName,   "UTF-8 ");  }  catch  (UnsupportedEncodingException  e)  {  throw  new  RuntimeException(e);  }  url.append(pageMapName  +  Component.PATH_SEPARATOR  +  pageClassName);  	566	replace-1
412	flink_a402002d	buggy:  if  (state  ==  JobStatus.FAILED)  {  if  (!transitionState(JobStatus.FAILED,  JobStatus.RESTARTING))  {  throw  new  IllegalStateException( "Execution  Graph  left  the  state  FAILED  while  trying  to  restart. ");  }  }    context:  return;  }  }  }  public  void  restart()  {  try  {  if  (state  ==  JobStatus.FAILED)  {  if  (!transitionState(JobStatus.FAILED,  JobStatus.RESTARTING))  {  throw  new  IllegalStateException( "Execution  Graph  left  the  state  FAILED  while  trying  to  restart. ");  }  }  synchronized  (progressLock)  {  if  (state  !=  JobStatus.RESTARTING)  {  throw  new  IllegalStateException( "Can  only  restart  job  from  state  restarting. ");  }  		749	remove-6
413	wicket_3d2393c7	buggy:  minifiedName  =  name.substring(0,  name.length()  -  extension.length()  +  1)  +   "min "  +  extension;  context:  protected  String  getMinifiedName()  {  String  name  =  super.getName();  String  minifiedName;  int  idxOfExtension  =  name.lastIndexOf('.');  if  (idxOfExtension  >  -1)  {  String  extension  =  name.substring(idxOfExtension);  minifiedName  =  name.substring(0,  name.length()  -  extension.length()  +  1)  +   "min "  +  extension;  }  else  	final  String  baseName  =  name.substring(0,  name.length()  -  extension.length()  +  1);  if  (! ".min ".equals(extension)  &&  !baseName.endsWith( ".min. "))  {  minifiedName  =  baseName  +   "min "  +  extension;  }  else  {  minifiedName  =  name;  }  	210	replace-1
414	camel_e38494f1	buggy:  context:  private  Iterable<ProcessorExchangePair>  createProcessorExchangePairsList(Exchange  exchange,  Object  value)  {  List<ProcessorExchangePair>  result  =  new  ArrayList<ProcessorExchangePair>();  Iterable<ProcessorExchangePair>  pairs  =  createProcessorExchangePairsIterable(exchange,  value);  for  (ProcessorExchangePair  pair  :  pairs)  {  result.add(pair);  }  return  result;  }  	if  (exchange.getException()  !=  null)  {  throw  exchange.getException();  }    	181	add
415	flink_59685903	buggy:  context:  }  public  final  void  open()  throws  Exception  {  super.open();  timestampedCollector  =  new  TimestampedCollector<>(output);  if  (inputSerializer  ==  null)  {  	  @Override  public  void  setOutputType(TypeInformation<OUT>  outTypeInfo,  ExecutionConfig  executionConfig)  {  if  (userFunction  instanceof  OutputTypeConfigurable)  {  OutputTypeConfigurable<OUT>  outputTypeConfigurable  =  (OutputTypeConfigurable<OUT>)  userFunction;    outputTypeConfigurable.setOutputType(outTypeInfo,  executionConfig);  }  }      	181	add
416	camel_8e3450f4	buggy:  dataFormat.marshal(exchange,  body,  buffer);  byte[]  data  =  buffer.toByteArray();  out.setBody(data);  context:  ByteArrayOutputStream  buffer  =  new  ByteArrayOutputStream();  Message  in  =  exchange.getIn();  Object  body  =  in.getBody();  Message  out  =  exchange.getOut();  out.copyFrom(in);      dataFormat.marshal(exchange,  body,  buffer);      byte[]  data  =  buffer.toByteArray();      out.setBody(data);  	try  {  dataFormat.marshal(exchange,  body,  buffer);  byte[]  data  =  buffer.toByteArray();  out.setBody(data);  }  catch  (Exception  e)  {  exchange.setOut(null);  throw  e;  }  	58	replace-3
417	accumulo_d9ab8449	buggy:  context:  public  String  getPrincipal()  {  return  principal;  }  public  AuthenticationToken  getToken()  {  return  token;  }  public  TCredentials  toThrift(Instance  instance)  {  return  new  TCredentials(principal,  token.getClass().getName(),  ByteBuffer.wrap(AuthenticationTokenSerializer.serialize(token)),  instance.getInstanceID());  }  	if  (cred.getToken().isDestroyed())  throw  new  AccumuloSecurityException(cred.getPrincipal(),  SecurityErrorCode.TOKEN_EXPIRED);    	58	add
418	jackrabbit-oak_6fc5ea9d	buggy:  T  child  =  getChildTree(name);  if  (child  !=  null)  {  return  createNodeLocation(child);  }    context:  public  TreeLocation  getParent()  {  T  parentTree  =  getParentTree();  return  parentTree  ==  null  ?  NullLocation.NULL  :  createNodeLocation(parentTree);  }  public  TreeLocation  getChild(String  name)  {      T  child  =  getChildTree(name);      if  (child  !=  null)  {      return  createNodeLocation(child);      }  PropertyState  prop  =  getPropertyState(name);  if  (prop  !=  null)  {  return  createPropertyLocation(this,  name);  }  	  T  child  =  getChildTree(name);  if  (child  !=  null)  {  return  createNodeLocation(child);  }  	60	replace-5
419	commons-math_1352a70f	buggy:  context:  arr[3]  +=  mem[i  +  3];  arr[4]  +=  mem[i  +  4];  arr[5]  +=  mem[i  +  5];  arr[6]  +=  mem[i  +  6];  arr[7]  +=  mem[i  +  7];  shuffle();  setState();  }  isaac();  count  =  SIZE  -  1;  }  private  void  shuffle()  {  arr[0]  ^=  arr[1]  <<  11;  arr[3]  +=  arr[0];  arr[1]  +=  arr[2];  arr[1]  ^=  arr[2]  >>>  2;  arr[4]  +=  arr[1];  	clear();  	238	add
420	camel_a57830ed	buggy:  }  else  if  (!outputs.isEmpty()  &&  parentPolicy.getMaximumRedeliveries()  >  0)  {  context:  public  RedeliveryPolicy  createRedeliveryPolicy(CamelContext  context,  RedeliveryPolicy  parentPolicy)  {  if  (redeliveryPolicyRef  !=  null)  {  return  CamelContextHelper.mandatoryLookup(context,  redeliveryPolicyRef,  RedeliveryPolicy.class);  }  else  if  (redeliveryPolicy  !=  null)  {  return  redeliveryPolicy.createRedeliveryPolicy(context,  parentPolicy);      }  else  if  (!outputs.isEmpty()  &&  parentPolicy.getMaximumRedeliveries()  >  0)  {  RedeliveryPolicy  answer  =  parentPolicy.copy();  answer.setMaximumRedeliveries(0);  return  answer;  }  else  {  return  parentPolicy;  	}  else  if  (!outputs.isEmpty()  &&  parentPolicy.getMaximumRedeliveries()  !=  0)  {  	147	replace-1
421	wicket_3cc3fe95	buggy:  if  (tag.isOpen())  context:  private  void  removedComponent(final  Component  component)  {  final  Page  page  =  component.findPage();  if  (page  !=  null)  {  page.componentRemoved(component);  }  component.detach();  component.internalOnRemove();  component.setParent(null);  }  	  if  (tag.isOpen()  &&  !tag.hasNoCloseTag())  	1372	replace-2
422	commons-math_a197ba85	buggy:  for  (BSPTree<S>  tree  =  this;  tree.parent  !=  null;  tree  =  tree.parent)  {  context:  private  SubHyperplane<S>  fitToCell(final  SubHyperplane<S>  sub)  {  SubHyperplane<S>  s  =  sub;      for  (BSPTree<S>  tree  =  this;  tree.parent  !=  null;  tree  =  tree.parent)  {  if  (tree  ==  tree.parent.plus)  {  s  =  s.split(tree.parent.cut.getHyperplane()).getPlus();  }  else  {  s  =  s.split(tree.parent.cut.getHyperplane()).getMinus();  }  }  return  s;  }  	for  (BSPTree<S>  tree  =  this;  tree.parent  !=  null  &&  s  !=  null;  tree  =  tree.parent)  {  	297	replace-1
423	jackrabbit-oak_0c3b3306	buggy:  return  head.getRecordId().toString();  RecordId  id  =  RecordId.fromString(checkNotNull(checkpoint));  SegmentNodeState  root  =  new  SegmentNodeState(store.getWriter().getDummySegment(),  id);  return  root.getChildNode(ROOT);  context:  public  Blob  createBlob(InputStream  stream)  throws  IOException  {  return  store.getWriter().writeStream(stream);  }  public  synchronized  String  checkpoint(long  lifetime)  {  checkArgument(lifetime  >  0);      //  TODO:  Guard  the  checkpoint  from  garbage  collection      return  head.getRecordId().toString();  	String  name  =  UUID.randomUUID().toString();    for  (int  i  =  0;  i  <  5;  i++)  {  if  (commitSemaphore.tryAcquire())  {  try  {  refreshHead();    SegmentNodeState  ns  =  head;  RecordId  ri  =  head.getRecordId();    SegmentRootBuilder  builder  =  ns.builder();  NodeBuilder  cp  =  builder.child(name);  cp.setProperty( "timestamp ",  System.currentTimeMillis()  +  lifetime);  cp.setChildNode(ROOT,  ns.getChildNode(ROOT));    if  (journal.setHead(ri,  builder.getNodeState()  .getRecordId()))  {  refreshHead();  return  name;  }    }  finally  {  commitSemaphore.release();  }  }  }    return  name;  NodeState  cp  =  head.getChildNode(checkpoint).getChildNode(ROOT);  if  (cp.exists())  {  return  cp;  }  return  null;  	182	replace-5
424	jackrabbit-oak_d645112f	buggy:  context:  public  void  close()  throws  IOException  {  fs.close();  }  };  }  public  String  toString()  {  return  String.format( "SegmentTarNodeStore[%s] ",  dir);  }  	  private  boolean  copyCheckpoints(NodeBuilder  targetRoot)  {  if  (!(source  instanceof  TarNodeStore  &&  target  instanceof  TarNodeStore))  {  return  false;  }    TarNodeStore  sourceTarNS  =  (TarNodeStore)  source;  TarNodeStore  targetTarNS  =  (TarNodeStore)  target;    NodeState  srcSuperRoot  =  sourceTarNS.getSuperRoot();  NodeBuilder  builder  =  targetTarNS.getSuperRoot().builder();    String  previousRoot  =  null;  for  (String  checkpoint  :  getCheckpointPaths(srcSuperRoot))  {  NodeStateCopier.builder()  .include(checkpoint)  .exclude(checkpoint  +   "/root ")  .copy(srcSuperRoot,  builder);    NodeState  baseRoot;  if  (previousRoot  ==  null)  {  baseRoot  =  targetRoot.getNodeState();  }  else  {  baseRoot  =  getBuilder(builder,  previousRoot).getNodeState();  }  NodeBuilder  targetParent  =  getBuilder(builder,  checkpoint);  targetParent.setChildNode( "root ",  baseRoot);  previousRoot  =  checkpoint  +   "/root ";    NodeStateCopier.builder()  .include(checkpoint  +   "/root ")  .copy(srcSuperRoot,  builder);  }    targetTarNS.setSuperRoot(builder);  return  true;  }    private  static  List<String>  getCheckpointPaths(NodeState  superRoot)  {  List<ChildNodeEntry>  checkpoints  =  newArrayList(superRoot.getChildNode( "checkpoints ").getChildNodeEntries().iterator());  sort(checkpoints,  new  Comparator<ChildNodeEntry>()  {  @Override  public  int  compare(ChildNodeEntry  o1,  ChildNodeEntry  o2)  {  long  c1  =  o1.getNodeState().getLong( "created ");  long  c2  =  o1.getNodeState().getLong( "created ");  return  -Long.compare(c1,  c2);  }  });  return  transform(checkpoints,  new  Function<ChildNodeEntry,  String>()  {  @Nullable  @Override  public  String  apply(@Nullable  ChildNodeEntry  input)  {  return   "/checkpoints/ "  +  input.getName();  }  });  }    private  static  NodeBuilder  getBuilder(NodeBuilder  root,  String  path)  {  NodeBuilder  builder  =  root;  for  (String  element  :  PathUtils.elements(path))  {  builder  =  builder.child(element);  }  return  builder;  }  	75	add
425	camel_39ccf5d6	buggy:  context:  return  nextToken  !=  null;  }  public  Object  next()  {  Object  o  =  nextToken;  try  {  nextToken  =  getNextToken();  }  catch  (XMLStreamException  e)  {      //  }  return  o;  }  public  void  remove()  {  }  	nextToken  =  null;  throw  new  RuntimeException(e);  	579	add
426	flink_a17d4e82	buggy:  context:  if  (isDestroyed)  {  return  null;  }  Buffer  buffer  =  buffers.poll();  if  (buffer  !=  null)  {  return  buffer;  }  buffers.wait();  }  }  }  	public  boolean  isReleased()  {  return  isReleased;  }    @Override  	170	add
427	jackrabbit-oak_077efee5	buggy:  context:  static  Revision  newRevision(int  clusterId)  {  long  timestamp  =  getCurrentTimestamp();  int  c;  synchronized  (Revision.class)  {  if  (timestamp  ==  lastRevisionTimestamp)  {  c  =  ++lastRevisionCount;  }  else  {  lastRevisionTimestamp  =  timestamp;  lastRevisionCount  =  c  =  0;  }  }  	if  (timestamp  <  lastRevisionTimestamp)  {  timestamp  =  lastRevisionTimestamp;  }  	162	add
428	jackrabbit-oak_73cc2442	buggy:  if  (!builder.hasProperty(MoveDetector.SOURCE_PATH))  {  builder.setProperty(MoveDetector.SOURCE_PATH,  path);  }  context:  }  else  {  return  false;  }  }  }  protected  static  void  annotateSourcePath(NodeBuilder  builder,  String  path)  {  PropertyState  base  =  builder.getBaseState().getProperty(MoveDetector.SOURCE_PATH);  PropertyState  head  =  builder.getNodeState().getProperty(MoveDetector.SOURCE_PATH);  if  (Objects.equal(base,  head))  {      if  (!builder.hasProperty(MoveDetector.SOURCE_PATH))  {      builder.setProperty(MoveDetector.SOURCE_PATH,  path);      }  }  }  public  boolean  copyTo(NodeBuilder  newParent,  String  newName)  {  if  (isRoot())  {  	builder.setProperty(MoveDetector.SOURCE_PATH,  path);  	377	replace-3
429	wicket_99e22ce4	buggy:  context:  long  result  =  (long)rows  *  (long)columns;  int  desiredHiBits  =  -((int)(result  >>>  31)  &  1);  int  actualHiBits  =  (int)(result  >>>  32);  if  (desiredHiBits  ==  actualHiBits)  {  items  =  (int)result;  }  internalSetRowsPerPage(items);  }  	addedComponent(child);  	199	add
430	jackrabbit-oak_459bd065	buggy:  name,  value.getCalendar().getTimeInMillis(),  Type.DATE);  context:  throws  RepositoryException,  IOException  {  switch  (type)  {  case  PropertyType.BINARY:  return  PropertyStates.createProperty(  name,  store.createBlob(value.getStream()),  Type.BINARY);  case  PropertyType.BOOLEAN:  return  PropertyStates.createProperty(  name,  value.getBoolean(),  Type.BOOLEAN);  case  PropertyType.DATE:  return  PropertyStates.createProperty(          name,  value.getCalendar().getTimeInMillis(),  Type.DATE);  case  PropertyType.DECIMAL:  return  PropertyStates.createProperty(  name,  value.getDecimal(),  Type.DECIMAL);  case  PropertyType.DOUBLE:  return  PropertyStates.createProperty(  name,  value.getDouble(),  Type.DOUBLE);  case  PropertyType.LONG:  return  PropertyStates.createProperty(  	name,  value.getString(),  Type.DATE);  	295	replace-1
431	camel_2e985f9b	buggy:  if  (future  ==  null  &&  timedOut)  {  break;  }  else  if  (future  ==  null)  {  context:  }  else  {  LOG.trace( "Polling  completion  task  #{} ",  aggregated);  future  =  completion.poll(1,  TimeUnit.SECONDS);  if  (future  ==  null)  {  continue;  }  }      if  (future  ==  null  &&  timedOut)  {          //  we  are  timed  out  and  no  more  tasks  complete  so  break  out          break;      }  else  if  (future  ==  null)  {  AggregationStrategy  strategy  =  getAggregationStrategy(null);  if  (strategy  instanceof  TimeoutAwareAggregationStrategy)  {  Exchange  oldExchange  =  result.get();  	if  (future  ==  null)  {  	445	replace-3
432	commons-math_9e0c5ad4	buggy:  final  double  gammaAbs  =  SQRT_TWO_PI  /  x  *  context:  double  prod  =  x;  double  t  =  x;  while  (t  <  -0.5)  {  t  +=  1.0;  prod  *=  t;  }  ret  =  1.0  /  (prod  *  (1.0  +  invGamma1pm1(t)));  }  }  else  {  final  double  y  =  absX  +  LANCZOS_G  +  0.5;      final  double  gammaAbs  =  SQRT_TWO_PI  /  x  *  FastMath.pow(y,  absX  +  0.5)  *  FastMath.exp(-y)  *  lanczos(absX);  if  (x  >  0.0)  {  ret  =  gammaAbs;  }  else  {  	final  double  gammaAbs  =  SQRT_TWO_PI  /  absX  *  	698	replace-1
433	wicket_a4459ef4	buggy:  context:  BUBBLE,  EXACT  }  	else  {  dispatcher.dispatchEvent(cursor,  event);  }  	103	add
434	jackrabbit-oak_7a84b3a8	buggy:  try  {  String  childName  =  sessionDelegate.getOakName(PathUtils.getName(relPath));  NodeDefinition  def  =  dp.getDefinition(new  NodeImpl<NodeDelegate>(parent),  childName);  ntName  =  def.getDefaultPrimaryTypeName();  }  catch  (RepositoryException  e)  {  context:  throw  new  PathNotFoundException(relPath);  }  if  (parent.getChild(oakName)  !=  null)  {  throw  new  ItemExistsException(relPath);  }  String  ntName  =  primaryNodeTypeName;  if  (ntName  ==  null)  {  DefinitionProvider  dp  =  sessionDelegate.getDefinitionProvider();          try  {          String  childName  =  sessionDelegate.getOakName(PathUtils.getName(relPath));          NodeDefinition  def  =  dp.getDefinition(new  NodeImpl<NodeDelegate>(parent),  childName);          ntName  =  def.getDefaultPrimaryTypeName();          }  catch  (RepositoryException  e)  {  throw  new  ConstraintViolationException(  	String  childName  =  sessionDelegate.getOakName(PathUtils.getName(relPath));  NodeDefinition  def  =  dp.getDefinition(new  NodeImpl<NodeDelegate>(parent),  childName);  ntName  =  def.getDefaultPrimaryTypeName();  if  (ntName  ==  null)  {  	253	replace-5
435	accumulo_72fd6bec	buggy:  context:  appendProp(fileWriter,  Property.TSERV_WALOG_MAX_SIZE,   "100M ",  siteConfig);  appendProp(fileWriter,  Property.TSERV_NATIVEMAP_ENABLED,   "false ",  siteConfig);  appendProp(fileWriter,  Property.TRACE_TOKEN_PROPERTY_PREFIX  +   ".password ",  config.getRootPassword(),  siteConfig);  appendProp(fileWriter,  Property.GC_CYCLE_DELAY,   "4s ",  siteConfig);  appendProp(fileWriter,  Property.GC_CYCLE_START,   "0s ",  siteConfig);  mergePropWithRandomPort(siteConfig,  Property.MASTER_CLIENTPORT.getKey());  mergePropWithRandomPort(siteConfig,  Property.TRACE_PORT.getKey());  mergePropWithRandomPort(siteConfig,  Property.TSERV_CLIENTPORT.getKey());  mergePropWithRandomPort(siteConfig,  Property.MONITOR_PORT.getKey());  mergePropWithRandomPort(siteConfig,  Property.GC_PORT.getKey());  appendProp(fileWriter,  Property.TSERV_MAJC_DELAY,   "3 ",  siteConfig);  appendProp(fileWriter,  Property.GENERAL_CLASSPATHS,  libDir.getAbsolutePath()  +   "/[^.].*.jar ",  siteConfig);  	mergePropWithRandomPort(siteConfig,  Property.MONITOR_LOG4J_PORT.getKey());  	273	add
436	jackrabbit-oak_5286861d	buggy:  return  getHeadRevision();  context:  }  public  String  commit(String  path,  String  jsonDiff,  String  revisionId,  String  message)  throws  MicroKernelException  {  if  (rep  ==  null)  {  throw  new  IllegalStateException( "this  instance  has  already  been  disposed ");  }  if  (path.length()  >  0  &&  !PathUtils.isAbsolute(path))  {  throw  new  IllegalArgumentException( "absolute  path  expected:   "  +  path);  }  if  (jsonDiff  ==  null  ||  jsonDiff.length()  ==  0)  {      return  getHeadRevision();  }  Id  revId  =  revisionId  ==  null  ?  getHeadRevisionId()  :  Id.fromString(revisionId);  try  {  JsopTokenizer  t  =  new  JsopTokenizer(jsonDiff);  CommitBuilder  cb  =  rep.getCommitBuilder(revId,  message);  while  (true)  {  	return  revisionId  !=  null  ?  revisionId  :  getHeadRevision();  	414	replace-1
437	wicket_c849f986	buggy:  }  context:  public  int  read(byte[]  b,  int  off,  int  len)  throws  IOException  {  int  read  =  in.read(b,  off,  len);  bytesUploaded  +=  (read  <  0)  ?  0  :  read;  onUploadUpdate(bytesUploaded,  totalBytes);  return  read;  }  }  }  \  No  newline  at  end  of  file  	}//  clear  multipart  hint,  it  will  be  set  if  necessary  by  the  visitor  this.multiPart  &=  ~MULTIPART_HINT;    	369	replace-1
438	wicket_d3d42d42	buggy:  context:  else  if  (urlStartsWith(request.getClientUrl(),  namespace,  pageIdentifier)  &&  urlStartsWith(url,  pageIdentifier))  {  matches  =  true;  }  else  if  (urlStartsWith(request.getClientUrl(),  pageIdentifier)  &&  urlStartsWith(url,  pageIdentifier))  {  matches  =  true;  }  return  matches;  }  }  	else  if  (baseUrl.getSegments().size()  ==  2  &&  urlStartsWith(baseUrl,  bookmarkableIdentifier)  &&  url.getSegments().size()  ==  2  &&  urlStartsWith(url,  bookmarkableIdentifier))  {  matches  =  true;  }  	194	add
439	jackrabbit-oak_56accddf	buggy:  Dictionary  dictionary  =  new  LuceneDictionary(reader,  FieldNames.SUGGEST);  getLookup(directory,  analyzer,  tempSubChild).build(dictionary);  context:  try  {  tempDir  =  Files.createTempDir();  File  tempSubChild  =  new  File(tempDir,   "non-existing-sub-child ");      Dictionary  dictionary  =  new  LuceneDictionary(reader,  FieldNames.SUGGEST);      getLookup(directory,  analyzer,  tempSubChild).build(dictionary);  }  catch  (RuntimeException  e)  {  log.debug( "could  not  update  the  suggester ",  e);  }  finally  {  	if  (reader.getDocCount(FieldNames.SUGGEST)  >  0)  {  Dictionary  dictionary  =  new  LuceneDictionary(reader,  FieldNames.SUGGEST);  getLookup(directory,  analyzer,  tempSubChild).build(dictionary);  }  	69	replace-2
440	camel_5f78c646	buggy:  context:  bytes  =  value.getBytes(charsetName);  }  catch  (UnsupportedEncodingException  e)  {  LOG.warn( "Cannot  convert  the  byte  to  String  with  the  charset   "  +  charsetName,  e);  }  }  }  if  (bytes  ==  null)  {  bytes  =  value.getBytes();  }  buf.put(bytes);  return  buf;  }  public  static  ByteBuffer  toByteBuffer(Short  value)  {  ByteBuffer  buf  =  ByteBuffer.allocate(2);  buf.putShort(value);  return  buf;  }  	buf.flip();  	102	add
441	wicket_c86b972a	buggy:  protected  PageComponentInfo  getPageComponentInfo(Url  url)  if  (url.getQueryParameters().size()  >  0)  QueryParameter  param  =  url.getQueryParameters().get(0);  if  (Strings.isEmpty(param.getValue()))  return  PageComponentInfo.parse(param.getName());  context:  }  protected  PageComponentInfo  getPageComponentInfo(Url  url)  {  if  (url  ==  null)  {  throw  new  IllegalStateException( "Argument  'url'  may  not  be  null. ");  }  if  (url.getQueryParameters().size()  >  0)  {  	protected  PageComponentInfo  getPageComponentInfo(final  Url  url)  else  for  (QueryParameter  queryParameter  :  url.getQueryParameters())  if  (Strings.isEmpty(queryParameter.getValue()))  {  PageComponentInfo  pageComponentInfo  =  PageComponentInfo.parse(queryParameter.getName());  if  (pageComponentInfo  !=  null)  {  return  pageComponentInfo;  }  }  	83	replace-5
442	flink_f2f5bd5b	buggy:  context:  throw  new  IllegalStateException( "Window   "  +  window  +   "  is  not  in  in-flight  window  set. ");  }  }  	context.key  =  key;  	110	add
443	jackrabbit-oak_f63d745a	buggy:  .array(Type.fromTag(type,  false),  name)  context:  PropertyState  createMultiState(String  name,  int  type,  Value[]  values,  PropertyDefinition  definition)  throws  RepositoryException  {  if  (!definition.isMultiple())  {  throw  new  ValueFormatException( "Cannot  set  value  array  to  single  value  property ");  }  Value[]  nonNullValues  =  compact(values);  int  targetType  =  getType(definition,  type);  if  (nonNullValues.length  ==  0)  {  return  MemoryPropertyBuilder          .array(Type.fromTag(type,  false),  name)  .getPropertyState();  }  else  if  (targetType  ==  type)  {  return  PropertyStates.createProperty(name,  Arrays.asList(nonNullValues));  	if  (targetType  ==  PropertyType.UNDEFINED)  {  targetType  =  PropertyType.STRING;  }  .array(Type.fromTag(targetType,  false),  name)  	433	replace-1
444	accumulo_adee0f12	buggy:  context:  public  void  putDelete(Text  columnFamily,  Text  columnQualifier,  long  timestamp)  {  put(columnFamily,  columnQualifier,  EMPTY_BYTES,  true,  timestamp,  true,  EMPTY_BYTES);  }  public  void  putDelete(Text  columnFamily,  Text  columnQualifier,  ColumnVisibility  columnVisibility,  long  timestamp)  {  put(columnFamily,  columnQualifier,  columnVisibility.getExpression(),  true,  timestamp,  true,  EMPTY_BYTES);  }  public  void  put(CharSequence  columnFamily,  CharSequence  columnQualifier,  Value  value)  {  put(columnFamily,  columnQualifier,  EMPTY_BYTES,  false,  0l,  false,  value.get());  	  if  (row  ==  null)  {  throw  new  IllegalArgumentException( "null  row ");  }  if  (colFamily  ==  null)  {  throw  new  IllegalArgumentException( "null  column  family ");  }  if  (colQualifier  ==  null)  {  throw  new  IllegalArgumentException( "null  column  qualifier ");  }  if  (colVisibility  ==  null)  {  throw  new  IllegalArgumentException( "null  column  visibility ");  }  	294	add
445	camel_1cab39f6	buggy:  parent.mkdirs();  context:  }  protected  void  loadStore()  throws  IOException  {  if  (!fileStore.exists())  {  LOG.debug( "Creating  filestore:  {} ",  fileStore);  File  parent  =  fileStore.getParentFile();      parent.mkdirs();  boolean  created  =  FileUtil.createNewFile(fileStore);  if  (!created)  {  throw  new  IOException( "Cannot  create  filestore:   "  +  fileStore);  }  }  	if  (parent  !=  null)  {  parent.mkdirs();  }  	293	replace-1
446	wicket_0374c040	buggy:  sb.append( "var  params  =  { ");  boolean  first  =  true;  if  (!first)  sb.append(',');  else  first  =  false;  sb.append('\'').append(curExtraParameter.getAjaxParameterName()).append( "':   ")  .append(curExtraParameter.getAjaxParameterCode());  sb.append( "};\n ");  if  (attributes.getExtraParameters().isEmpty())  {  sb.append( "attrs. ").append(AjaxAttributeName.EXTRA_PARAMETERS).append( "  =  params;\n ");  }  else  {  sb.append( "attrs. ").append(AjaxAttributeName.EXTRA_PARAMETERS).append( "  =  Wicket.merge(attrs. ")  .append(AjaxAttributeName.EXTRA_PARAMETERS).append( ",  params);\n ");  }  context:  public  CharSequence  getCallbackFunctionBody(CallbackParameter...  extraParameters)  {  AjaxRequestAttributes  attributes  =  getAttributes();  attributes.setEventNames();  CharSequence  attrsJson  =  renderAjaxAttributes(getComponent(),  attributes);  StringBuilder  sb  =  new  StringBuilder();  sb.append( "var  attrs  =   ");  sb.append(attrsJson);  sb.append( ";\n ");  sb.append( "var  params  =  { ");  boolean  first  =  true;  for  (CallbackParameter  curExtraParameter  :  extraParameters)  {  if  (curExtraParameter.getAjaxParameterName()  !=  null)  {  if  (!first)  sb.append(',');  else  	JSONArray  jsonArray  =  new  JSONArray();  try  {  JSONObject  object  =  new  JSONObject();  object.put( "name ",  curExtraParameter.getAjaxParameterName());  object.put( "value ",  new  JsonFunction(curExtraParameter.getAjaxParameterCode()));  jsonArray.put(object);  }  catch  (JSONException  e)  {  throw  new  WicketRuntimeException(e);  }  sb.append( "var  params  =   ").append(jsonArray).append( ";\n ");  sb.append( "attrs. ").append(AjaxAttributeName.EXTRA_PARAMETERS)  .append( "  =  params.concat(attrs. ")  .append(AjaxAttributeName.EXTRA_PARAMETERS).append( ");\n ");  	507	replace-18
447	jackrabbit-oak_4ed7bc8e	buggy:  @CheckForNull  return  sessionDelegate.perform(new  SessionOperation<PropertyImpl>()  {  public  PropertyImpl  perform()  throws  RepositoryException  {  String  oakName  =  sessionDelegate.getOakPathOrThrow(jcrName);  dlg.removeProperty(oakName);  return  null;  context:  if  (value  !=  null)  {  type  =  value.getType();  }  return  setProperty(name,  value,  type);  }  @CheckForNull  public  Property  setProperty(final  String  jcrName,  final  Value  value,  final  int  type)  throws  RepositoryException  {  checkStatus();      return  sessionDelegate.perform(new  SessionOperation<PropertyImpl>()  {      public  PropertyImpl  perform()  throws  RepositoryException  {  	@Nonnull  return  sessionDelegate.perform(new  SessionOperation<Property>()  {  public  Property  perform()  throws  RepositoryException  {  Property  property  =  getProperty(jcrName);  property.remove();  return  property;  String  oakName  =  sessionDelegate.getOakPathOrThrow(jcrName);  	305	replace-6
448	commons-math_061f5017	buggy:  loop  =  false;  context:  error  =  estimateError(yDotK,  y,  yTmp,  stepSize);  if  (error  <=  1.0)  {  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        //  rejecting  the  step  would  lead  to  a  too  small  next  step,  we  accept  it        loop  =  false;  	interpolator.storeTime(stepStart);  System.arraycopy(y,  0,  yTmp,  0,  y0.length);  hNew          =  0;  stepSize  =  0;  loop          =  false;  	296	replace-1
449	camel_6d63a502	buggy:  return   "Exchange[ "  +  (multiline  ?  answer.append(']').toString()  :  answer.toString().substring(2)  +   "] ");  return   "Exchange[ "  +  (multiline  ?  sb.append(']').toString()  :  sb.toString().substring(2)  +   "] ");  context:  }  else  {  answer.append(s);  }  if  (multiline)  {  answer.append(LS);  }  }  }      //  get  rid  of  the  leading  space  comma  if  needed      return   "Exchange[ "  +  (multiline  ?  answer.append(']').toString()  :  answer.toString().substring(2)  +   "] ");  }      //  get  rid  of  the  leading  space  comma  if  needed      return   "Exchange[ "  +  (multiline  ?  sb.append(']').toString()  :  sb.toString().substring(2)  +   "] ");  	sb  =  answer;  if  (multiline)  {  sb.insert(0,   "Exchange[ ");  sb.append( "] ");  return  sb.toString();  }  else  {  if  (sb.length()  >  0  &&  sb.charAt(0)  ==  ','  &&  sb.charAt(1)  ==  '  ')  {  sb.replace(0,  2,   " ");  }  sb.insert(0,   "Exchange[ ");  sb.append( "] ");    return  sb.toString();  }  	171	replace-2
450	maven_712c4fff	buggy:  context:  clone.setName(  original.getName()  );  clone.setDescription(  original.getDescription()  );  clone.setRequiredMavenVersion(  original.getRequiredMavenVersion()  );  clone.setPluginArtifact(  ArtifactUtils.copyArtifactSafe(  original.getPluginArtifact()  )  );  clone.setComponents(  clone(  original.getMojos(),  clone  )  );  clone.setId(  original.getId()  );  clone.setIsolatedRealm(  original.isIsolatedRealm()  );  clone.setSource(  original.getSource()  );  }  return  clone;  }  private  static  List<ComponentDescriptor<?>>  clone(  List<MojoDescriptor>  mojos,  PluginDescriptor  pluginDescriptor  )  {  List<ComponentDescriptor<?>>  clones  =  null;  	  clone.setDependencies(  original.getDependencies()  );  	99	add
451	jackrabbit-oak_f37ce716	buggy:  context:  private  final  BlobSerializer  blobSerializer  =  new  BlobSerializer()  {  public  String  serialize(Blob  blob)  {  if  (blob  instanceof  BlobStoreBlob)  {  return  ((BlobStoreBlob)  blob).getBlobId();  }  String  id;  	    String  reference  =  blob.getReference();  if(reference  !=  null){  id  =  blobStore.getBlobId(reference);  if(id  !=  null){  return  id;  }  }    	283	add
452	camel_9da2c05a	buggy:  answer.setDelayPattern(delayPattern);  answer.setExchangeFormatterRef(exchangeFormatterRef);  context:  }  if  (logExhaustedMessageHistory  !=  null)  {  answer.setLogExhaustedMessageHistory(CamelContextHelper.parseBoolean(context,  logExhaustedMessageHistory));  }  if  (disableRedelivery  !=  null)  {  if  (CamelContextHelper.parseBoolean(context,  disableRedelivery))  {  answer.setMaximumRedeliveries(0);  }  }  if  (delayPattern  !=  null)  {      answer.setDelayPattern(delayPattern);  }  if  (allowRedeliveryWhileStopping  !=  null)  {  answer.setAllowRedeliveryWhileStopping(CamelContextHelper.parseBoolean(context,  allowRedeliveryWhileStopping));  }  if  (exchangeFormatterRef  !=  null)  {      answer.setExchangeFormatterRef(exchangeFormatterRef);  }  	answer.setDelayPattern(CamelContextHelper.parseText(context,  delayPattern));  answer.setExchangeFormatterRef(CamelContextHelper.parseText(context,  exchangeFormatterRef));  	159	replace-2
453	commons-math_56434517	buggy:  context:  protected  MultistepIntegrator(final  String  name,  final  int  nSteps,  final  int  order,  final  double  minStep,  final  double  maxStep,  final  double[]  vecAbsoluteTolerance,  final  double[]  vecRelativeTolerance)  {  super(name,  minStep,  maxStep,  vecAbsoluteTolerance,  vecRelativeTolerance);  starter  =  new  DormandPrince853Integrator(minStep,  maxStep,  vecAbsoluteTolerance,  vecRelativeTolerance);  this.nSteps  =  nSteps;  exp  =  -1.0  /  order;  setSafety(0.9);  setMinReduction(0.2);  	MULTISTEP_STARTER_STOPPED_EARLY( "multistep  integrator  starter  stopped  early,  maybe  too  large  step  size "),  	165	add
454	camel_4a05eccf	buggy:  context:  return   "predicate ";  }  }  if  (getCompletionSizeExpression()  !=  null)  {  Integer  value  =  getCompletionSizeExpression().evaluate(exchange,  Integer.class);  if  (value  !=  null  &&  value  >  0)  {  int  size  =  exchange.getProperty(Exchange.AGGREGATED_SIZE,  1,  Integer.class);  if  (size  >=  value)  {  return   "size ";  }  }  }  if  (getCompletionSize()  >  0)  {  int  size  =  exchange.getProperty(Exchange.AGGREGATED_SIZE,  1,  Integer.class);  if  (size  >=  getCompletionSize())  {  return   "size ";  	}  else  {  return  null;  	316	add
455	wicket_d79d0192	buggy:  while  ((currentPage  *  rowsPerPage)  >=  getList().size())  context:  }  public  final  int  getCurrentPage()  {  while  ((currentPage  *  rowsPerPage)  >=  getList().size())  {  currentPage--;  }  return  currentPage;  }  	while  ((currentPage  >  0)  &&  ((currentPage  *  rowsPerPage)  >=  getList().size()))  	87	replace-1
456	wicket_917dd2b5	buggy:  if  (minifiedName  !=  null  &&  minifiedName  !=  NO_MINIFIED_NAME)  context:  }  private  String  internalGetMinifiedName()  {  String  minifiedName  =  MINIFIED_NAMES_CACHE.get(this);  if  (minifiedName  !=  null  &&  minifiedName  !=  NO_MINIFIED_NAME)  {  return  minifiedName;  }  String  name  =  getMinifiedName();  IResourceStreamLocator  locator  =  Application.get()  .getResourceSettings()  .getResourceStreamLocator();  	if  (minifiedName  !=  null)  	176	replace-1
457	jackrabbit-oak_44585b0c	buggy:  ImmutableTree  parent  =  (ImmutableTree)  moveCtx.rootBefore.getTree( "/ ");  TreePermission  tp  =  getPermissionProvider().getTreePermission(parent,  TreePermission.EMPTY);  tp  =  tp.getChildPermission(n,  parent.getChild(n).getNodeState());  context:  if  (moveCtx.containsMove(parentBefore,  parentAfter))  {  return  new  MoveAwarePermissionValidator(parentBefore,  parentAfter,  parentPermission,  parentValidator);  }  else  {  return  super.createValidator(parentBefore,  parentAfter,  parentPermission,  parentValidator);  }  }  private  Validator  visibleValidator(@Nonnull  Tree  source,      ImmutableTree  parent  =  (ImmutableTree)  moveCtx.rootBefore.getTree( "/ ");      TreePermission  tp  =  getPermissionProvider().getTreePermission(parent,  TreePermission.EMPTY);  for  (String  n  :  PathUtils.elements(source.getPath()))  {      tp  =  tp.getChildPermission(n,  parent.getChild(n).getNodeState());  }  Validator  validator  =  createValidator(source,  dest,  tp,  this);  	ImmutableTree  immutableTree  =  (ImmutableTree)  moveCtx.rootBefore.getTree( "/ ");  TreePermission  tp  =  getPermissionProvider().getTreePermission(immutableTree,  TreePermission.EMPTY);  immutableTree  =  immutableTree.getChild(n);  tp  =  tp.getChildPermission(n,  immutableTree.getNodeState());  	78	replace-3
458	accumulo_cfb832a1	buggy:  if  (update.isSetDeleteCell())  {  if  (update.isSetDeleteCell())  {  context:  Text  vizText  =  new  Text(update.getColVisibility());  viz  =  vizMap.get(vizText);  if  (viz  ==  null)  {  vizMap.put(vizText,  viz  =  new  ColumnVisibility(vizText));  }  }  byte[]  value  =  new  byte[0];  if  (update.isSetValue())  value  =  update.getValue();  if  (update.isSetTimestamp())  {    if  (update.isSetDeleteCell())  {  m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());  }  else  {  m.put(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz,  update.getTimestamp(),  new  Value(value));  }  }  else  {    if  (update.isSetDeleteCell())  {  m.putDelete(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz);  	if  (update.isSetDeleteCell()  &&  update.isDeleteCell())  {  if  (update.isSetDeleteCell()  &&  update.isDeleteCell())  {  	1127	replace-2
459	wicket_9dab1bb5	buggy:  return  unitString(seconds(),   "millisecond ",  locale);  context:  if  (minutes()  >=  1.0)  {  return  unitString(minutes(),   "minute ",  locale);  }  if  (seconds()  >=  1.0)  {  return  unitString(seconds(),   "second ",  locale);  }  return  unitString(seconds(),   "millisecond ",  locale);  }  else  {  return   "N/A ";  }  }  	return  unitString(getMilliseconds(),   "millisecond ",  locale);  	529	replace-1
460	accumulo_1b35d263	buggy:  context:  for  (ClientProperty  prop  :  ClientProperty.values())  if  (prop.getKey().equals(key))  return  prop;  return  null;  }  };  public  ClientConfiguration(List<?  extends  Configuration>  configs)  {  super(configs);  }  	this.setListDelimiter('\0');  	111	add
461	camel_5225e6e3	buggy:  buffer.append(KEY_NAME  +   "= ").append(id);  buffer.append( "( ").append(sourceId).append( ") ");  context:  .append(service.getClass().getSimpleName())  .append( "( ").append(ObjectHelper.getIdentityHashCode(service)).append( ") ");  return  createObjectName(buffer);  }  public  ObjectName  getObjectNameForThreadPool(CamelContext  context,  ThreadPoolExecutor  threadPool,  String  id,  String  sourceId)  throws  MalformedObjectNameException  {  StringBuilder  buffer  =  new  StringBuilder();  buffer.append(domainName).append( ": ");  buffer.append(KEY_CONTEXT  +   "= ").append(getContextId(context)).append( ", ");  buffer.append(KEY_TYPE  +   "= "  +  TYPE_THREAD_POOL  +   ", ");      buffer.append(KEY_NAME  +   "= ").append(id);  if  (sourceId  !=  null)  {      buffer.append( "( ").append(sourceId).append( ") ");  }  return  createObjectName(buffer);  	  String  name  =  id;  name  =  name  +   "( "  +  sourceId  +   ") ";  buffer.append(KEY_NAME  +   "= ").append(ObjectName.quote(name));  	257	replace-2
462	logging-log4j2_4b77622b	buggy:  context:  byte[]  buffer  =  null;  try  {  final  InputStream  configStream  =  configSource.getInputStream();  try  {  buffer  =  toByteArray(configStream);  }  finally  {  configStream.close();  }  final  InputSource  source  =  new  InputSource(new  ByteArrayInputStream(buffer));  final  Document  document  =  newDocumentBuilder().parse(source);  rootElement  =  document.getDocumentElement();  final  Map<String,  String>  attrs  =  processAttributes(rootNode,  rootElement);  final  StatusConfiguration  statusConfig  =  new  StatusConfiguration().withVerboseClasses(VERBOSE_CLASSES)  .withStatus(getDefaultStatus());  for  (final  Map.Entry<String,  String>  entry  :  attrs.entrySet())  {  final  String  key  =  entry.getKey();  final  String  value  =  getStrSubstitutor().replace(entry.getValue());  if  ( "status ".equalsIgnoreCase(key))  {  	source.setSystemId(configSource.getLocation());  	134	add
463	commons-math_48dde378	buggy:  context:  atan(tmp1,  0,  tmp2,  0);          //  atan(y  /  (r  -  x))  result[resultOffset]  =  ((tmp2[0]  <=  0)  ?  -FastMath.PI  :  FastMath.PI)  -  2  *  tmp2[0];  //  +/-pi  -  2  *  atan(y  /  (r  -  x))  for  (int  i  =  1;  i  <  tmp2.length;  ++i)  {  result[resultOffset  +  i]  =  -2  *  tmp2[i];  //  +/-pi  -  2  *  atan(y  /  (r  -  x))  }  }  }  	result[resultOffset]  =  FastMath.atan2(y[yOffset],  x[xOffset]);    	1419	add
464	wicket_b19a3d69	buggy:  context:  public  void  sendRedirect(String  location)  throws  IOException  {  redirectLocation  =  location;  }  	status  =  HttpServletResponse.SC_FOUND;  	607	add
465	logging-log4j2_f8a42197	buggy:  this.formatElements(sb,  0,  this.throwable.getStackTrace(),  this.extendedStackTrace,  ignorePackages);  context:  public  String  getExtendedStackTraceAsString(final  List<String>  ignorePackages)  {  final  StringBuilder  sb  =  new  StringBuilder(this.name);  final  String  msg  =  this.message;  if  (msg  !=  null)  {  sb.append( ":   ").append(msg);  }  sb.append(EOL);      this.formatElements(sb,  0,  this.throwable.getStackTrace(),  this.extendedStackTrace,  ignorePackages);  this.formatCause(sb,  this.causeProxy,  ignorePackages);  return  sb.toString();  }  public  String  getLocalizedMessage()  {  return  this.localizedMessage;  }  	StackTraceElement[]  causedTrace  =  this.throwable  !=  null  ?  this.throwable.getStackTrace()  :  null;  this.formatElements(sb,  0,  causedTrace,  this.extendedStackTrace,  ignorePackages);  	345	replace-1
466	commons-math_2123f780	buggy:  context:  public  Complex  add(Complex  rhs)  throws  NullArgumentException  {  MathUtils.checkNotNull(rhs);  return  createComplex(real  +  rhs.getReal(),  imaginary  +  rhs.getImaginary());  }  	if  (isNaN  ||  rhs.isNaN)  {  return  NaN;  }  	153	add
467	jackrabbit-oak_9d36bede	buggy:  context:  public  String  toString()  {  return   "VersionGCStats{ "  +   "ignoredGCDueToCheckPoint= "  +  ignoredGCDueToCheckPoint  +   ",  deletedDocGCCount= "  +  deletedDocGCCount  +   ",  splitDocGCCount= "  +  splitDocGCCount  +  '}';  }  }  }  	void  invalidateDocChildrenCache()  {  docChildrenCache.invalidateAll();  }    	143	add
468	camel_708e756d	buggy:  context:  protected  void  setAggregationStrategyOnExchange(Exchange  exchange,  AggregationStrategy  aggregationStrategy)  {  Map<?,  ?>  property  =  exchange.getProperty(Exchange.AGGREGATION_STRATEGY,  Map.class);  Map<Object,  AggregationStrategy>  map  =  CastUtils.cast(property);  if  (map  ==  null)  {  map  =  new  HashMap<Object,  AggregationStrategy>();  }  map.put(this,  aggregationStrategy);  exchange.setProperty(Exchange.AGGREGATION_STRATEGY,  map);  }  	}  else  {  map  =  new  HashMap<Object,  AggregationStrategy>(map);  	1005	add
469	wicket_e62ded51	buggy:  return  clazz.isAssignableFrom(object.getClass());  context:  public  boolean  visitChildren(final  Object  object)  {  return  true;  }  public  boolean  visitObject(final  Object  object)  {  return  clazz.isAssignableFrom(object.getClass());  }  }  	return  clazz  ==  null  ||  clazz.isAssignableFrom(object.getClass());  	48	replace-1
470	camel_d581c4a4	buggy:  throw  new  NoMessageIdException(exchange,  messageIdExpression);  context:  return   "IdempotentConsumer[ "  +  messageIdExpression  +   "  ->   "  +  processor  +   "] ";  }  public  void  process(Exchange  exchange)  throws  Exception  {  AsyncProcessorHelper.process(this,  exchange);  }  public  boolean  process(Exchange  exchange,  AsyncCallback  callback)  {  final  String  messageId  =  messageIdExpression.evaluate(exchange,  String.class);  if  (messageId  ==  null)  {      throw  new  NoMessageIdException(exchange,  messageIdExpression);  }  boolean  newKey;  if  (eager)  {  if  (idempotentRepository  instanceof  ExchangeIdempotentRepository)  {  	exchange.setException(new  NoMessageIdException(exchange,  messageIdExpression));  callback.done(true);  return  true;  	83	replace-1
471	camel_19b2aa31	buggy:  if  (routeId  !=  null)  {  MDC.put(MDC_ROUTE_ID,  routeId);  }  context:  }  if  (exchangeId  !=  null)  {  MDC.put(MDC_EXCHANGE_ID,  exchangeId);  }  if  (messageId  !=  null)  {  MDC.put(MDC_MESSAGE_ID,  messageId);  }  if  (correlationId  !=  null)  {  MDC.put(MDC_CORRELATION_ID,  correlationId);  }          if  (routeId  !=  null)  {          MDC.put(MDC_ROUTE_ID,  routeId);          }  if  (camelContextId  !=  null)  {  MDC.put(MDC_CAMEL_CONTEXT_ID,  camelContextId);  }  }  	if  (routeId  !=  null)  {  MDC.put(MDC_ROUTE_ID,  routeId);  }    	220	replace-3
472	camel_62b2042b	buggy:  context:  public  boolean  isAbstract()  {  return  true;  }  public  boolean  onExchange(Exchange  exchange)  {  String  id  =  EndpointHelper.getRouteIdFromEndpoint(exchange.getFromEndpoint());  return  EndpointHelper.matchPattern(id,  routeId);  }  public  boolean  matches()  {  	  if  (id  ==  null)  {  id  =  exchange.getFromRouteId();  }    	157	add
473	commons-math_c44bfe00	buggy:  --i;  context:  (FastMath.abs(root  -  ta)  <=  convergence)  &&  (FastMath.abs(root  -  previousEventTime)  <=  convergence))  {  do  {  ta  =  forward  ?  ta  +  convergence  :  ta  -  convergence;  ga  =  f.value(ta);  }  while  ((g0Positive  ^  (ga  >=  0))  &&  (forward  ^  (ta  >=  tb)));          --i;  	  if  (forward  ^  (ta  >=  tb))  {  --i;  }  else  {  pendingEventTime  =  root;  pendingEvent  =  true;  return  true;  }  	299	replace-1
474	accumulo_4d10c92f	buggy:  throw  new  IllegalArgumentException(e.getMessage());  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,   "Unable  to  load   "  +  className  +   "  as  type   "  +  OptionDescriber.class.getName()  +   ";  configure  with  'config'  instead ");  context:  private  static  String  setUpOptions(ClassLoader  classloader,  final  ConsoleReader  reader,  final  String  className,  final  Map<String,String>  options)  throws  IOException,  ShellCommandException  {  String  input;  OptionDescriber  skvi;  Class<?  extends  OptionDescriber>  clazz;  try  {  clazz  =  classloader.loadClass(className).asSubclass(OptionDescriber.class);  skvi  =  clazz.newInstance();  }  catch  (ClassNotFoundException  e)  {    throw  new  IllegalArgumentException(e.getMessage());  }  catch  (InstantiationException  e)  {  throw  new  IllegalArgumentException(e.getMessage());  	StringBuilder  msg  =  new  StringBuilder( "Unable  to  load   ").append(className);  if  (className.indexOf('.')  <  0)  {  msg.append( ";  did  you  use  a  fully  qualified  package  name? ");  }  else  {  msg.append( ";  class  not  found. ");  }  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,  msg.toString());  StringBuilder  msg  =  new  StringBuilder( "Loaded   ");  msg.append(className).append( "  but  it  does  not  implement   ");  msg.append(OptionDescriber.class.getSimpleName());  msg.append( ";  use  'config  -s'  instead. ");  throw  new  ShellCommandException(ErrorCode.INITIALIZATION_FAILURE,  msg.toString());  	178	replace-3
475	jackrabbit-oak_26041fe7	buggy:  if  (range1  ==  null  ||  range2  ==  null)  {  context:  public  int  compare(Revision  o1,  Revision  o2)  {  if  (o1.getClusterId()  ==  o2.getClusterId())  {  return  o1.compareRevisionTime(o2);  }  Revision  range1  =  getRevisionSeen(o1);  Revision  range2  =  getRevisionSeen(o2);  if  (range1  ==  FUTURE  &&  range2  ==  FUTURE)  {  return  o1.compareRevisionTimeThenClusterId(o2);  }      if  (range1  ==  null  ||  range2  ==  null)  {  return  o1.compareRevisionTimeThenClusterId(o2);  }  int  comp  =  range1.compareRevisionTimeThenClusterId(range2);  	if  (range1  ==  null  &&  range2  ==  null)  {  if  (range1  ==  null)  {  return  -1;  }  else  if  (range2  ==  null)  {  return  1;  }  	524	replace-1
476	jackrabbit-oak_84fb6b29	buggy:  return  !isRoot()  &&  !parent.base().hasChildNode(name)  &&  parent.hasChildNode(name);  context:  return  base();  }  public  boolean  exists()  {  return  head().getCurrentNodeState().exists();  }  public  boolean  isNew()  {      return  !isRoot()  &&  !parent.base().hasChildNode(name)  &&  parent.hasChildNode(name);  }  public  boolean  isModified()  {  return  head().isModified();  }  	return  exists()  &&  !base.exists();  	263	replace-1
477	commons-math_83f18d52	buggy:  int  j  =  4  *  n  -  1;  context:  private  boolean  flipIfWarranted(final  int  n,  final  int  step)  {  if  (1.5  *  work[pingPong]  <  work[4  *  (n  -  1)  +  pingPong])  {      int  j  =  4  *  n  -  1;  for  (int  i  =  0;  i  <  j;  i  +=  4)  {  for  (int  k  =  0;  k  <  4;  k  +=  step)  {  final  double  tmp  =  work[i  +  k];  work[i  +  k]  =  work[j  -  k];  work[j  -  k]  =  tmp;  }  j  -=  4;  }  	int  j  =  4  *  (n  -  1);  	1135	replace-1
478	accumulo_8ec4cb84	buggy:  if  (update.isSetDeleteCell())  {  m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());  }  else  {  m.put(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp(),  value);  }  m.put(update.getColFamily(),  update.getColQualifier(),  viz,  value);  context:  if  (update.isSetColVisibility())  {  viz  =  getCahcedCV(vizMap,  update.getColVisibility());  }  byte[]  value  =  new  byte[0];  if  (update.isSetValue())  value  =  update.getValue();  if  (update.isSetTimestamp())  {  if  (update.isSetDeleteCell())  {  m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());  }  else  {    if  (update.isSetDeleteCell())  {      m.putDelete(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp());    }  else  {      m.put(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp(),  value);    }  }  }  else  {      m.put(update.getColFamily(),  update.getColQualifier(),  viz,  value);  	m.put(update.getColFamily(),  update.getColQualifier(),  viz,  update.getTimestamp(),  value);  if  (update.isSetDeleteCell())  {  m.putDelete(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz);  }  else  {  m.put(new  Text(update.getColFamily()),  new  Text(update.getColQualifier()),  viz,  new  Value(value));  }  	1177	replace-6
479	wicket_5c592d85	buggy:  return  (IRequestTargetUrlCodingStrategy)entry.getValue();  context:  if  (caseSensitiveMounts  ==  false)  {  path  =  path.toLowerCase();  }  for  (final  Iterator  it  =  map.entrySet().iterator();  it.hasNext();)  {  final  Map.Entry  entry  =  (Entry)it.next();  final  String  key  =  (String)entry.getKey();  if  (path.startsWith(key))  {  return  (IRequestTargetUrlCodingStrategy)entry.getValue();  }  }  	String  remainder  =  path.substring(key.length());  if  (remainder.length()  ==  0  ||  remainder.startsWith( "/ "))  return  (IRequestTargetUrlCodingStrategy)entry.getValue();  	971	replace-1
480	jackrabbit-oak_00df38d2	buggy:  &&  (writeState  ==  null  ||  !writeState.nodes.containsKey(name)))  {  context:  public  <T>  NodeBuilder  setProperty(String  name,  T  value,  Type<T>  type)  {  setProperty(PropertyStates.createProperty(name,  value,  type));  return  this;  }  public  NodeBuilder  child(String  name)  {  read();  //  shortcut  when  dealing  with  a  read-only  child  node  if  (baseState  !=  null  &&  baseState.hasChildNode(name)      &&  (writeState  ==  null  ||  !writeState.nodes.containsKey(name)))  {  return  createChildBuilder(name);  }  write();  assert  writeState  !=  null;  //  guaranteed  by  write()  	&&  (writeState  ==  null  ||  (writeState.base  ==  baseState  &&  !writeState.nodes.containsKey(name))))  {  	425	replace-1
481	wicket_ed780cc7	buggy:  private  static  final  String  PATH_PATTERN  =   "^(/[-\\w:@&?=+,.!/~*'%$_;]*)?$ ";  context:  private  static  final  String  SCHEME_PATTERN  =   "^[ "  +  SCHEME_CHARS  +   "].*$ ";  private  static  final  String  AUTHORITY_PATTERN  =   "^(.+(:.*)?@)?([ "  +  AUTHORITY_CHARS  +   "]*)(:\\d*)?(.*)? ";  private  static  final  int  PARSE_AUTHORITY_HOST_IP  =  3;  private  static  final  int  PARSE_AUTHORITY_PORT  =  4;  private  static  final  int  PARSE_AUTHORITY_EXTRA  =  5;  //  Should  always  be  empty.  private  static  final  String  PATH_PATTERN  =   "^(/[-\\w:@&?=+,.!/~*'%$_;]*)?$ ";  private  static  final  String  QUERY_PATTERN  =   "^(.*)$ ";  private  static  final  String  LEGAL_ASCII_PATTERN  =   "^[\\x00-\\x7F]+$ ";  private  static  final  String  IP_V4_DOMAIN_PATTERN  =   "^(\\d{1,3})[.](\\d{1,3})[.](\\d{1,3})[.](\\d{1,3})$ ";  private  static  final  String  DOMAIN_PATTERN  =   "^ "  +  ATOM  +   "(\\. "  +  ATOM  +   ")*$ ";  	private  static  final  String  PATH_PATTERN  =   "^(/[-\\w:@&?=+,.!/~*'%$_;\\(\\)]*)?$ ";  	118	replace-1
482	logging-log4j2_ed951c76	buggy:  LOGGER.warn( "No  Root  logger  was  configured,  using  default ");  return;  context:  LOGGER.error( "Unknown  object  \ " "  +  child.getName()  +   "\ "  of  type   "  +  child.getObject().getClass().getName()  +   "  is  ignored ");  }  }  if  (!setLoggers)  {  LOGGER.warn( "No  Loggers  were  configured,  using  default.  Is  the  Loggers  element  missing? ");  setToDefault();  return;  }  else  if  (!setRoot)  {      LOGGER.warn( "No  Root  logger  was  configured,  using  default ");  setToDefault();      return;  }  for  (final  Map.Entry<String,  LoggerConfig>  entry  :  loggers.entrySet())  {  final  LoggerConfig  l  =  entry.getValue();  for  (final  AppenderRef  ref  :  l.getAppenderRefs())  {  	LOGGER.warn( "No  Root  logger  was  configured,  creating  default  ERROR-level  Root  logger  with  Console  appender ");  	209	replace-2
483	jackrabbit-oak_74f22886	buggy:  this(host,  port,  store,  false,  5000);  context:  private  SslContext  sslContext;  private  boolean  active  =  false;  private  int  failedRequests;  private  long  lastSuccessfulRequest;  private  volatile  String  state;  private  final  Object  sync  =  new  Object();  private  final  AtomicBoolean  running  =  new  AtomicBoolean(true);  public  StandbyClient(String  host,  int  port,  SegmentStore  store)  throws  SSLException  {      this(host,  port,  store,  false,  5000);  }  public  StandbyClient(String  host,  int  port,  SegmentStore  store,  boolean  secure,  int  readTimeoutMs)  throws  SSLException  {  this.state  =  STATUS_INITIALIZING;  this.lastSuccessfulRequest  =  -1;  this.failedRequests  =  0;  this.host  =  host;  this.port  =  port;  	this(host,  port,  store,  false,  10000);  	84	replace-1
484	wicket_5cdc1c8d	buggy:  return  getApplication().getPageSettings().getCallListenerInterfaceAfterExpiry();  context:  public  final  List<?  extends  Behavior>  getBehaviors()  {  return  getBehaviors(null);  }  public  boolean  canCallListenerInterfaceAfterExpiry()  {  return  getApplication().getPageSettings().getCallListenerInterfaceAfterExpiry();  }  }  	return  getApplication().getPageSettings()  .getCallListenerInterfaceAfterExpiry()  ||  isStateless();  	4547	replace-1
485	camel_d57f402b	buggy:  InputStream  is  =  getByteStream();  return  camelContext.getTypeConverter().convertTo(Reader.class,  is);  context:  }  catch  (IOException  e)  {  }  }  return  getUri(systemId);  }  public  Reader  getCharacterStream()  {      InputStream  is  =  getByteStream();      return  camelContext.getTypeConverter().convertTo(Reader.class,  is);  }  public  void  setCharacterStream(Reader  reader)  {  }  	return  null;  	120	replace-2
486	jackrabbit-oak_00b9bc52	buggy:  }  else  if  (c  ==  '  ')  {  context:  if  (c  ==  '\\')  {  escaped  =  true;  if  (parseIndex  >=  text.length())  {  throw  getSyntaxError( "escaped  char ");  }  c  =  text.charAt(parseIndex++);  buff.append(c);  }  else  if  (c  ==  '^')  {  boost  =   " ";  break;      }  else  if  (c  ==  '  ')  {  break;  	}  else  if  (c  <=  '  ')  {  while  (parseIndex  <  text.length())  {  c  =  text.charAt(parseIndex);  if  (c  >  '  ')  {  break;  }  parseIndex++;  }  	166	replace-1
487	logging-log4j2_7b9e48e8	buggy:  return  new  File(URLDecoder.decode(uri.toURL().getFile(),   "UTF8 "));  context:  }  if  (uri.getScheme()  ==  null)  {  try  {  uri  =  new  File(uri.getPath()).toURI();  }  catch  (final  Exception  ex)  {  LOGGER.warn( "Invalid  URI   "  +  uri);  return  null;  }  }  try  {      return  new  File(URLDecoder.decode(uri.toURL().getFile(),   "UTF8 "));  }  catch  (final  MalformedURLException  ex)  {  LOGGER.warn( "Invalid  URL   "  +  uri,  ex);  }  catch  (final  UnsupportedEncodingException  uee)  {  LOGGER.warn( "Invalid  encoding:  UTF8 ",  uee);  	String  fileName  =  uri.toURL().getFile();  if  (new  File(fileName).exists())  {  return  new  File(fileName);  }  return  new  File(URLDecoder.decode(fileName,   "UTF8 "));  	66	replace-1
488	jackrabbit-oak_093b9128	buggy:  auth.removeProperty(relPath);  context:  private  void  syncProperties(ExternalIdentity  ext,  Authorizable  auth,  Map<String,  String>  mapping)  throws  RepositoryException  {  Map<String,  ?>  properties  =  ext.getProperties();  for  (Map.Entry<String,  String>  entry:  mapping.entrySet())  {  String  relPath  =  entry.getKey();  String  name  =  entry.getValue();  Object  obj  =  properties.get(name);  if  (obj  ==  null)  {          auth.removeProperty(relPath);  }  else  {  if  (obj  instanceof  Collection)  {  auth.setProperty(relPath,  createValues((Collection)  obj));  	int  nameLen  =  name.length();  if  (nameLen  >  1  &&  name.charAt(0)  ==  ' "'  &&  name.charAt(nameLen-1)  ==  ' "')  {  auth.setProperty(relPath,  valueFactory.createValue(name.substring(1,  nameLen  -  1)));  }  else  {  auth.removeProperty(relPath);  }  	647	replace-1
489	commons-math_d4f978dd	buggy:  while  ((i  >=  begin)  &&  (saved  <  work[i]))  {  work[i  +  1]  =  work[i];  i--;  context:  private  void  insertionSort(final  double[]  work,  final  int  begin,  final  int  end)  {  for  (int  j  =  begin  +  1;  j  <  end;  j++)  {  final  double  saved  =  work[j];  int  i  =  j  -  1;      while  ((i  >=  begin)  &&  (saved  <  work[i]))  {      work[i  +  1]  =  work[i];      i--;  	while  (i  >=  begin)  {  final  double  wi  =  work[i];  if  (saved  <  wi  ||  Double.isNaN(wi))  {  work[i  +  1]  =  wi;  i--;  }  else  {  break;  }  	447	replace-3
490	wicket_961f2477	buggy:  if  (qp.indexOf('=')  ==  -1)  String  parts[]  =  Strings.split(qp,  '=');  return  new  QueryParameter(decodeParameter(parts[0],  charset),  decodeParameter(parts[1],  charset));  context:  }  private  static  QueryParameter  parseQueryParameter(final  String  qp,  final  Charset  charset)  {  if  (qp.indexOf('=')  ==  -1)  {  return  new  QueryParameter(decodeParameter(qp,  charset),   " ");  }  String  parts[]  =  Strings.split(qp,  '=');  return  new  QueryParameter(decodeParameter(parts[0],  charset),  decodeParameter(parts[1],  	int  idxOfEquals  =  qp.indexOf('=');  if  (idxOfEquals  ==  -1)  String  parameterName  =  qp.substring(0,  idxOfEquals);  String  parameterValue  =  qp.substring(idxOfEquals  +  1);  return  new  QueryParameter(decodeParameter(parameterName,  charset),  decodeParameter(parameterValue,  charset));  	340	replace-4