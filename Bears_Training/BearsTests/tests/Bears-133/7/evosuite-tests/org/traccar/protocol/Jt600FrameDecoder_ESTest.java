/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 10 01:46:26 GMT 2019
 */

package org.traccar.protocol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.text.ParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.channel.local.DefaultLocalClientChannelFactory;
import org.jboss.netty.channel.local.LocalChannel;
import org.junit.runner.RunWith;
import org.traccar.protocol.Jt600FrameDecoder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Jt600FrameDecoder_ESTest extends Jt600FrameDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Jt600FrameDecoder jt600FrameDecoder0 = new Jt600FrameDecoder();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1024);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      try { 
        jt600FrameDecoder0.decode((ChannelHandlerContext) null, localChannel0, byteBufferBackedChannelBuffer0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.protocol.Jt600FrameDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Jt600FrameDecoder jt600FrameDecoder0 = new Jt600FrameDecoder();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      try { 
        jt600FrameDecoder0.decode((ChannelHandlerContext) null, localChannel0, (ChannelBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.protocol.Jt600FrameDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Jt600FrameDecoder jt600FrameDecoder0 = new Jt600FrameDecoder();
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory();
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(4297);
      Object object0 = jt600FrameDecoder0.decode((ChannelHandlerContext) null, (Channel) null, channelBuffer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Jt600FrameDecoder jt600FrameDecoder0 = new Jt600FrameDecoder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(1024);
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.copy(0, 10);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(channelBuffer0);
      try { 
        jt600FrameDecoder0.decode((ChannelHandlerContext) null, (Channel) null, duplicatedChannelBuffer0);
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.traccar.protocol.Jt600FrameDecoder", e);
      }
  }
}
