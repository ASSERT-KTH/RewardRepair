/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 10 04:17:37 GMT 2019
 */

package org.traccar.protocol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.SocketAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.channel.local.DefaultLocalServerChannelFactory;
import org.jboss.netty.channel.local.LocalServerChannel;
import org.junit.runner.RunWith;
import org.traccar.protocol.GoSafeProtocol;
import org.traccar.protocol.GoSafeProtocolDecoder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GoSafeProtocolDecoder_ESTest extends GoSafeProtocolDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GoSafeProtocol goSafeProtocol0 = new GoSafeProtocol();
      GoSafeProtocolDecoder goSafeProtocolDecoder0 = new GoSafeProtocolDecoder(goSafeProtocol0);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("meiligao", 0);
      try { 
        goSafeProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, defaultChannelPipeline0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jboss.netty.channel.DefaultChannelPipeline cannot be cast to java.lang.String
         //
         verifyException("org.traccar.protocol.GoSafeProtocolDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GoSafeProtocol goSafeProtocol0 = new GoSafeProtocol();
      GoSafeProtocolDecoder goSafeProtocolDecoder0 = new GoSafeProtocolDecoder(goSafeProtocol0);
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      LocalServerChannel localServerChannel0 = defaultLocalServerChannelFactory0.newChannel(defaultChannelPipeline0);
      try { 
        goSafeProtocolDecoder0.decode(localServerChannel0, (SocketAddress) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GoSafeProtocol goSafeProtocol0 = new GoSafeProtocol();
      GoSafeProtocolDecoder goSafeProtocolDecoder0 = new GoSafeProtocolDecoder(goSafeProtocol0);
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress("meiligao", 0);
      Object object0 = goSafeProtocolDecoder0.decode((Channel) null, mockInetSocketAddress0, "meiligao");
      assertNull(object0);
  }
}
